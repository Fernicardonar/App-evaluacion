
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Usuario
 * 
 */
export type Usuario = $Result.DefaultSelection<Prisma.$UsuarioPayload>
/**
 * Model Estudiante
 * 
 */
export type Estudiante = $Result.DefaultSelection<Prisma.$EstudiantePayload>
/**
 * Model Practica
 * 
 */
export type Practica = $Result.DefaultSelection<Prisma.$PracticaPayload>
/**
 * Model Evaluacion
 * 
 */
export type Evaluacion = $Result.DefaultSelection<Prisma.$EvaluacionPayload>
/**
 * Model ComponenteEvaluacion
 * 
 */
export type ComponenteEvaluacion = $Result.DefaultSelection<Prisma.$ComponenteEvaluacionPayload>
/**
 * Model ItemEvaluacion
 * 
 */
export type ItemEvaluacion = $Result.DefaultSelection<Prisma.$ItemEvaluacionPayload>
/**
 * Model DescripcionFinal
 * 
 */
export type DescripcionFinal = $Result.DefaultSelection<Prisma.$DescripcionFinalPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const Rol: {
  docente: 'docente',
  admin: 'admin'
};

export type Rol = (typeof Rol)[keyof typeof Rol]

}

export type Rol = $Enums.Rol

export const Rol: typeof $Enums.Rol

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Usuarios
 * const usuarios = await prisma.usuario.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Usuarios
   * const usuarios = await prisma.usuario.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.usuario`: Exposes CRUD operations for the **Usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.UsuarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.estudiante`: Exposes CRUD operations for the **Estudiante** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Estudiantes
    * const estudiantes = await prisma.estudiante.findMany()
    * ```
    */
  get estudiante(): Prisma.EstudianteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.practica`: Exposes CRUD operations for the **Practica** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Practicas
    * const practicas = await prisma.practica.findMany()
    * ```
    */
  get practica(): Prisma.PracticaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.evaluacion`: Exposes CRUD operations for the **Evaluacion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Evaluacions
    * const evaluacions = await prisma.evaluacion.findMany()
    * ```
    */
  get evaluacion(): Prisma.EvaluacionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.componenteEvaluacion`: Exposes CRUD operations for the **ComponenteEvaluacion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ComponenteEvaluacions
    * const componenteEvaluacions = await prisma.componenteEvaluacion.findMany()
    * ```
    */
  get componenteEvaluacion(): Prisma.ComponenteEvaluacionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.itemEvaluacion`: Exposes CRUD operations for the **ItemEvaluacion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ItemEvaluacions
    * const itemEvaluacions = await prisma.itemEvaluacion.findMany()
    * ```
    */
  get itemEvaluacion(): Prisma.ItemEvaluacionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.descripcionFinal`: Exposes CRUD operations for the **DescripcionFinal** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DescripcionFinals
    * const descripcionFinals = await prisma.descripcionFinal.findMany()
    * ```
    */
  get descripcionFinal(): Prisma.DescripcionFinalDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.6.0
   * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Usuario: 'Usuario',
    Estudiante: 'Estudiante',
    Practica: 'Practica',
    Evaluacion: 'Evaluacion',
    ComponenteEvaluacion: 'ComponenteEvaluacion',
    ItemEvaluacion: 'ItemEvaluacion',
    DescripcionFinal: 'DescripcionFinal'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "usuario" | "estudiante" | "practica" | "evaluacion" | "componenteEvaluacion" | "itemEvaluacion" | "descripcionFinal"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Usuario: {
        payload: Prisma.$UsuarioPayload<ExtArgs>
        fields: Prisma.UsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findFirst: {
            args: Prisma.UsuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findMany: {
            args: Prisma.UsuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          create: {
            args: Prisma.UsuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          createMany: {
            args: Prisma.UsuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          delete: {
            args: Prisma.UsuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          update: {
            args: Prisma.UsuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UsuarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          upsert: {
            args: Prisma.UsuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.UsuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioCountArgs<ExtArgs>
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      Estudiante: {
        payload: Prisma.$EstudiantePayload<ExtArgs>
        fields: Prisma.EstudianteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EstudianteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstudiantePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EstudianteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstudiantePayload>
          }
          findFirst: {
            args: Prisma.EstudianteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstudiantePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EstudianteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstudiantePayload>
          }
          findMany: {
            args: Prisma.EstudianteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstudiantePayload>[]
          }
          create: {
            args: Prisma.EstudianteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstudiantePayload>
          }
          createMany: {
            args: Prisma.EstudianteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EstudianteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstudiantePayload>[]
          }
          delete: {
            args: Prisma.EstudianteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstudiantePayload>
          }
          update: {
            args: Prisma.EstudianteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstudiantePayload>
          }
          deleteMany: {
            args: Prisma.EstudianteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EstudianteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EstudianteUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstudiantePayload>[]
          }
          upsert: {
            args: Prisma.EstudianteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstudiantePayload>
          }
          aggregate: {
            args: Prisma.EstudianteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEstudiante>
          }
          groupBy: {
            args: Prisma.EstudianteGroupByArgs<ExtArgs>
            result: $Utils.Optional<EstudianteGroupByOutputType>[]
          }
          count: {
            args: Prisma.EstudianteCountArgs<ExtArgs>
            result: $Utils.Optional<EstudianteCountAggregateOutputType> | number
          }
        }
      }
      Practica: {
        payload: Prisma.$PracticaPayload<ExtArgs>
        fields: Prisma.PracticaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PracticaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PracticaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PracticaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PracticaPayload>
          }
          findFirst: {
            args: Prisma.PracticaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PracticaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PracticaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PracticaPayload>
          }
          findMany: {
            args: Prisma.PracticaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PracticaPayload>[]
          }
          create: {
            args: Prisma.PracticaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PracticaPayload>
          }
          createMany: {
            args: Prisma.PracticaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PracticaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PracticaPayload>[]
          }
          delete: {
            args: Prisma.PracticaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PracticaPayload>
          }
          update: {
            args: Prisma.PracticaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PracticaPayload>
          }
          deleteMany: {
            args: Prisma.PracticaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PracticaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PracticaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PracticaPayload>[]
          }
          upsert: {
            args: Prisma.PracticaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PracticaPayload>
          }
          aggregate: {
            args: Prisma.PracticaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePractica>
          }
          groupBy: {
            args: Prisma.PracticaGroupByArgs<ExtArgs>
            result: $Utils.Optional<PracticaGroupByOutputType>[]
          }
          count: {
            args: Prisma.PracticaCountArgs<ExtArgs>
            result: $Utils.Optional<PracticaCountAggregateOutputType> | number
          }
        }
      }
      Evaluacion: {
        payload: Prisma.$EvaluacionPayload<ExtArgs>
        fields: Prisma.EvaluacionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EvaluacionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EvaluacionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionPayload>
          }
          findFirst: {
            args: Prisma.EvaluacionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EvaluacionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionPayload>
          }
          findMany: {
            args: Prisma.EvaluacionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionPayload>[]
          }
          create: {
            args: Prisma.EvaluacionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionPayload>
          }
          createMany: {
            args: Prisma.EvaluacionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EvaluacionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionPayload>[]
          }
          delete: {
            args: Prisma.EvaluacionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionPayload>
          }
          update: {
            args: Prisma.EvaluacionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionPayload>
          }
          deleteMany: {
            args: Prisma.EvaluacionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EvaluacionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EvaluacionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionPayload>[]
          }
          upsert: {
            args: Prisma.EvaluacionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluacionPayload>
          }
          aggregate: {
            args: Prisma.EvaluacionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEvaluacion>
          }
          groupBy: {
            args: Prisma.EvaluacionGroupByArgs<ExtArgs>
            result: $Utils.Optional<EvaluacionGroupByOutputType>[]
          }
          count: {
            args: Prisma.EvaluacionCountArgs<ExtArgs>
            result: $Utils.Optional<EvaluacionCountAggregateOutputType> | number
          }
        }
      }
      ComponenteEvaluacion: {
        payload: Prisma.$ComponenteEvaluacionPayload<ExtArgs>
        fields: Prisma.ComponenteEvaluacionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ComponenteEvaluacionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComponenteEvaluacionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ComponenteEvaluacionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComponenteEvaluacionPayload>
          }
          findFirst: {
            args: Prisma.ComponenteEvaluacionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComponenteEvaluacionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ComponenteEvaluacionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComponenteEvaluacionPayload>
          }
          findMany: {
            args: Prisma.ComponenteEvaluacionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComponenteEvaluacionPayload>[]
          }
          create: {
            args: Prisma.ComponenteEvaluacionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComponenteEvaluacionPayload>
          }
          createMany: {
            args: Prisma.ComponenteEvaluacionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ComponenteEvaluacionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComponenteEvaluacionPayload>[]
          }
          delete: {
            args: Prisma.ComponenteEvaluacionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComponenteEvaluacionPayload>
          }
          update: {
            args: Prisma.ComponenteEvaluacionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComponenteEvaluacionPayload>
          }
          deleteMany: {
            args: Prisma.ComponenteEvaluacionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ComponenteEvaluacionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ComponenteEvaluacionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComponenteEvaluacionPayload>[]
          }
          upsert: {
            args: Prisma.ComponenteEvaluacionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ComponenteEvaluacionPayload>
          }
          aggregate: {
            args: Prisma.ComponenteEvaluacionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateComponenteEvaluacion>
          }
          groupBy: {
            args: Prisma.ComponenteEvaluacionGroupByArgs<ExtArgs>
            result: $Utils.Optional<ComponenteEvaluacionGroupByOutputType>[]
          }
          count: {
            args: Prisma.ComponenteEvaluacionCountArgs<ExtArgs>
            result: $Utils.Optional<ComponenteEvaluacionCountAggregateOutputType> | number
          }
        }
      }
      ItemEvaluacion: {
        payload: Prisma.$ItemEvaluacionPayload<ExtArgs>
        fields: Prisma.ItemEvaluacionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ItemEvaluacionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemEvaluacionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ItemEvaluacionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemEvaluacionPayload>
          }
          findFirst: {
            args: Prisma.ItemEvaluacionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemEvaluacionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ItemEvaluacionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemEvaluacionPayload>
          }
          findMany: {
            args: Prisma.ItemEvaluacionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemEvaluacionPayload>[]
          }
          create: {
            args: Prisma.ItemEvaluacionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemEvaluacionPayload>
          }
          createMany: {
            args: Prisma.ItemEvaluacionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ItemEvaluacionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemEvaluacionPayload>[]
          }
          delete: {
            args: Prisma.ItemEvaluacionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemEvaluacionPayload>
          }
          update: {
            args: Prisma.ItemEvaluacionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemEvaluacionPayload>
          }
          deleteMany: {
            args: Prisma.ItemEvaluacionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ItemEvaluacionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ItemEvaluacionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemEvaluacionPayload>[]
          }
          upsert: {
            args: Prisma.ItemEvaluacionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ItemEvaluacionPayload>
          }
          aggregate: {
            args: Prisma.ItemEvaluacionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateItemEvaluacion>
          }
          groupBy: {
            args: Prisma.ItemEvaluacionGroupByArgs<ExtArgs>
            result: $Utils.Optional<ItemEvaluacionGroupByOutputType>[]
          }
          count: {
            args: Prisma.ItemEvaluacionCountArgs<ExtArgs>
            result: $Utils.Optional<ItemEvaluacionCountAggregateOutputType> | number
          }
        }
      }
      DescripcionFinal: {
        payload: Prisma.$DescripcionFinalPayload<ExtArgs>
        fields: Prisma.DescripcionFinalFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DescripcionFinalFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescripcionFinalPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DescripcionFinalFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescripcionFinalPayload>
          }
          findFirst: {
            args: Prisma.DescripcionFinalFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescripcionFinalPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DescripcionFinalFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescripcionFinalPayload>
          }
          findMany: {
            args: Prisma.DescripcionFinalFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescripcionFinalPayload>[]
          }
          create: {
            args: Prisma.DescripcionFinalCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescripcionFinalPayload>
          }
          createMany: {
            args: Prisma.DescripcionFinalCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DescripcionFinalCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescripcionFinalPayload>[]
          }
          delete: {
            args: Prisma.DescripcionFinalDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescripcionFinalPayload>
          }
          update: {
            args: Prisma.DescripcionFinalUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescripcionFinalPayload>
          }
          deleteMany: {
            args: Prisma.DescripcionFinalDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DescripcionFinalUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DescripcionFinalUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescripcionFinalPayload>[]
          }
          upsert: {
            args: Prisma.DescripcionFinalUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DescripcionFinalPayload>
          }
          aggregate: {
            args: Prisma.DescripcionFinalAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDescripcionFinal>
          }
          groupBy: {
            args: Prisma.DescripcionFinalGroupByArgs<ExtArgs>
            result: $Utils.Optional<DescripcionFinalGroupByOutputType>[]
          }
          count: {
            args: Prisma.DescripcionFinalCountArgs<ExtArgs>
            result: $Utils.Optional<DescripcionFinalCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    usuario?: UsuarioOmit
    estudiante?: EstudianteOmit
    practica?: PracticaOmit
    evaluacion?: EvaluacionOmit
    componenteEvaluacion?: ComponenteEvaluacionOmit
    itemEvaluacion?: ItemEvaluacionOmit
    descripcionFinal?: DescripcionFinalOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsuarioCountOutputType
   */

  export type UsuarioCountOutputType = {
    evaluaciones: number
  }

  export type UsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    evaluaciones?: boolean | UsuarioCountOutputTypeCountEvaluacionesArgs
  }

  // Custom InputTypes
  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioCountOutputType
     */
    select?: UsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountEvaluacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EvaluacionWhereInput
  }


  /**
   * Count Type EstudianteCountOutputType
   */

  export type EstudianteCountOutputType = {
    evaluaciones: number
  }

  export type EstudianteCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    evaluaciones?: boolean | EstudianteCountOutputTypeCountEvaluacionesArgs
  }

  // Custom InputTypes
  /**
   * EstudianteCountOutputType without action
   */
  export type EstudianteCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstudianteCountOutputType
     */
    select?: EstudianteCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EstudianteCountOutputType without action
   */
  export type EstudianteCountOutputTypeCountEvaluacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EvaluacionWhereInput
  }


  /**
   * Count Type PracticaCountOutputType
   */

  export type PracticaCountOutputType = {
    evaluaciones: number
  }

  export type PracticaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    evaluaciones?: boolean | PracticaCountOutputTypeCountEvaluacionesArgs
  }

  // Custom InputTypes
  /**
   * PracticaCountOutputType without action
   */
  export type PracticaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PracticaCountOutputType
     */
    select?: PracticaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PracticaCountOutputType without action
   */
  export type PracticaCountOutputTypeCountEvaluacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EvaluacionWhereInput
  }


  /**
   * Count Type EvaluacionCountOutputType
   */

  export type EvaluacionCountOutputType = {
    componentes: number
  }

  export type EvaluacionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    componentes?: boolean | EvaluacionCountOutputTypeCountComponentesArgs
  }

  // Custom InputTypes
  /**
   * EvaluacionCountOutputType without action
   */
  export type EvaluacionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EvaluacionCountOutputType
     */
    select?: EvaluacionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EvaluacionCountOutputType without action
   */
  export type EvaluacionCountOutputTypeCountComponentesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ComponenteEvaluacionWhereInput
  }


  /**
   * Count Type ComponenteEvaluacionCountOutputType
   */

  export type ComponenteEvaluacionCountOutputType = {
    items: number
  }

  export type ComponenteEvaluacionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | ComponenteEvaluacionCountOutputTypeCountItemsArgs
  }

  // Custom InputTypes
  /**
   * ComponenteEvaluacionCountOutputType without action
   */
  export type ComponenteEvaluacionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComponenteEvaluacionCountOutputType
     */
    select?: ComponenteEvaluacionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ComponenteEvaluacionCountOutputType without action
   */
  export type ComponenteEvaluacionCountOutputTypeCountItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ItemEvaluacionWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioMinAggregateOutputType = {
    id_usuario: string | null
    nombre: string | null
    correo: string | null
    cedula: string | null
    contraseña_hash: string | null
    rol: $Enums.Rol | null
  }

  export type UsuarioMaxAggregateOutputType = {
    id_usuario: string | null
    nombre: string | null
    correo: string | null
    cedula: string | null
    contraseña_hash: string | null
    rol: $Enums.Rol | null
  }

  export type UsuarioCountAggregateOutputType = {
    id_usuario: number
    nombre: number
    correo: number
    cedula: number
    contraseña_hash: number
    rol: number
    _all: number
  }


  export type UsuarioMinAggregateInputType = {
    id_usuario?: true
    nombre?: true
    correo?: true
    cedula?: true
    contraseña_hash?: true
    rol?: true
  }

  export type UsuarioMaxAggregateInputType = {
    id_usuario?: true
    nombre?: true
    correo?: true
    cedula?: true
    contraseña_hash?: true
    rol?: true
  }

  export type UsuarioCountAggregateInputType = {
    id_usuario?: true
    nombre?: true
    correo?: true
    cedula?: true
    contraseña_hash?: true
    rol?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario to aggregate.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type UsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithAggregationInput | UsuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: UsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    id_usuario: string
    nombre: string
    correo: string
    cedula: string
    contraseña_hash: string
    rol: $Enums.Rol
    _count: UsuarioCountAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends UsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    nombre?: boolean
    correo?: boolean
    cedula?: boolean
    contraseña_hash?: boolean
    rol?: boolean
    evaluaciones?: boolean | Usuario$evaluacionesArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    nombre?: boolean
    correo?: boolean
    cedula?: boolean
    contraseña_hash?: boolean
    rol?: boolean
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    nombre?: boolean
    correo?: boolean
    cedula?: boolean
    contraseña_hash?: boolean
    rol?: boolean
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectScalar = {
    id_usuario?: boolean
    nombre?: boolean
    correo?: boolean
    cedula?: boolean
    contraseña_hash?: boolean
    rol?: boolean
  }

  export type UsuarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_usuario" | "nombre" | "correo" | "cedula" | "contraseña_hash" | "rol", ExtArgs["result"]["usuario"]>
  export type UsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    evaluaciones?: boolean | Usuario$evaluacionesArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UsuarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuario"
    objects: {
      evaluaciones: Prisma.$EvaluacionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_usuario: string
      nombre: string
      correo: string
      cedula: string
      contraseña_hash: string
      rol: $Enums.Rol
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type UsuarioGetPayload<S extends boolean | null | undefined | UsuarioDefaultArgs> = $Result.GetResult<Prisma.$UsuarioPayload, S>

  type UsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UsuarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface UsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario'], meta: { name: 'Usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {UsuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuarioFindUniqueArgs>(args: SelectSubset<T, UsuarioFindUniqueArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuarioFindFirstArgs>(args?: SelectSubset<T, UsuarioFindFirstArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `id_usuario`
     * const usuarioWithId_usuarioOnly = await prisma.usuario.findMany({ select: { id_usuario: true } })
     * 
     */
    findMany<T extends UsuarioFindManyArgs>(args?: SelectSubset<T, UsuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuario.
     * @param {UsuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
     */
    create<T extends UsuarioCreateArgs>(args: SelectSubset<T, UsuarioCreateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuarios.
     * @param {UsuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuarioCreateManyArgs>(args?: SelectSubset<T, UsuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {UsuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `id_usuario`
     * const usuarioWithId_usuarioOnly = await prisma.usuario.createManyAndReturn({
     *   select: { id_usuario: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsuarioCreateManyAndReturnArgs>(args?: SelectSubset<T, UsuarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Usuario.
     * @param {UsuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
     */
    delete<T extends UsuarioDeleteArgs>(args: SelectSubset<T, UsuarioDeleteArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuario.
     * @param {UsuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuarioUpdateArgs>(args: SelectSubset<T, UsuarioUpdateArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuarioDeleteManyArgs>(args?: SelectSubset<T, UsuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuarioUpdateManyArgs>(args: SelectSubset<T, UsuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios and returns the data updated in the database.
     * @param {UsuarioUpdateManyAndReturnArgs} args - Arguments to update many Usuarios.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Usuarios and only return the `id_usuario`
     * const usuarioWithId_usuarioOnly = await prisma.usuario.updateManyAndReturn({
     *   select: { id_usuario: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UsuarioUpdateManyAndReturnArgs>(args: SelectSubset<T, UsuarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Usuario.
     * @param {UsuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
     */
    upsert<T extends UsuarioUpsertArgs>(args: SelectSubset<T, UsuarioUpsertArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuarioCountArgs>(
      args?: Subset<T, UsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuario model
   */
  readonly fields: UsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    evaluaciones<T extends Usuario$evaluacionesArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$evaluacionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Usuario model
   */
  interface UsuarioFieldRefs {
    readonly id_usuario: FieldRef<"Usuario", 'String'>
    readonly nombre: FieldRef<"Usuario", 'String'>
    readonly correo: FieldRef<"Usuario", 'String'>
    readonly cedula: FieldRef<"Usuario", 'String'>
    readonly contraseña_hash: FieldRef<"Usuario", 'String'>
    readonly rol: FieldRef<"Usuario", 'Rol'>
  }
    

  // Custom InputTypes
  /**
   * Usuario findUnique
   */
  export type UsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findUniqueOrThrow
   */
  export type UsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findFirst
   */
  export type UsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findFirstOrThrow
   */
  export type UsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findMany
   */
  export type UsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario create
   */
  export type UsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuario.
     */
    data: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
  }

  /**
   * Usuario createMany
   */
  export type UsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario createManyAndReturn
   */
  export type UsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario update
   */
  export type UsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuario.
     */
    data: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
    /**
     * Choose, which Usuario to update.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario updateMany
   */
  export type UsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
  }

  /**
   * Usuario updateManyAndReturn
   */
  export type UsuarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to update.
     */
    limit?: number
  }

  /**
   * Usuario upsert
   */
  export type UsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuario to update in case it exists.
     */
    where: UsuarioWhereUniqueInput
    /**
     * In case the Usuario found by the `where` argument doesn't exist, create a new Usuario with this data.
     */
    create: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
    /**
     * In case the Usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
  }

  /**
   * Usuario delete
   */
  export type UsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter which Usuario to delete.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario deleteMany
   */
  export type UsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuarioWhereInput
    /**
     * Limit how many Usuarios to delete.
     */
    limit?: number
  }

  /**
   * Usuario.evaluaciones
   */
  export type Usuario$evaluacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluacion
     */
    select?: EvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluacion
     */
    omit?: EvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionInclude<ExtArgs> | null
    where?: EvaluacionWhereInput
    orderBy?: EvaluacionOrderByWithRelationInput | EvaluacionOrderByWithRelationInput[]
    cursor?: EvaluacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EvaluacionScalarFieldEnum | EvaluacionScalarFieldEnum[]
  }

  /**
   * Usuario without action
   */
  export type UsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Usuario
     */
    omit?: UsuarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
  }


  /**
   * Model Estudiante
   */

  export type AggregateEstudiante = {
    _count: EstudianteCountAggregateOutputType | null
    _min: EstudianteMinAggregateOutputType | null
    _max: EstudianteMaxAggregateOutputType | null
  }

  export type EstudianteMinAggregateOutputType = {
    id_estudiante: string | null
    nombre: string | null
    cedula: string | null
    correo: string | null
  }

  export type EstudianteMaxAggregateOutputType = {
    id_estudiante: string | null
    nombre: string | null
    cedula: string | null
    correo: string | null
  }

  export type EstudianteCountAggregateOutputType = {
    id_estudiante: number
    nombre: number
    cedula: number
    correo: number
    _all: number
  }


  export type EstudianteMinAggregateInputType = {
    id_estudiante?: true
    nombre?: true
    cedula?: true
    correo?: true
  }

  export type EstudianteMaxAggregateInputType = {
    id_estudiante?: true
    nombre?: true
    cedula?: true
    correo?: true
  }

  export type EstudianteCountAggregateInputType = {
    id_estudiante?: true
    nombre?: true
    cedula?: true
    correo?: true
    _all?: true
  }

  export type EstudianteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Estudiante to aggregate.
     */
    where?: EstudianteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Estudiantes to fetch.
     */
    orderBy?: EstudianteOrderByWithRelationInput | EstudianteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EstudianteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Estudiantes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Estudiantes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Estudiantes
    **/
    _count?: true | EstudianteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EstudianteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EstudianteMaxAggregateInputType
  }

  export type GetEstudianteAggregateType<T extends EstudianteAggregateArgs> = {
        [P in keyof T & keyof AggregateEstudiante]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEstudiante[P]>
      : GetScalarType<T[P], AggregateEstudiante[P]>
  }




  export type EstudianteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EstudianteWhereInput
    orderBy?: EstudianteOrderByWithAggregationInput | EstudianteOrderByWithAggregationInput[]
    by: EstudianteScalarFieldEnum[] | EstudianteScalarFieldEnum
    having?: EstudianteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EstudianteCountAggregateInputType | true
    _min?: EstudianteMinAggregateInputType
    _max?: EstudianteMaxAggregateInputType
  }

  export type EstudianteGroupByOutputType = {
    id_estudiante: string
    nombre: string
    cedula: string
    correo: string
    _count: EstudianteCountAggregateOutputType | null
    _min: EstudianteMinAggregateOutputType | null
    _max: EstudianteMaxAggregateOutputType | null
  }

  type GetEstudianteGroupByPayload<T extends EstudianteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EstudianteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EstudianteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EstudianteGroupByOutputType[P]>
            : GetScalarType<T[P], EstudianteGroupByOutputType[P]>
        }
      >
    >


  export type EstudianteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_estudiante?: boolean
    nombre?: boolean
    cedula?: boolean
    correo?: boolean
    evaluaciones?: boolean | Estudiante$evaluacionesArgs<ExtArgs>
    _count?: boolean | EstudianteCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estudiante"]>

  export type EstudianteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_estudiante?: boolean
    nombre?: boolean
    cedula?: boolean
    correo?: boolean
  }, ExtArgs["result"]["estudiante"]>

  export type EstudianteSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_estudiante?: boolean
    nombre?: boolean
    cedula?: boolean
    correo?: boolean
  }, ExtArgs["result"]["estudiante"]>

  export type EstudianteSelectScalar = {
    id_estudiante?: boolean
    nombre?: boolean
    cedula?: boolean
    correo?: boolean
  }

  export type EstudianteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_estudiante" | "nombre" | "cedula" | "correo", ExtArgs["result"]["estudiante"]>
  export type EstudianteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    evaluaciones?: boolean | Estudiante$evaluacionesArgs<ExtArgs>
    _count?: boolean | EstudianteCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EstudianteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type EstudianteIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $EstudiantePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Estudiante"
    objects: {
      evaluaciones: Prisma.$EvaluacionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_estudiante: string
      nombre: string
      cedula: string
      correo: string
    }, ExtArgs["result"]["estudiante"]>
    composites: {}
  }

  type EstudianteGetPayload<S extends boolean | null | undefined | EstudianteDefaultArgs> = $Result.GetResult<Prisma.$EstudiantePayload, S>

  type EstudianteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EstudianteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EstudianteCountAggregateInputType | true
    }

  export interface EstudianteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Estudiante'], meta: { name: 'Estudiante' } }
    /**
     * Find zero or one Estudiante that matches the filter.
     * @param {EstudianteFindUniqueArgs} args - Arguments to find a Estudiante
     * @example
     * // Get one Estudiante
     * const estudiante = await prisma.estudiante.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EstudianteFindUniqueArgs>(args: SelectSubset<T, EstudianteFindUniqueArgs<ExtArgs>>): Prisma__EstudianteClient<$Result.GetResult<Prisma.$EstudiantePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Estudiante that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EstudianteFindUniqueOrThrowArgs} args - Arguments to find a Estudiante
     * @example
     * // Get one Estudiante
     * const estudiante = await prisma.estudiante.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EstudianteFindUniqueOrThrowArgs>(args: SelectSubset<T, EstudianteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EstudianteClient<$Result.GetResult<Prisma.$EstudiantePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Estudiante that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstudianteFindFirstArgs} args - Arguments to find a Estudiante
     * @example
     * // Get one Estudiante
     * const estudiante = await prisma.estudiante.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EstudianteFindFirstArgs>(args?: SelectSubset<T, EstudianteFindFirstArgs<ExtArgs>>): Prisma__EstudianteClient<$Result.GetResult<Prisma.$EstudiantePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Estudiante that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstudianteFindFirstOrThrowArgs} args - Arguments to find a Estudiante
     * @example
     * // Get one Estudiante
     * const estudiante = await prisma.estudiante.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EstudianteFindFirstOrThrowArgs>(args?: SelectSubset<T, EstudianteFindFirstOrThrowArgs<ExtArgs>>): Prisma__EstudianteClient<$Result.GetResult<Prisma.$EstudiantePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Estudiantes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstudianteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Estudiantes
     * const estudiantes = await prisma.estudiante.findMany()
     * 
     * // Get first 10 Estudiantes
     * const estudiantes = await prisma.estudiante.findMany({ take: 10 })
     * 
     * // Only select the `id_estudiante`
     * const estudianteWithId_estudianteOnly = await prisma.estudiante.findMany({ select: { id_estudiante: true } })
     * 
     */
    findMany<T extends EstudianteFindManyArgs>(args?: SelectSubset<T, EstudianteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstudiantePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Estudiante.
     * @param {EstudianteCreateArgs} args - Arguments to create a Estudiante.
     * @example
     * // Create one Estudiante
     * const Estudiante = await prisma.estudiante.create({
     *   data: {
     *     // ... data to create a Estudiante
     *   }
     * })
     * 
     */
    create<T extends EstudianteCreateArgs>(args: SelectSubset<T, EstudianteCreateArgs<ExtArgs>>): Prisma__EstudianteClient<$Result.GetResult<Prisma.$EstudiantePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Estudiantes.
     * @param {EstudianteCreateManyArgs} args - Arguments to create many Estudiantes.
     * @example
     * // Create many Estudiantes
     * const estudiante = await prisma.estudiante.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EstudianteCreateManyArgs>(args?: SelectSubset<T, EstudianteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Estudiantes and returns the data saved in the database.
     * @param {EstudianteCreateManyAndReturnArgs} args - Arguments to create many Estudiantes.
     * @example
     * // Create many Estudiantes
     * const estudiante = await prisma.estudiante.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Estudiantes and only return the `id_estudiante`
     * const estudianteWithId_estudianteOnly = await prisma.estudiante.createManyAndReturn({
     *   select: { id_estudiante: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EstudianteCreateManyAndReturnArgs>(args?: SelectSubset<T, EstudianteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstudiantePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Estudiante.
     * @param {EstudianteDeleteArgs} args - Arguments to delete one Estudiante.
     * @example
     * // Delete one Estudiante
     * const Estudiante = await prisma.estudiante.delete({
     *   where: {
     *     // ... filter to delete one Estudiante
     *   }
     * })
     * 
     */
    delete<T extends EstudianteDeleteArgs>(args: SelectSubset<T, EstudianteDeleteArgs<ExtArgs>>): Prisma__EstudianteClient<$Result.GetResult<Prisma.$EstudiantePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Estudiante.
     * @param {EstudianteUpdateArgs} args - Arguments to update one Estudiante.
     * @example
     * // Update one Estudiante
     * const estudiante = await prisma.estudiante.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EstudianteUpdateArgs>(args: SelectSubset<T, EstudianteUpdateArgs<ExtArgs>>): Prisma__EstudianteClient<$Result.GetResult<Prisma.$EstudiantePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Estudiantes.
     * @param {EstudianteDeleteManyArgs} args - Arguments to filter Estudiantes to delete.
     * @example
     * // Delete a few Estudiantes
     * const { count } = await prisma.estudiante.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EstudianteDeleteManyArgs>(args?: SelectSubset<T, EstudianteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Estudiantes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstudianteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Estudiantes
     * const estudiante = await prisma.estudiante.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EstudianteUpdateManyArgs>(args: SelectSubset<T, EstudianteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Estudiantes and returns the data updated in the database.
     * @param {EstudianteUpdateManyAndReturnArgs} args - Arguments to update many Estudiantes.
     * @example
     * // Update many Estudiantes
     * const estudiante = await prisma.estudiante.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Estudiantes and only return the `id_estudiante`
     * const estudianteWithId_estudianteOnly = await prisma.estudiante.updateManyAndReturn({
     *   select: { id_estudiante: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EstudianteUpdateManyAndReturnArgs>(args: SelectSubset<T, EstudianteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstudiantePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Estudiante.
     * @param {EstudianteUpsertArgs} args - Arguments to update or create a Estudiante.
     * @example
     * // Update or create a Estudiante
     * const estudiante = await prisma.estudiante.upsert({
     *   create: {
     *     // ... data to create a Estudiante
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Estudiante we want to update
     *   }
     * })
     */
    upsert<T extends EstudianteUpsertArgs>(args: SelectSubset<T, EstudianteUpsertArgs<ExtArgs>>): Prisma__EstudianteClient<$Result.GetResult<Prisma.$EstudiantePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Estudiantes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstudianteCountArgs} args - Arguments to filter Estudiantes to count.
     * @example
     * // Count the number of Estudiantes
     * const count = await prisma.estudiante.count({
     *   where: {
     *     // ... the filter for the Estudiantes we want to count
     *   }
     * })
    **/
    count<T extends EstudianteCountArgs>(
      args?: Subset<T, EstudianteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EstudianteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Estudiante.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstudianteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EstudianteAggregateArgs>(args: Subset<T, EstudianteAggregateArgs>): Prisma.PrismaPromise<GetEstudianteAggregateType<T>>

    /**
     * Group by Estudiante.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstudianteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EstudianteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EstudianteGroupByArgs['orderBy'] }
        : { orderBy?: EstudianteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EstudianteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEstudianteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Estudiante model
   */
  readonly fields: EstudianteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Estudiante.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EstudianteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    evaluaciones<T extends Estudiante$evaluacionesArgs<ExtArgs> = {}>(args?: Subset<T, Estudiante$evaluacionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Estudiante model
   */
  interface EstudianteFieldRefs {
    readonly id_estudiante: FieldRef<"Estudiante", 'String'>
    readonly nombre: FieldRef<"Estudiante", 'String'>
    readonly cedula: FieldRef<"Estudiante", 'String'>
    readonly correo: FieldRef<"Estudiante", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Estudiante findUnique
   */
  export type EstudianteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estudiante
     */
    select?: EstudianteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estudiante
     */
    omit?: EstudianteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstudianteInclude<ExtArgs> | null
    /**
     * Filter, which Estudiante to fetch.
     */
    where: EstudianteWhereUniqueInput
  }

  /**
   * Estudiante findUniqueOrThrow
   */
  export type EstudianteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estudiante
     */
    select?: EstudianteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estudiante
     */
    omit?: EstudianteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstudianteInclude<ExtArgs> | null
    /**
     * Filter, which Estudiante to fetch.
     */
    where: EstudianteWhereUniqueInput
  }

  /**
   * Estudiante findFirst
   */
  export type EstudianteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estudiante
     */
    select?: EstudianteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estudiante
     */
    omit?: EstudianteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstudianteInclude<ExtArgs> | null
    /**
     * Filter, which Estudiante to fetch.
     */
    where?: EstudianteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Estudiantes to fetch.
     */
    orderBy?: EstudianteOrderByWithRelationInput | EstudianteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Estudiantes.
     */
    cursor?: EstudianteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Estudiantes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Estudiantes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Estudiantes.
     */
    distinct?: EstudianteScalarFieldEnum | EstudianteScalarFieldEnum[]
  }

  /**
   * Estudiante findFirstOrThrow
   */
  export type EstudianteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estudiante
     */
    select?: EstudianteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estudiante
     */
    omit?: EstudianteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstudianteInclude<ExtArgs> | null
    /**
     * Filter, which Estudiante to fetch.
     */
    where?: EstudianteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Estudiantes to fetch.
     */
    orderBy?: EstudianteOrderByWithRelationInput | EstudianteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Estudiantes.
     */
    cursor?: EstudianteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Estudiantes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Estudiantes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Estudiantes.
     */
    distinct?: EstudianteScalarFieldEnum | EstudianteScalarFieldEnum[]
  }

  /**
   * Estudiante findMany
   */
  export type EstudianteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estudiante
     */
    select?: EstudianteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estudiante
     */
    omit?: EstudianteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstudianteInclude<ExtArgs> | null
    /**
     * Filter, which Estudiantes to fetch.
     */
    where?: EstudianteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Estudiantes to fetch.
     */
    orderBy?: EstudianteOrderByWithRelationInput | EstudianteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Estudiantes.
     */
    cursor?: EstudianteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Estudiantes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Estudiantes.
     */
    skip?: number
    distinct?: EstudianteScalarFieldEnum | EstudianteScalarFieldEnum[]
  }

  /**
   * Estudiante create
   */
  export type EstudianteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estudiante
     */
    select?: EstudianteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estudiante
     */
    omit?: EstudianteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstudianteInclude<ExtArgs> | null
    /**
     * The data needed to create a Estudiante.
     */
    data: XOR<EstudianteCreateInput, EstudianteUncheckedCreateInput>
  }

  /**
   * Estudiante createMany
   */
  export type EstudianteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Estudiantes.
     */
    data: EstudianteCreateManyInput | EstudianteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Estudiante createManyAndReturn
   */
  export type EstudianteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estudiante
     */
    select?: EstudianteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Estudiante
     */
    omit?: EstudianteOmit<ExtArgs> | null
    /**
     * The data used to create many Estudiantes.
     */
    data: EstudianteCreateManyInput | EstudianteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Estudiante update
   */
  export type EstudianteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estudiante
     */
    select?: EstudianteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estudiante
     */
    omit?: EstudianteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstudianteInclude<ExtArgs> | null
    /**
     * The data needed to update a Estudiante.
     */
    data: XOR<EstudianteUpdateInput, EstudianteUncheckedUpdateInput>
    /**
     * Choose, which Estudiante to update.
     */
    where: EstudianteWhereUniqueInput
  }

  /**
   * Estudiante updateMany
   */
  export type EstudianteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Estudiantes.
     */
    data: XOR<EstudianteUpdateManyMutationInput, EstudianteUncheckedUpdateManyInput>
    /**
     * Filter which Estudiantes to update
     */
    where?: EstudianteWhereInput
    /**
     * Limit how many Estudiantes to update.
     */
    limit?: number
  }

  /**
   * Estudiante updateManyAndReturn
   */
  export type EstudianteUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estudiante
     */
    select?: EstudianteSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Estudiante
     */
    omit?: EstudianteOmit<ExtArgs> | null
    /**
     * The data used to update Estudiantes.
     */
    data: XOR<EstudianteUpdateManyMutationInput, EstudianteUncheckedUpdateManyInput>
    /**
     * Filter which Estudiantes to update
     */
    where?: EstudianteWhereInput
    /**
     * Limit how many Estudiantes to update.
     */
    limit?: number
  }

  /**
   * Estudiante upsert
   */
  export type EstudianteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estudiante
     */
    select?: EstudianteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estudiante
     */
    omit?: EstudianteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstudianteInclude<ExtArgs> | null
    /**
     * The filter to search for the Estudiante to update in case it exists.
     */
    where: EstudianteWhereUniqueInput
    /**
     * In case the Estudiante found by the `where` argument doesn't exist, create a new Estudiante with this data.
     */
    create: XOR<EstudianteCreateInput, EstudianteUncheckedCreateInput>
    /**
     * In case the Estudiante was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EstudianteUpdateInput, EstudianteUncheckedUpdateInput>
  }

  /**
   * Estudiante delete
   */
  export type EstudianteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estudiante
     */
    select?: EstudianteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estudiante
     */
    omit?: EstudianteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstudianteInclude<ExtArgs> | null
    /**
     * Filter which Estudiante to delete.
     */
    where: EstudianteWhereUniqueInput
  }

  /**
   * Estudiante deleteMany
   */
  export type EstudianteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Estudiantes to delete
     */
    where?: EstudianteWhereInput
    /**
     * Limit how many Estudiantes to delete.
     */
    limit?: number
  }

  /**
   * Estudiante.evaluaciones
   */
  export type Estudiante$evaluacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluacion
     */
    select?: EvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluacion
     */
    omit?: EvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionInclude<ExtArgs> | null
    where?: EvaluacionWhereInput
    orderBy?: EvaluacionOrderByWithRelationInput | EvaluacionOrderByWithRelationInput[]
    cursor?: EvaluacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EvaluacionScalarFieldEnum | EvaluacionScalarFieldEnum[]
  }

  /**
   * Estudiante without action
   */
  export type EstudianteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estudiante
     */
    select?: EstudianteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Estudiante
     */
    omit?: EstudianteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstudianteInclude<ExtArgs> | null
  }


  /**
   * Model Practica
   */

  export type AggregatePractica = {
    _count: PracticaCountAggregateOutputType | null
    _min: PracticaMinAggregateOutputType | null
    _max: PracticaMaxAggregateOutputType | null
  }

  export type PracticaMinAggregateOutputType = {
    id_practica: string | null
    nombre: string | null
  }

  export type PracticaMaxAggregateOutputType = {
    id_practica: string | null
    nombre: string | null
  }

  export type PracticaCountAggregateOutputType = {
    id_practica: number
    nombre: number
    _all: number
  }


  export type PracticaMinAggregateInputType = {
    id_practica?: true
    nombre?: true
  }

  export type PracticaMaxAggregateInputType = {
    id_practica?: true
    nombre?: true
  }

  export type PracticaCountAggregateInputType = {
    id_practica?: true
    nombre?: true
    _all?: true
  }

  export type PracticaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Practica to aggregate.
     */
    where?: PracticaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Practicas to fetch.
     */
    orderBy?: PracticaOrderByWithRelationInput | PracticaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PracticaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Practicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Practicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Practicas
    **/
    _count?: true | PracticaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PracticaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PracticaMaxAggregateInputType
  }

  export type GetPracticaAggregateType<T extends PracticaAggregateArgs> = {
        [P in keyof T & keyof AggregatePractica]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePractica[P]>
      : GetScalarType<T[P], AggregatePractica[P]>
  }




  export type PracticaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PracticaWhereInput
    orderBy?: PracticaOrderByWithAggregationInput | PracticaOrderByWithAggregationInput[]
    by: PracticaScalarFieldEnum[] | PracticaScalarFieldEnum
    having?: PracticaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PracticaCountAggregateInputType | true
    _min?: PracticaMinAggregateInputType
    _max?: PracticaMaxAggregateInputType
  }

  export type PracticaGroupByOutputType = {
    id_practica: string
    nombre: string
    _count: PracticaCountAggregateOutputType | null
    _min: PracticaMinAggregateOutputType | null
    _max: PracticaMaxAggregateOutputType | null
  }

  type GetPracticaGroupByPayload<T extends PracticaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PracticaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PracticaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PracticaGroupByOutputType[P]>
            : GetScalarType<T[P], PracticaGroupByOutputType[P]>
        }
      >
    >


  export type PracticaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_practica?: boolean
    nombre?: boolean
    evaluaciones?: boolean | Practica$evaluacionesArgs<ExtArgs>
    _count?: boolean | PracticaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["practica"]>

  export type PracticaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_practica?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["practica"]>

  export type PracticaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_practica?: boolean
    nombre?: boolean
  }, ExtArgs["result"]["practica"]>

  export type PracticaSelectScalar = {
    id_practica?: boolean
    nombre?: boolean
  }

  export type PracticaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_practica" | "nombre", ExtArgs["result"]["practica"]>
  export type PracticaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    evaluaciones?: boolean | Practica$evaluacionesArgs<ExtArgs>
    _count?: boolean | PracticaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PracticaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type PracticaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $PracticaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Practica"
    objects: {
      evaluaciones: Prisma.$EvaluacionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_practica: string
      nombre: string
    }, ExtArgs["result"]["practica"]>
    composites: {}
  }

  type PracticaGetPayload<S extends boolean | null | undefined | PracticaDefaultArgs> = $Result.GetResult<Prisma.$PracticaPayload, S>

  type PracticaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PracticaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PracticaCountAggregateInputType | true
    }

  export interface PracticaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Practica'], meta: { name: 'Practica' } }
    /**
     * Find zero or one Practica that matches the filter.
     * @param {PracticaFindUniqueArgs} args - Arguments to find a Practica
     * @example
     * // Get one Practica
     * const practica = await prisma.practica.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PracticaFindUniqueArgs>(args: SelectSubset<T, PracticaFindUniqueArgs<ExtArgs>>): Prisma__PracticaClient<$Result.GetResult<Prisma.$PracticaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Practica that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PracticaFindUniqueOrThrowArgs} args - Arguments to find a Practica
     * @example
     * // Get one Practica
     * const practica = await prisma.practica.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PracticaFindUniqueOrThrowArgs>(args: SelectSubset<T, PracticaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PracticaClient<$Result.GetResult<Prisma.$PracticaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Practica that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PracticaFindFirstArgs} args - Arguments to find a Practica
     * @example
     * // Get one Practica
     * const practica = await prisma.practica.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PracticaFindFirstArgs>(args?: SelectSubset<T, PracticaFindFirstArgs<ExtArgs>>): Prisma__PracticaClient<$Result.GetResult<Prisma.$PracticaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Practica that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PracticaFindFirstOrThrowArgs} args - Arguments to find a Practica
     * @example
     * // Get one Practica
     * const practica = await prisma.practica.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PracticaFindFirstOrThrowArgs>(args?: SelectSubset<T, PracticaFindFirstOrThrowArgs<ExtArgs>>): Prisma__PracticaClient<$Result.GetResult<Prisma.$PracticaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Practicas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PracticaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Practicas
     * const practicas = await prisma.practica.findMany()
     * 
     * // Get first 10 Practicas
     * const practicas = await prisma.practica.findMany({ take: 10 })
     * 
     * // Only select the `id_practica`
     * const practicaWithId_practicaOnly = await prisma.practica.findMany({ select: { id_practica: true } })
     * 
     */
    findMany<T extends PracticaFindManyArgs>(args?: SelectSubset<T, PracticaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PracticaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Practica.
     * @param {PracticaCreateArgs} args - Arguments to create a Practica.
     * @example
     * // Create one Practica
     * const Practica = await prisma.practica.create({
     *   data: {
     *     // ... data to create a Practica
     *   }
     * })
     * 
     */
    create<T extends PracticaCreateArgs>(args: SelectSubset<T, PracticaCreateArgs<ExtArgs>>): Prisma__PracticaClient<$Result.GetResult<Prisma.$PracticaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Practicas.
     * @param {PracticaCreateManyArgs} args - Arguments to create many Practicas.
     * @example
     * // Create many Practicas
     * const practica = await prisma.practica.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PracticaCreateManyArgs>(args?: SelectSubset<T, PracticaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Practicas and returns the data saved in the database.
     * @param {PracticaCreateManyAndReturnArgs} args - Arguments to create many Practicas.
     * @example
     * // Create many Practicas
     * const practica = await prisma.practica.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Practicas and only return the `id_practica`
     * const practicaWithId_practicaOnly = await prisma.practica.createManyAndReturn({
     *   select: { id_practica: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PracticaCreateManyAndReturnArgs>(args?: SelectSubset<T, PracticaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PracticaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Practica.
     * @param {PracticaDeleteArgs} args - Arguments to delete one Practica.
     * @example
     * // Delete one Practica
     * const Practica = await prisma.practica.delete({
     *   where: {
     *     // ... filter to delete one Practica
     *   }
     * })
     * 
     */
    delete<T extends PracticaDeleteArgs>(args: SelectSubset<T, PracticaDeleteArgs<ExtArgs>>): Prisma__PracticaClient<$Result.GetResult<Prisma.$PracticaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Practica.
     * @param {PracticaUpdateArgs} args - Arguments to update one Practica.
     * @example
     * // Update one Practica
     * const practica = await prisma.practica.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PracticaUpdateArgs>(args: SelectSubset<T, PracticaUpdateArgs<ExtArgs>>): Prisma__PracticaClient<$Result.GetResult<Prisma.$PracticaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Practicas.
     * @param {PracticaDeleteManyArgs} args - Arguments to filter Practicas to delete.
     * @example
     * // Delete a few Practicas
     * const { count } = await prisma.practica.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PracticaDeleteManyArgs>(args?: SelectSubset<T, PracticaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Practicas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PracticaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Practicas
     * const practica = await prisma.practica.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PracticaUpdateManyArgs>(args: SelectSubset<T, PracticaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Practicas and returns the data updated in the database.
     * @param {PracticaUpdateManyAndReturnArgs} args - Arguments to update many Practicas.
     * @example
     * // Update many Practicas
     * const practica = await prisma.practica.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Practicas and only return the `id_practica`
     * const practicaWithId_practicaOnly = await prisma.practica.updateManyAndReturn({
     *   select: { id_practica: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PracticaUpdateManyAndReturnArgs>(args: SelectSubset<T, PracticaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PracticaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Practica.
     * @param {PracticaUpsertArgs} args - Arguments to update or create a Practica.
     * @example
     * // Update or create a Practica
     * const practica = await prisma.practica.upsert({
     *   create: {
     *     // ... data to create a Practica
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Practica we want to update
     *   }
     * })
     */
    upsert<T extends PracticaUpsertArgs>(args: SelectSubset<T, PracticaUpsertArgs<ExtArgs>>): Prisma__PracticaClient<$Result.GetResult<Prisma.$PracticaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Practicas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PracticaCountArgs} args - Arguments to filter Practicas to count.
     * @example
     * // Count the number of Practicas
     * const count = await prisma.practica.count({
     *   where: {
     *     // ... the filter for the Practicas we want to count
     *   }
     * })
    **/
    count<T extends PracticaCountArgs>(
      args?: Subset<T, PracticaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PracticaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Practica.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PracticaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PracticaAggregateArgs>(args: Subset<T, PracticaAggregateArgs>): Prisma.PrismaPromise<GetPracticaAggregateType<T>>

    /**
     * Group by Practica.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PracticaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PracticaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PracticaGroupByArgs['orderBy'] }
        : { orderBy?: PracticaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PracticaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPracticaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Practica model
   */
  readonly fields: PracticaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Practica.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PracticaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    evaluaciones<T extends Practica$evaluacionesArgs<ExtArgs> = {}>(args?: Subset<T, Practica$evaluacionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Practica model
   */
  interface PracticaFieldRefs {
    readonly id_practica: FieldRef<"Practica", 'String'>
    readonly nombre: FieldRef<"Practica", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Practica findUnique
   */
  export type PracticaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Practica
     */
    select?: PracticaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Practica
     */
    omit?: PracticaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PracticaInclude<ExtArgs> | null
    /**
     * Filter, which Practica to fetch.
     */
    where: PracticaWhereUniqueInput
  }

  /**
   * Practica findUniqueOrThrow
   */
  export type PracticaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Practica
     */
    select?: PracticaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Practica
     */
    omit?: PracticaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PracticaInclude<ExtArgs> | null
    /**
     * Filter, which Practica to fetch.
     */
    where: PracticaWhereUniqueInput
  }

  /**
   * Practica findFirst
   */
  export type PracticaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Practica
     */
    select?: PracticaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Practica
     */
    omit?: PracticaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PracticaInclude<ExtArgs> | null
    /**
     * Filter, which Practica to fetch.
     */
    where?: PracticaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Practicas to fetch.
     */
    orderBy?: PracticaOrderByWithRelationInput | PracticaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Practicas.
     */
    cursor?: PracticaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Practicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Practicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Practicas.
     */
    distinct?: PracticaScalarFieldEnum | PracticaScalarFieldEnum[]
  }

  /**
   * Practica findFirstOrThrow
   */
  export type PracticaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Practica
     */
    select?: PracticaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Practica
     */
    omit?: PracticaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PracticaInclude<ExtArgs> | null
    /**
     * Filter, which Practica to fetch.
     */
    where?: PracticaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Practicas to fetch.
     */
    orderBy?: PracticaOrderByWithRelationInput | PracticaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Practicas.
     */
    cursor?: PracticaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Practicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Practicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Practicas.
     */
    distinct?: PracticaScalarFieldEnum | PracticaScalarFieldEnum[]
  }

  /**
   * Practica findMany
   */
  export type PracticaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Practica
     */
    select?: PracticaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Practica
     */
    omit?: PracticaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PracticaInclude<ExtArgs> | null
    /**
     * Filter, which Practicas to fetch.
     */
    where?: PracticaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Practicas to fetch.
     */
    orderBy?: PracticaOrderByWithRelationInput | PracticaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Practicas.
     */
    cursor?: PracticaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Practicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Practicas.
     */
    skip?: number
    distinct?: PracticaScalarFieldEnum | PracticaScalarFieldEnum[]
  }

  /**
   * Practica create
   */
  export type PracticaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Practica
     */
    select?: PracticaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Practica
     */
    omit?: PracticaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PracticaInclude<ExtArgs> | null
    /**
     * The data needed to create a Practica.
     */
    data: XOR<PracticaCreateInput, PracticaUncheckedCreateInput>
  }

  /**
   * Practica createMany
   */
  export type PracticaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Practicas.
     */
    data: PracticaCreateManyInput | PracticaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Practica createManyAndReturn
   */
  export type PracticaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Practica
     */
    select?: PracticaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Practica
     */
    omit?: PracticaOmit<ExtArgs> | null
    /**
     * The data used to create many Practicas.
     */
    data: PracticaCreateManyInput | PracticaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Practica update
   */
  export type PracticaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Practica
     */
    select?: PracticaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Practica
     */
    omit?: PracticaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PracticaInclude<ExtArgs> | null
    /**
     * The data needed to update a Practica.
     */
    data: XOR<PracticaUpdateInput, PracticaUncheckedUpdateInput>
    /**
     * Choose, which Practica to update.
     */
    where: PracticaWhereUniqueInput
  }

  /**
   * Practica updateMany
   */
  export type PracticaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Practicas.
     */
    data: XOR<PracticaUpdateManyMutationInput, PracticaUncheckedUpdateManyInput>
    /**
     * Filter which Practicas to update
     */
    where?: PracticaWhereInput
    /**
     * Limit how many Practicas to update.
     */
    limit?: number
  }

  /**
   * Practica updateManyAndReturn
   */
  export type PracticaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Practica
     */
    select?: PracticaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Practica
     */
    omit?: PracticaOmit<ExtArgs> | null
    /**
     * The data used to update Practicas.
     */
    data: XOR<PracticaUpdateManyMutationInput, PracticaUncheckedUpdateManyInput>
    /**
     * Filter which Practicas to update
     */
    where?: PracticaWhereInput
    /**
     * Limit how many Practicas to update.
     */
    limit?: number
  }

  /**
   * Practica upsert
   */
  export type PracticaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Practica
     */
    select?: PracticaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Practica
     */
    omit?: PracticaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PracticaInclude<ExtArgs> | null
    /**
     * The filter to search for the Practica to update in case it exists.
     */
    where: PracticaWhereUniqueInput
    /**
     * In case the Practica found by the `where` argument doesn't exist, create a new Practica with this data.
     */
    create: XOR<PracticaCreateInput, PracticaUncheckedCreateInput>
    /**
     * In case the Practica was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PracticaUpdateInput, PracticaUncheckedUpdateInput>
  }

  /**
   * Practica delete
   */
  export type PracticaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Practica
     */
    select?: PracticaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Practica
     */
    omit?: PracticaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PracticaInclude<ExtArgs> | null
    /**
     * Filter which Practica to delete.
     */
    where: PracticaWhereUniqueInput
  }

  /**
   * Practica deleteMany
   */
  export type PracticaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Practicas to delete
     */
    where?: PracticaWhereInput
    /**
     * Limit how many Practicas to delete.
     */
    limit?: number
  }

  /**
   * Practica.evaluaciones
   */
  export type Practica$evaluacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluacion
     */
    select?: EvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluacion
     */
    omit?: EvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionInclude<ExtArgs> | null
    where?: EvaluacionWhereInput
    orderBy?: EvaluacionOrderByWithRelationInput | EvaluacionOrderByWithRelationInput[]
    cursor?: EvaluacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EvaluacionScalarFieldEnum | EvaluacionScalarFieldEnum[]
  }

  /**
   * Practica without action
   */
  export type PracticaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Practica
     */
    select?: PracticaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Practica
     */
    omit?: PracticaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PracticaInclude<ExtArgs> | null
  }


  /**
   * Model Evaluacion
   */

  export type AggregateEvaluacion = {
    _count: EvaluacionCountAggregateOutputType | null
    _avg: EvaluacionAvgAggregateOutputType | null
    _sum: EvaluacionSumAggregateOutputType | null
    _min: EvaluacionMinAggregateOutputType | null
    _max: EvaluacionMaxAggregateOutputType | null
  }

  export type EvaluacionAvgAggregateOutputType = {
    nota_final: number | null
  }

  export type EvaluacionSumAggregateOutputType = {
    nota_final: number | null
  }

  export type EvaluacionMinAggregateOutputType = {
    id_evaluacion: string | null
    fecha_evaluacion: Date | null
    fecha_inicio_practica: Date | null
    fecha_fin_practica: Date | null
    nota_final: number | null
    reporte_cualitativo: string | null
    id_docente: string | null
    id_estudiante: string | null
    id_practica: string | null
  }

  export type EvaluacionMaxAggregateOutputType = {
    id_evaluacion: string | null
    fecha_evaluacion: Date | null
    fecha_inicio_practica: Date | null
    fecha_fin_practica: Date | null
    nota_final: number | null
    reporte_cualitativo: string | null
    id_docente: string | null
    id_estudiante: string | null
    id_practica: string | null
  }

  export type EvaluacionCountAggregateOutputType = {
    id_evaluacion: number
    fecha_evaluacion: number
    fecha_inicio_practica: number
    fecha_fin_practica: number
    nota_final: number
    reporte_cualitativo: number
    id_docente: number
    id_estudiante: number
    id_practica: number
    _all: number
  }


  export type EvaluacionAvgAggregateInputType = {
    nota_final?: true
  }

  export type EvaluacionSumAggregateInputType = {
    nota_final?: true
  }

  export type EvaluacionMinAggregateInputType = {
    id_evaluacion?: true
    fecha_evaluacion?: true
    fecha_inicio_practica?: true
    fecha_fin_practica?: true
    nota_final?: true
    reporte_cualitativo?: true
    id_docente?: true
    id_estudiante?: true
    id_practica?: true
  }

  export type EvaluacionMaxAggregateInputType = {
    id_evaluacion?: true
    fecha_evaluacion?: true
    fecha_inicio_practica?: true
    fecha_fin_practica?: true
    nota_final?: true
    reporte_cualitativo?: true
    id_docente?: true
    id_estudiante?: true
    id_practica?: true
  }

  export type EvaluacionCountAggregateInputType = {
    id_evaluacion?: true
    fecha_evaluacion?: true
    fecha_inicio_practica?: true
    fecha_fin_practica?: true
    nota_final?: true
    reporte_cualitativo?: true
    id_docente?: true
    id_estudiante?: true
    id_practica?: true
    _all?: true
  }

  export type EvaluacionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Evaluacion to aggregate.
     */
    where?: EvaluacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Evaluacions to fetch.
     */
    orderBy?: EvaluacionOrderByWithRelationInput | EvaluacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EvaluacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Evaluacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Evaluacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Evaluacions
    **/
    _count?: true | EvaluacionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EvaluacionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EvaluacionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EvaluacionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EvaluacionMaxAggregateInputType
  }

  export type GetEvaluacionAggregateType<T extends EvaluacionAggregateArgs> = {
        [P in keyof T & keyof AggregateEvaluacion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEvaluacion[P]>
      : GetScalarType<T[P], AggregateEvaluacion[P]>
  }




  export type EvaluacionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EvaluacionWhereInput
    orderBy?: EvaluacionOrderByWithAggregationInput | EvaluacionOrderByWithAggregationInput[]
    by: EvaluacionScalarFieldEnum[] | EvaluacionScalarFieldEnum
    having?: EvaluacionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EvaluacionCountAggregateInputType | true
    _avg?: EvaluacionAvgAggregateInputType
    _sum?: EvaluacionSumAggregateInputType
    _min?: EvaluacionMinAggregateInputType
    _max?: EvaluacionMaxAggregateInputType
  }

  export type EvaluacionGroupByOutputType = {
    id_evaluacion: string
    fecha_evaluacion: Date
    fecha_inicio_practica: Date
    fecha_fin_practica: Date
    nota_final: number | null
    reporte_cualitativo: string | null
    id_docente: string
    id_estudiante: string
    id_practica: string
    _count: EvaluacionCountAggregateOutputType | null
    _avg: EvaluacionAvgAggregateOutputType | null
    _sum: EvaluacionSumAggregateOutputType | null
    _min: EvaluacionMinAggregateOutputType | null
    _max: EvaluacionMaxAggregateOutputType | null
  }

  type GetEvaluacionGroupByPayload<T extends EvaluacionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EvaluacionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EvaluacionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EvaluacionGroupByOutputType[P]>
            : GetScalarType<T[P], EvaluacionGroupByOutputType[P]>
        }
      >
    >


  export type EvaluacionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_evaluacion?: boolean
    fecha_evaluacion?: boolean
    fecha_inicio_practica?: boolean
    fecha_fin_practica?: boolean
    nota_final?: boolean
    reporte_cualitativo?: boolean
    id_docente?: boolean
    id_estudiante?: boolean
    id_practica?: boolean
    docente?: boolean | UsuarioDefaultArgs<ExtArgs>
    estudiante?: boolean | EstudianteDefaultArgs<ExtArgs>
    practica?: boolean | PracticaDefaultArgs<ExtArgs>
    componentes?: boolean | Evaluacion$componentesArgs<ExtArgs>
    descripcionFinal?: boolean | Evaluacion$descripcionFinalArgs<ExtArgs>
    _count?: boolean | EvaluacionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["evaluacion"]>

  export type EvaluacionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_evaluacion?: boolean
    fecha_evaluacion?: boolean
    fecha_inicio_practica?: boolean
    fecha_fin_practica?: boolean
    nota_final?: boolean
    reporte_cualitativo?: boolean
    id_docente?: boolean
    id_estudiante?: boolean
    id_practica?: boolean
    docente?: boolean | UsuarioDefaultArgs<ExtArgs>
    estudiante?: boolean | EstudianteDefaultArgs<ExtArgs>
    practica?: boolean | PracticaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["evaluacion"]>

  export type EvaluacionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_evaluacion?: boolean
    fecha_evaluacion?: boolean
    fecha_inicio_practica?: boolean
    fecha_fin_practica?: boolean
    nota_final?: boolean
    reporte_cualitativo?: boolean
    id_docente?: boolean
    id_estudiante?: boolean
    id_practica?: boolean
    docente?: boolean | UsuarioDefaultArgs<ExtArgs>
    estudiante?: boolean | EstudianteDefaultArgs<ExtArgs>
    practica?: boolean | PracticaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["evaluacion"]>

  export type EvaluacionSelectScalar = {
    id_evaluacion?: boolean
    fecha_evaluacion?: boolean
    fecha_inicio_practica?: boolean
    fecha_fin_practica?: boolean
    nota_final?: boolean
    reporte_cualitativo?: boolean
    id_docente?: boolean
    id_estudiante?: boolean
    id_practica?: boolean
  }

  export type EvaluacionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_evaluacion" | "fecha_evaluacion" | "fecha_inicio_practica" | "fecha_fin_practica" | "nota_final" | "reporte_cualitativo" | "id_docente" | "id_estudiante" | "id_practica", ExtArgs["result"]["evaluacion"]>
  export type EvaluacionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    docente?: boolean | UsuarioDefaultArgs<ExtArgs>
    estudiante?: boolean | EstudianteDefaultArgs<ExtArgs>
    practica?: boolean | PracticaDefaultArgs<ExtArgs>
    componentes?: boolean | Evaluacion$componentesArgs<ExtArgs>
    descripcionFinal?: boolean | Evaluacion$descripcionFinalArgs<ExtArgs>
    _count?: boolean | EvaluacionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EvaluacionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    docente?: boolean | UsuarioDefaultArgs<ExtArgs>
    estudiante?: boolean | EstudianteDefaultArgs<ExtArgs>
    practica?: boolean | PracticaDefaultArgs<ExtArgs>
  }
  export type EvaluacionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    docente?: boolean | UsuarioDefaultArgs<ExtArgs>
    estudiante?: boolean | EstudianteDefaultArgs<ExtArgs>
    practica?: boolean | PracticaDefaultArgs<ExtArgs>
  }

  export type $EvaluacionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Evaluacion"
    objects: {
      docente: Prisma.$UsuarioPayload<ExtArgs>
      estudiante: Prisma.$EstudiantePayload<ExtArgs>
      practica: Prisma.$PracticaPayload<ExtArgs>
      componentes: Prisma.$ComponenteEvaluacionPayload<ExtArgs>[]
      descripcionFinal: Prisma.$DescripcionFinalPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id_evaluacion: string
      fecha_evaluacion: Date
      fecha_inicio_practica: Date
      fecha_fin_practica: Date
      nota_final: number | null
      reporte_cualitativo: string | null
      id_docente: string
      id_estudiante: string
      id_practica: string
    }, ExtArgs["result"]["evaluacion"]>
    composites: {}
  }

  type EvaluacionGetPayload<S extends boolean | null | undefined | EvaluacionDefaultArgs> = $Result.GetResult<Prisma.$EvaluacionPayload, S>

  type EvaluacionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EvaluacionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EvaluacionCountAggregateInputType | true
    }

  export interface EvaluacionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Evaluacion'], meta: { name: 'Evaluacion' } }
    /**
     * Find zero or one Evaluacion that matches the filter.
     * @param {EvaluacionFindUniqueArgs} args - Arguments to find a Evaluacion
     * @example
     * // Get one Evaluacion
     * const evaluacion = await prisma.evaluacion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EvaluacionFindUniqueArgs>(args: SelectSubset<T, EvaluacionFindUniqueArgs<ExtArgs>>): Prisma__EvaluacionClient<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Evaluacion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EvaluacionFindUniqueOrThrowArgs} args - Arguments to find a Evaluacion
     * @example
     * // Get one Evaluacion
     * const evaluacion = await prisma.evaluacion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EvaluacionFindUniqueOrThrowArgs>(args: SelectSubset<T, EvaluacionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EvaluacionClient<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Evaluacion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluacionFindFirstArgs} args - Arguments to find a Evaluacion
     * @example
     * // Get one Evaluacion
     * const evaluacion = await prisma.evaluacion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EvaluacionFindFirstArgs>(args?: SelectSubset<T, EvaluacionFindFirstArgs<ExtArgs>>): Prisma__EvaluacionClient<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Evaluacion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluacionFindFirstOrThrowArgs} args - Arguments to find a Evaluacion
     * @example
     * // Get one Evaluacion
     * const evaluacion = await prisma.evaluacion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EvaluacionFindFirstOrThrowArgs>(args?: SelectSubset<T, EvaluacionFindFirstOrThrowArgs<ExtArgs>>): Prisma__EvaluacionClient<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Evaluacions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluacionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Evaluacions
     * const evaluacions = await prisma.evaluacion.findMany()
     * 
     * // Get first 10 Evaluacions
     * const evaluacions = await prisma.evaluacion.findMany({ take: 10 })
     * 
     * // Only select the `id_evaluacion`
     * const evaluacionWithId_evaluacionOnly = await prisma.evaluacion.findMany({ select: { id_evaluacion: true } })
     * 
     */
    findMany<T extends EvaluacionFindManyArgs>(args?: SelectSubset<T, EvaluacionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Evaluacion.
     * @param {EvaluacionCreateArgs} args - Arguments to create a Evaluacion.
     * @example
     * // Create one Evaluacion
     * const Evaluacion = await prisma.evaluacion.create({
     *   data: {
     *     // ... data to create a Evaluacion
     *   }
     * })
     * 
     */
    create<T extends EvaluacionCreateArgs>(args: SelectSubset<T, EvaluacionCreateArgs<ExtArgs>>): Prisma__EvaluacionClient<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Evaluacions.
     * @param {EvaluacionCreateManyArgs} args - Arguments to create many Evaluacions.
     * @example
     * // Create many Evaluacions
     * const evaluacion = await prisma.evaluacion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EvaluacionCreateManyArgs>(args?: SelectSubset<T, EvaluacionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Evaluacions and returns the data saved in the database.
     * @param {EvaluacionCreateManyAndReturnArgs} args - Arguments to create many Evaluacions.
     * @example
     * // Create many Evaluacions
     * const evaluacion = await prisma.evaluacion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Evaluacions and only return the `id_evaluacion`
     * const evaluacionWithId_evaluacionOnly = await prisma.evaluacion.createManyAndReturn({
     *   select: { id_evaluacion: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EvaluacionCreateManyAndReturnArgs>(args?: SelectSubset<T, EvaluacionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Evaluacion.
     * @param {EvaluacionDeleteArgs} args - Arguments to delete one Evaluacion.
     * @example
     * // Delete one Evaluacion
     * const Evaluacion = await prisma.evaluacion.delete({
     *   where: {
     *     // ... filter to delete one Evaluacion
     *   }
     * })
     * 
     */
    delete<T extends EvaluacionDeleteArgs>(args: SelectSubset<T, EvaluacionDeleteArgs<ExtArgs>>): Prisma__EvaluacionClient<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Evaluacion.
     * @param {EvaluacionUpdateArgs} args - Arguments to update one Evaluacion.
     * @example
     * // Update one Evaluacion
     * const evaluacion = await prisma.evaluacion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EvaluacionUpdateArgs>(args: SelectSubset<T, EvaluacionUpdateArgs<ExtArgs>>): Prisma__EvaluacionClient<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Evaluacions.
     * @param {EvaluacionDeleteManyArgs} args - Arguments to filter Evaluacions to delete.
     * @example
     * // Delete a few Evaluacions
     * const { count } = await prisma.evaluacion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EvaluacionDeleteManyArgs>(args?: SelectSubset<T, EvaluacionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Evaluacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluacionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Evaluacions
     * const evaluacion = await prisma.evaluacion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EvaluacionUpdateManyArgs>(args: SelectSubset<T, EvaluacionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Evaluacions and returns the data updated in the database.
     * @param {EvaluacionUpdateManyAndReturnArgs} args - Arguments to update many Evaluacions.
     * @example
     * // Update many Evaluacions
     * const evaluacion = await prisma.evaluacion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Evaluacions and only return the `id_evaluacion`
     * const evaluacionWithId_evaluacionOnly = await prisma.evaluacion.updateManyAndReturn({
     *   select: { id_evaluacion: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EvaluacionUpdateManyAndReturnArgs>(args: SelectSubset<T, EvaluacionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Evaluacion.
     * @param {EvaluacionUpsertArgs} args - Arguments to update or create a Evaluacion.
     * @example
     * // Update or create a Evaluacion
     * const evaluacion = await prisma.evaluacion.upsert({
     *   create: {
     *     // ... data to create a Evaluacion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Evaluacion we want to update
     *   }
     * })
     */
    upsert<T extends EvaluacionUpsertArgs>(args: SelectSubset<T, EvaluacionUpsertArgs<ExtArgs>>): Prisma__EvaluacionClient<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Evaluacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluacionCountArgs} args - Arguments to filter Evaluacions to count.
     * @example
     * // Count the number of Evaluacions
     * const count = await prisma.evaluacion.count({
     *   where: {
     *     // ... the filter for the Evaluacions we want to count
     *   }
     * })
    **/
    count<T extends EvaluacionCountArgs>(
      args?: Subset<T, EvaluacionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EvaluacionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Evaluacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluacionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EvaluacionAggregateArgs>(args: Subset<T, EvaluacionAggregateArgs>): Prisma.PrismaPromise<GetEvaluacionAggregateType<T>>

    /**
     * Group by Evaluacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluacionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EvaluacionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EvaluacionGroupByArgs['orderBy'] }
        : { orderBy?: EvaluacionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EvaluacionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEvaluacionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Evaluacion model
   */
  readonly fields: EvaluacionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Evaluacion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EvaluacionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    docente<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    estudiante<T extends EstudianteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EstudianteDefaultArgs<ExtArgs>>): Prisma__EstudianteClient<$Result.GetResult<Prisma.$EstudiantePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    practica<T extends PracticaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PracticaDefaultArgs<ExtArgs>>): Prisma__PracticaClient<$Result.GetResult<Prisma.$PracticaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    componentes<T extends Evaluacion$componentesArgs<ExtArgs> = {}>(args?: Subset<T, Evaluacion$componentesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComponenteEvaluacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    descripcionFinal<T extends Evaluacion$descripcionFinalArgs<ExtArgs> = {}>(args?: Subset<T, Evaluacion$descripcionFinalArgs<ExtArgs>>): Prisma__DescripcionFinalClient<$Result.GetResult<Prisma.$DescripcionFinalPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Evaluacion model
   */
  interface EvaluacionFieldRefs {
    readonly id_evaluacion: FieldRef<"Evaluacion", 'String'>
    readonly fecha_evaluacion: FieldRef<"Evaluacion", 'DateTime'>
    readonly fecha_inicio_practica: FieldRef<"Evaluacion", 'DateTime'>
    readonly fecha_fin_practica: FieldRef<"Evaluacion", 'DateTime'>
    readonly nota_final: FieldRef<"Evaluacion", 'Float'>
    readonly reporte_cualitativo: FieldRef<"Evaluacion", 'String'>
    readonly id_docente: FieldRef<"Evaluacion", 'String'>
    readonly id_estudiante: FieldRef<"Evaluacion", 'String'>
    readonly id_practica: FieldRef<"Evaluacion", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Evaluacion findUnique
   */
  export type EvaluacionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluacion
     */
    select?: EvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluacion
     */
    omit?: EvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionInclude<ExtArgs> | null
    /**
     * Filter, which Evaluacion to fetch.
     */
    where: EvaluacionWhereUniqueInput
  }

  /**
   * Evaluacion findUniqueOrThrow
   */
  export type EvaluacionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluacion
     */
    select?: EvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluacion
     */
    omit?: EvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionInclude<ExtArgs> | null
    /**
     * Filter, which Evaluacion to fetch.
     */
    where: EvaluacionWhereUniqueInput
  }

  /**
   * Evaluacion findFirst
   */
  export type EvaluacionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluacion
     */
    select?: EvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluacion
     */
    omit?: EvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionInclude<ExtArgs> | null
    /**
     * Filter, which Evaluacion to fetch.
     */
    where?: EvaluacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Evaluacions to fetch.
     */
    orderBy?: EvaluacionOrderByWithRelationInput | EvaluacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Evaluacions.
     */
    cursor?: EvaluacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Evaluacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Evaluacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Evaluacions.
     */
    distinct?: EvaluacionScalarFieldEnum | EvaluacionScalarFieldEnum[]
  }

  /**
   * Evaluacion findFirstOrThrow
   */
  export type EvaluacionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluacion
     */
    select?: EvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluacion
     */
    omit?: EvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionInclude<ExtArgs> | null
    /**
     * Filter, which Evaluacion to fetch.
     */
    where?: EvaluacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Evaluacions to fetch.
     */
    orderBy?: EvaluacionOrderByWithRelationInput | EvaluacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Evaluacions.
     */
    cursor?: EvaluacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Evaluacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Evaluacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Evaluacions.
     */
    distinct?: EvaluacionScalarFieldEnum | EvaluacionScalarFieldEnum[]
  }

  /**
   * Evaluacion findMany
   */
  export type EvaluacionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluacion
     */
    select?: EvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluacion
     */
    omit?: EvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionInclude<ExtArgs> | null
    /**
     * Filter, which Evaluacions to fetch.
     */
    where?: EvaluacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Evaluacions to fetch.
     */
    orderBy?: EvaluacionOrderByWithRelationInput | EvaluacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Evaluacions.
     */
    cursor?: EvaluacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Evaluacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Evaluacions.
     */
    skip?: number
    distinct?: EvaluacionScalarFieldEnum | EvaluacionScalarFieldEnum[]
  }

  /**
   * Evaluacion create
   */
  export type EvaluacionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluacion
     */
    select?: EvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluacion
     */
    omit?: EvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionInclude<ExtArgs> | null
    /**
     * The data needed to create a Evaluacion.
     */
    data: XOR<EvaluacionCreateInput, EvaluacionUncheckedCreateInput>
  }

  /**
   * Evaluacion createMany
   */
  export type EvaluacionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Evaluacions.
     */
    data: EvaluacionCreateManyInput | EvaluacionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Evaluacion createManyAndReturn
   */
  export type EvaluacionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluacion
     */
    select?: EvaluacionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluacion
     */
    omit?: EvaluacionOmit<ExtArgs> | null
    /**
     * The data used to create many Evaluacions.
     */
    data: EvaluacionCreateManyInput | EvaluacionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Evaluacion update
   */
  export type EvaluacionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluacion
     */
    select?: EvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluacion
     */
    omit?: EvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionInclude<ExtArgs> | null
    /**
     * The data needed to update a Evaluacion.
     */
    data: XOR<EvaluacionUpdateInput, EvaluacionUncheckedUpdateInput>
    /**
     * Choose, which Evaluacion to update.
     */
    where: EvaluacionWhereUniqueInput
  }

  /**
   * Evaluacion updateMany
   */
  export type EvaluacionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Evaluacions.
     */
    data: XOR<EvaluacionUpdateManyMutationInput, EvaluacionUncheckedUpdateManyInput>
    /**
     * Filter which Evaluacions to update
     */
    where?: EvaluacionWhereInput
    /**
     * Limit how many Evaluacions to update.
     */
    limit?: number
  }

  /**
   * Evaluacion updateManyAndReturn
   */
  export type EvaluacionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluacion
     */
    select?: EvaluacionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluacion
     */
    omit?: EvaluacionOmit<ExtArgs> | null
    /**
     * The data used to update Evaluacions.
     */
    data: XOR<EvaluacionUpdateManyMutationInput, EvaluacionUncheckedUpdateManyInput>
    /**
     * Filter which Evaluacions to update
     */
    where?: EvaluacionWhereInput
    /**
     * Limit how many Evaluacions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Evaluacion upsert
   */
  export type EvaluacionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluacion
     */
    select?: EvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluacion
     */
    omit?: EvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionInclude<ExtArgs> | null
    /**
     * The filter to search for the Evaluacion to update in case it exists.
     */
    where: EvaluacionWhereUniqueInput
    /**
     * In case the Evaluacion found by the `where` argument doesn't exist, create a new Evaluacion with this data.
     */
    create: XOR<EvaluacionCreateInput, EvaluacionUncheckedCreateInput>
    /**
     * In case the Evaluacion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EvaluacionUpdateInput, EvaluacionUncheckedUpdateInput>
  }

  /**
   * Evaluacion delete
   */
  export type EvaluacionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluacion
     */
    select?: EvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluacion
     */
    omit?: EvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionInclude<ExtArgs> | null
    /**
     * Filter which Evaluacion to delete.
     */
    where: EvaluacionWhereUniqueInput
  }

  /**
   * Evaluacion deleteMany
   */
  export type EvaluacionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Evaluacions to delete
     */
    where?: EvaluacionWhereInput
    /**
     * Limit how many Evaluacions to delete.
     */
    limit?: number
  }

  /**
   * Evaluacion.componentes
   */
  export type Evaluacion$componentesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComponenteEvaluacion
     */
    select?: ComponenteEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComponenteEvaluacion
     */
    omit?: ComponenteEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComponenteEvaluacionInclude<ExtArgs> | null
    where?: ComponenteEvaluacionWhereInput
    orderBy?: ComponenteEvaluacionOrderByWithRelationInput | ComponenteEvaluacionOrderByWithRelationInput[]
    cursor?: ComponenteEvaluacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ComponenteEvaluacionScalarFieldEnum | ComponenteEvaluacionScalarFieldEnum[]
  }

  /**
   * Evaluacion.descripcionFinal
   */
  export type Evaluacion$descripcionFinalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DescripcionFinal
     */
    select?: DescripcionFinalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DescripcionFinal
     */
    omit?: DescripcionFinalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescripcionFinalInclude<ExtArgs> | null
    where?: DescripcionFinalWhereInput
  }

  /**
   * Evaluacion without action
   */
  export type EvaluacionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluacion
     */
    select?: EvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluacion
     */
    omit?: EvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluacionInclude<ExtArgs> | null
  }


  /**
   * Model ComponenteEvaluacion
   */

  export type AggregateComponenteEvaluacion = {
    _count: ComponenteEvaluacionCountAggregateOutputType | null
    _avg: ComponenteEvaluacionAvgAggregateOutputType | null
    _sum: ComponenteEvaluacionSumAggregateOutputType | null
    _min: ComponenteEvaluacionMinAggregateOutputType | null
    _max: ComponenteEvaluacionMaxAggregateOutputType | null
  }

  export type ComponenteEvaluacionAvgAggregateOutputType = {
    porcentaje: number | null
    nota_componente: number | null
  }

  export type ComponenteEvaluacionSumAggregateOutputType = {
    porcentaje: number | null
    nota_componente: number | null
  }

  export type ComponenteEvaluacionMinAggregateOutputType = {
    id_componente: string | null
    nombre_componente: string | null
    porcentaje: number | null
    nota_componente: number | null
    id_evaluacion: string | null
  }

  export type ComponenteEvaluacionMaxAggregateOutputType = {
    id_componente: string | null
    nombre_componente: string | null
    porcentaje: number | null
    nota_componente: number | null
    id_evaluacion: string | null
  }

  export type ComponenteEvaluacionCountAggregateOutputType = {
    id_componente: number
    nombre_componente: number
    porcentaje: number
    nota_componente: number
    id_evaluacion: number
    _all: number
  }


  export type ComponenteEvaluacionAvgAggregateInputType = {
    porcentaje?: true
    nota_componente?: true
  }

  export type ComponenteEvaluacionSumAggregateInputType = {
    porcentaje?: true
    nota_componente?: true
  }

  export type ComponenteEvaluacionMinAggregateInputType = {
    id_componente?: true
    nombre_componente?: true
    porcentaje?: true
    nota_componente?: true
    id_evaluacion?: true
  }

  export type ComponenteEvaluacionMaxAggregateInputType = {
    id_componente?: true
    nombre_componente?: true
    porcentaje?: true
    nota_componente?: true
    id_evaluacion?: true
  }

  export type ComponenteEvaluacionCountAggregateInputType = {
    id_componente?: true
    nombre_componente?: true
    porcentaje?: true
    nota_componente?: true
    id_evaluacion?: true
    _all?: true
  }

  export type ComponenteEvaluacionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ComponenteEvaluacion to aggregate.
     */
    where?: ComponenteEvaluacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComponenteEvaluacions to fetch.
     */
    orderBy?: ComponenteEvaluacionOrderByWithRelationInput | ComponenteEvaluacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ComponenteEvaluacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComponenteEvaluacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComponenteEvaluacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ComponenteEvaluacions
    **/
    _count?: true | ComponenteEvaluacionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ComponenteEvaluacionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ComponenteEvaluacionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ComponenteEvaluacionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ComponenteEvaluacionMaxAggregateInputType
  }

  export type GetComponenteEvaluacionAggregateType<T extends ComponenteEvaluacionAggregateArgs> = {
        [P in keyof T & keyof AggregateComponenteEvaluacion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateComponenteEvaluacion[P]>
      : GetScalarType<T[P], AggregateComponenteEvaluacion[P]>
  }




  export type ComponenteEvaluacionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ComponenteEvaluacionWhereInput
    orderBy?: ComponenteEvaluacionOrderByWithAggregationInput | ComponenteEvaluacionOrderByWithAggregationInput[]
    by: ComponenteEvaluacionScalarFieldEnum[] | ComponenteEvaluacionScalarFieldEnum
    having?: ComponenteEvaluacionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ComponenteEvaluacionCountAggregateInputType | true
    _avg?: ComponenteEvaluacionAvgAggregateInputType
    _sum?: ComponenteEvaluacionSumAggregateInputType
    _min?: ComponenteEvaluacionMinAggregateInputType
    _max?: ComponenteEvaluacionMaxAggregateInputType
  }

  export type ComponenteEvaluacionGroupByOutputType = {
    id_componente: string
    nombre_componente: string
    porcentaje: number
    nota_componente: number | null
    id_evaluacion: string
    _count: ComponenteEvaluacionCountAggregateOutputType | null
    _avg: ComponenteEvaluacionAvgAggregateOutputType | null
    _sum: ComponenteEvaluacionSumAggregateOutputType | null
    _min: ComponenteEvaluacionMinAggregateOutputType | null
    _max: ComponenteEvaluacionMaxAggregateOutputType | null
  }

  type GetComponenteEvaluacionGroupByPayload<T extends ComponenteEvaluacionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ComponenteEvaluacionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ComponenteEvaluacionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ComponenteEvaluacionGroupByOutputType[P]>
            : GetScalarType<T[P], ComponenteEvaluacionGroupByOutputType[P]>
        }
      >
    >


  export type ComponenteEvaluacionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_componente?: boolean
    nombre_componente?: boolean
    porcentaje?: boolean
    nota_componente?: boolean
    id_evaluacion?: boolean
    evaluacion?: boolean | EvaluacionDefaultArgs<ExtArgs>
    items?: boolean | ComponenteEvaluacion$itemsArgs<ExtArgs>
    _count?: boolean | ComponenteEvaluacionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["componenteEvaluacion"]>

  export type ComponenteEvaluacionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_componente?: boolean
    nombre_componente?: boolean
    porcentaje?: boolean
    nota_componente?: boolean
    id_evaluacion?: boolean
    evaluacion?: boolean | EvaluacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["componenteEvaluacion"]>

  export type ComponenteEvaluacionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_componente?: boolean
    nombre_componente?: boolean
    porcentaje?: boolean
    nota_componente?: boolean
    id_evaluacion?: boolean
    evaluacion?: boolean | EvaluacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["componenteEvaluacion"]>

  export type ComponenteEvaluacionSelectScalar = {
    id_componente?: boolean
    nombre_componente?: boolean
    porcentaje?: boolean
    nota_componente?: boolean
    id_evaluacion?: boolean
  }

  export type ComponenteEvaluacionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_componente" | "nombre_componente" | "porcentaje" | "nota_componente" | "id_evaluacion", ExtArgs["result"]["componenteEvaluacion"]>
  export type ComponenteEvaluacionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    evaluacion?: boolean | EvaluacionDefaultArgs<ExtArgs>
    items?: boolean | ComponenteEvaluacion$itemsArgs<ExtArgs>
    _count?: boolean | ComponenteEvaluacionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ComponenteEvaluacionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    evaluacion?: boolean | EvaluacionDefaultArgs<ExtArgs>
  }
  export type ComponenteEvaluacionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    evaluacion?: boolean | EvaluacionDefaultArgs<ExtArgs>
  }

  export type $ComponenteEvaluacionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ComponenteEvaluacion"
    objects: {
      evaluacion: Prisma.$EvaluacionPayload<ExtArgs>
      items: Prisma.$ItemEvaluacionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_componente: string
      nombre_componente: string
      porcentaje: number
      nota_componente: number | null
      id_evaluacion: string
    }, ExtArgs["result"]["componenteEvaluacion"]>
    composites: {}
  }

  type ComponenteEvaluacionGetPayload<S extends boolean | null | undefined | ComponenteEvaluacionDefaultArgs> = $Result.GetResult<Prisma.$ComponenteEvaluacionPayload, S>

  type ComponenteEvaluacionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ComponenteEvaluacionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ComponenteEvaluacionCountAggregateInputType | true
    }

  export interface ComponenteEvaluacionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ComponenteEvaluacion'], meta: { name: 'ComponenteEvaluacion' } }
    /**
     * Find zero or one ComponenteEvaluacion that matches the filter.
     * @param {ComponenteEvaluacionFindUniqueArgs} args - Arguments to find a ComponenteEvaluacion
     * @example
     * // Get one ComponenteEvaluacion
     * const componenteEvaluacion = await prisma.componenteEvaluacion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ComponenteEvaluacionFindUniqueArgs>(args: SelectSubset<T, ComponenteEvaluacionFindUniqueArgs<ExtArgs>>): Prisma__ComponenteEvaluacionClient<$Result.GetResult<Prisma.$ComponenteEvaluacionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ComponenteEvaluacion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ComponenteEvaluacionFindUniqueOrThrowArgs} args - Arguments to find a ComponenteEvaluacion
     * @example
     * // Get one ComponenteEvaluacion
     * const componenteEvaluacion = await prisma.componenteEvaluacion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ComponenteEvaluacionFindUniqueOrThrowArgs>(args: SelectSubset<T, ComponenteEvaluacionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ComponenteEvaluacionClient<$Result.GetResult<Prisma.$ComponenteEvaluacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ComponenteEvaluacion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComponenteEvaluacionFindFirstArgs} args - Arguments to find a ComponenteEvaluacion
     * @example
     * // Get one ComponenteEvaluacion
     * const componenteEvaluacion = await prisma.componenteEvaluacion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ComponenteEvaluacionFindFirstArgs>(args?: SelectSubset<T, ComponenteEvaluacionFindFirstArgs<ExtArgs>>): Prisma__ComponenteEvaluacionClient<$Result.GetResult<Prisma.$ComponenteEvaluacionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ComponenteEvaluacion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComponenteEvaluacionFindFirstOrThrowArgs} args - Arguments to find a ComponenteEvaluacion
     * @example
     * // Get one ComponenteEvaluacion
     * const componenteEvaluacion = await prisma.componenteEvaluacion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ComponenteEvaluacionFindFirstOrThrowArgs>(args?: SelectSubset<T, ComponenteEvaluacionFindFirstOrThrowArgs<ExtArgs>>): Prisma__ComponenteEvaluacionClient<$Result.GetResult<Prisma.$ComponenteEvaluacionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ComponenteEvaluacions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComponenteEvaluacionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ComponenteEvaluacions
     * const componenteEvaluacions = await prisma.componenteEvaluacion.findMany()
     * 
     * // Get first 10 ComponenteEvaluacions
     * const componenteEvaluacions = await prisma.componenteEvaluacion.findMany({ take: 10 })
     * 
     * // Only select the `id_componente`
     * const componenteEvaluacionWithId_componenteOnly = await prisma.componenteEvaluacion.findMany({ select: { id_componente: true } })
     * 
     */
    findMany<T extends ComponenteEvaluacionFindManyArgs>(args?: SelectSubset<T, ComponenteEvaluacionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComponenteEvaluacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ComponenteEvaluacion.
     * @param {ComponenteEvaluacionCreateArgs} args - Arguments to create a ComponenteEvaluacion.
     * @example
     * // Create one ComponenteEvaluacion
     * const ComponenteEvaluacion = await prisma.componenteEvaluacion.create({
     *   data: {
     *     // ... data to create a ComponenteEvaluacion
     *   }
     * })
     * 
     */
    create<T extends ComponenteEvaluacionCreateArgs>(args: SelectSubset<T, ComponenteEvaluacionCreateArgs<ExtArgs>>): Prisma__ComponenteEvaluacionClient<$Result.GetResult<Prisma.$ComponenteEvaluacionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ComponenteEvaluacions.
     * @param {ComponenteEvaluacionCreateManyArgs} args - Arguments to create many ComponenteEvaluacions.
     * @example
     * // Create many ComponenteEvaluacions
     * const componenteEvaluacion = await prisma.componenteEvaluacion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ComponenteEvaluacionCreateManyArgs>(args?: SelectSubset<T, ComponenteEvaluacionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ComponenteEvaluacions and returns the data saved in the database.
     * @param {ComponenteEvaluacionCreateManyAndReturnArgs} args - Arguments to create many ComponenteEvaluacions.
     * @example
     * // Create many ComponenteEvaluacions
     * const componenteEvaluacion = await prisma.componenteEvaluacion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ComponenteEvaluacions and only return the `id_componente`
     * const componenteEvaluacionWithId_componenteOnly = await prisma.componenteEvaluacion.createManyAndReturn({
     *   select: { id_componente: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ComponenteEvaluacionCreateManyAndReturnArgs>(args?: SelectSubset<T, ComponenteEvaluacionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComponenteEvaluacionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ComponenteEvaluacion.
     * @param {ComponenteEvaluacionDeleteArgs} args - Arguments to delete one ComponenteEvaluacion.
     * @example
     * // Delete one ComponenteEvaluacion
     * const ComponenteEvaluacion = await prisma.componenteEvaluacion.delete({
     *   where: {
     *     // ... filter to delete one ComponenteEvaluacion
     *   }
     * })
     * 
     */
    delete<T extends ComponenteEvaluacionDeleteArgs>(args: SelectSubset<T, ComponenteEvaluacionDeleteArgs<ExtArgs>>): Prisma__ComponenteEvaluacionClient<$Result.GetResult<Prisma.$ComponenteEvaluacionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ComponenteEvaluacion.
     * @param {ComponenteEvaluacionUpdateArgs} args - Arguments to update one ComponenteEvaluacion.
     * @example
     * // Update one ComponenteEvaluacion
     * const componenteEvaluacion = await prisma.componenteEvaluacion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ComponenteEvaluacionUpdateArgs>(args: SelectSubset<T, ComponenteEvaluacionUpdateArgs<ExtArgs>>): Prisma__ComponenteEvaluacionClient<$Result.GetResult<Prisma.$ComponenteEvaluacionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ComponenteEvaluacions.
     * @param {ComponenteEvaluacionDeleteManyArgs} args - Arguments to filter ComponenteEvaluacions to delete.
     * @example
     * // Delete a few ComponenteEvaluacions
     * const { count } = await prisma.componenteEvaluacion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ComponenteEvaluacionDeleteManyArgs>(args?: SelectSubset<T, ComponenteEvaluacionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ComponenteEvaluacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComponenteEvaluacionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ComponenteEvaluacions
     * const componenteEvaluacion = await prisma.componenteEvaluacion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ComponenteEvaluacionUpdateManyArgs>(args: SelectSubset<T, ComponenteEvaluacionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ComponenteEvaluacions and returns the data updated in the database.
     * @param {ComponenteEvaluacionUpdateManyAndReturnArgs} args - Arguments to update many ComponenteEvaluacions.
     * @example
     * // Update many ComponenteEvaluacions
     * const componenteEvaluacion = await prisma.componenteEvaluacion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ComponenteEvaluacions and only return the `id_componente`
     * const componenteEvaluacionWithId_componenteOnly = await prisma.componenteEvaluacion.updateManyAndReturn({
     *   select: { id_componente: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ComponenteEvaluacionUpdateManyAndReturnArgs>(args: SelectSubset<T, ComponenteEvaluacionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ComponenteEvaluacionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ComponenteEvaluacion.
     * @param {ComponenteEvaluacionUpsertArgs} args - Arguments to update or create a ComponenteEvaluacion.
     * @example
     * // Update or create a ComponenteEvaluacion
     * const componenteEvaluacion = await prisma.componenteEvaluacion.upsert({
     *   create: {
     *     // ... data to create a ComponenteEvaluacion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ComponenteEvaluacion we want to update
     *   }
     * })
     */
    upsert<T extends ComponenteEvaluacionUpsertArgs>(args: SelectSubset<T, ComponenteEvaluacionUpsertArgs<ExtArgs>>): Prisma__ComponenteEvaluacionClient<$Result.GetResult<Prisma.$ComponenteEvaluacionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ComponenteEvaluacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComponenteEvaluacionCountArgs} args - Arguments to filter ComponenteEvaluacions to count.
     * @example
     * // Count the number of ComponenteEvaluacions
     * const count = await prisma.componenteEvaluacion.count({
     *   where: {
     *     // ... the filter for the ComponenteEvaluacions we want to count
     *   }
     * })
    **/
    count<T extends ComponenteEvaluacionCountArgs>(
      args?: Subset<T, ComponenteEvaluacionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ComponenteEvaluacionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ComponenteEvaluacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComponenteEvaluacionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ComponenteEvaluacionAggregateArgs>(args: Subset<T, ComponenteEvaluacionAggregateArgs>): Prisma.PrismaPromise<GetComponenteEvaluacionAggregateType<T>>

    /**
     * Group by ComponenteEvaluacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComponenteEvaluacionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ComponenteEvaluacionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ComponenteEvaluacionGroupByArgs['orderBy'] }
        : { orderBy?: ComponenteEvaluacionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ComponenteEvaluacionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetComponenteEvaluacionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ComponenteEvaluacion model
   */
  readonly fields: ComponenteEvaluacionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ComponenteEvaluacion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ComponenteEvaluacionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    evaluacion<T extends EvaluacionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EvaluacionDefaultArgs<ExtArgs>>): Prisma__EvaluacionClient<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    items<T extends ComponenteEvaluacion$itemsArgs<ExtArgs> = {}>(args?: Subset<T, ComponenteEvaluacion$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ItemEvaluacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ComponenteEvaluacion model
   */
  interface ComponenteEvaluacionFieldRefs {
    readonly id_componente: FieldRef<"ComponenteEvaluacion", 'String'>
    readonly nombre_componente: FieldRef<"ComponenteEvaluacion", 'String'>
    readonly porcentaje: FieldRef<"ComponenteEvaluacion", 'Int'>
    readonly nota_componente: FieldRef<"ComponenteEvaluacion", 'Float'>
    readonly id_evaluacion: FieldRef<"ComponenteEvaluacion", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ComponenteEvaluacion findUnique
   */
  export type ComponenteEvaluacionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComponenteEvaluacion
     */
    select?: ComponenteEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComponenteEvaluacion
     */
    omit?: ComponenteEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComponenteEvaluacionInclude<ExtArgs> | null
    /**
     * Filter, which ComponenteEvaluacion to fetch.
     */
    where: ComponenteEvaluacionWhereUniqueInput
  }

  /**
   * ComponenteEvaluacion findUniqueOrThrow
   */
  export type ComponenteEvaluacionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComponenteEvaluacion
     */
    select?: ComponenteEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComponenteEvaluacion
     */
    omit?: ComponenteEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComponenteEvaluacionInclude<ExtArgs> | null
    /**
     * Filter, which ComponenteEvaluacion to fetch.
     */
    where: ComponenteEvaluacionWhereUniqueInput
  }

  /**
   * ComponenteEvaluacion findFirst
   */
  export type ComponenteEvaluacionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComponenteEvaluacion
     */
    select?: ComponenteEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComponenteEvaluacion
     */
    omit?: ComponenteEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComponenteEvaluacionInclude<ExtArgs> | null
    /**
     * Filter, which ComponenteEvaluacion to fetch.
     */
    where?: ComponenteEvaluacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComponenteEvaluacions to fetch.
     */
    orderBy?: ComponenteEvaluacionOrderByWithRelationInput | ComponenteEvaluacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ComponenteEvaluacions.
     */
    cursor?: ComponenteEvaluacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComponenteEvaluacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComponenteEvaluacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ComponenteEvaluacions.
     */
    distinct?: ComponenteEvaluacionScalarFieldEnum | ComponenteEvaluacionScalarFieldEnum[]
  }

  /**
   * ComponenteEvaluacion findFirstOrThrow
   */
  export type ComponenteEvaluacionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComponenteEvaluacion
     */
    select?: ComponenteEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComponenteEvaluacion
     */
    omit?: ComponenteEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComponenteEvaluacionInclude<ExtArgs> | null
    /**
     * Filter, which ComponenteEvaluacion to fetch.
     */
    where?: ComponenteEvaluacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComponenteEvaluacions to fetch.
     */
    orderBy?: ComponenteEvaluacionOrderByWithRelationInput | ComponenteEvaluacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ComponenteEvaluacions.
     */
    cursor?: ComponenteEvaluacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComponenteEvaluacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComponenteEvaluacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ComponenteEvaluacions.
     */
    distinct?: ComponenteEvaluacionScalarFieldEnum | ComponenteEvaluacionScalarFieldEnum[]
  }

  /**
   * ComponenteEvaluacion findMany
   */
  export type ComponenteEvaluacionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComponenteEvaluacion
     */
    select?: ComponenteEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComponenteEvaluacion
     */
    omit?: ComponenteEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComponenteEvaluacionInclude<ExtArgs> | null
    /**
     * Filter, which ComponenteEvaluacions to fetch.
     */
    where?: ComponenteEvaluacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ComponenteEvaluacions to fetch.
     */
    orderBy?: ComponenteEvaluacionOrderByWithRelationInput | ComponenteEvaluacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ComponenteEvaluacions.
     */
    cursor?: ComponenteEvaluacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ComponenteEvaluacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ComponenteEvaluacions.
     */
    skip?: number
    distinct?: ComponenteEvaluacionScalarFieldEnum | ComponenteEvaluacionScalarFieldEnum[]
  }

  /**
   * ComponenteEvaluacion create
   */
  export type ComponenteEvaluacionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComponenteEvaluacion
     */
    select?: ComponenteEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComponenteEvaluacion
     */
    omit?: ComponenteEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComponenteEvaluacionInclude<ExtArgs> | null
    /**
     * The data needed to create a ComponenteEvaluacion.
     */
    data: XOR<ComponenteEvaluacionCreateInput, ComponenteEvaluacionUncheckedCreateInput>
  }

  /**
   * ComponenteEvaluacion createMany
   */
  export type ComponenteEvaluacionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ComponenteEvaluacions.
     */
    data: ComponenteEvaluacionCreateManyInput | ComponenteEvaluacionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ComponenteEvaluacion createManyAndReturn
   */
  export type ComponenteEvaluacionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComponenteEvaluacion
     */
    select?: ComponenteEvaluacionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ComponenteEvaluacion
     */
    omit?: ComponenteEvaluacionOmit<ExtArgs> | null
    /**
     * The data used to create many ComponenteEvaluacions.
     */
    data: ComponenteEvaluacionCreateManyInput | ComponenteEvaluacionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComponenteEvaluacionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ComponenteEvaluacion update
   */
  export type ComponenteEvaluacionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComponenteEvaluacion
     */
    select?: ComponenteEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComponenteEvaluacion
     */
    omit?: ComponenteEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComponenteEvaluacionInclude<ExtArgs> | null
    /**
     * The data needed to update a ComponenteEvaluacion.
     */
    data: XOR<ComponenteEvaluacionUpdateInput, ComponenteEvaluacionUncheckedUpdateInput>
    /**
     * Choose, which ComponenteEvaluacion to update.
     */
    where: ComponenteEvaluacionWhereUniqueInput
  }

  /**
   * ComponenteEvaluacion updateMany
   */
  export type ComponenteEvaluacionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ComponenteEvaluacions.
     */
    data: XOR<ComponenteEvaluacionUpdateManyMutationInput, ComponenteEvaluacionUncheckedUpdateManyInput>
    /**
     * Filter which ComponenteEvaluacions to update
     */
    where?: ComponenteEvaluacionWhereInput
    /**
     * Limit how many ComponenteEvaluacions to update.
     */
    limit?: number
  }

  /**
   * ComponenteEvaluacion updateManyAndReturn
   */
  export type ComponenteEvaluacionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComponenteEvaluacion
     */
    select?: ComponenteEvaluacionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ComponenteEvaluacion
     */
    omit?: ComponenteEvaluacionOmit<ExtArgs> | null
    /**
     * The data used to update ComponenteEvaluacions.
     */
    data: XOR<ComponenteEvaluacionUpdateManyMutationInput, ComponenteEvaluacionUncheckedUpdateManyInput>
    /**
     * Filter which ComponenteEvaluacions to update
     */
    where?: ComponenteEvaluacionWhereInput
    /**
     * Limit how many ComponenteEvaluacions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComponenteEvaluacionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ComponenteEvaluacion upsert
   */
  export type ComponenteEvaluacionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComponenteEvaluacion
     */
    select?: ComponenteEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComponenteEvaluacion
     */
    omit?: ComponenteEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComponenteEvaluacionInclude<ExtArgs> | null
    /**
     * The filter to search for the ComponenteEvaluacion to update in case it exists.
     */
    where: ComponenteEvaluacionWhereUniqueInput
    /**
     * In case the ComponenteEvaluacion found by the `where` argument doesn't exist, create a new ComponenteEvaluacion with this data.
     */
    create: XOR<ComponenteEvaluacionCreateInput, ComponenteEvaluacionUncheckedCreateInput>
    /**
     * In case the ComponenteEvaluacion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ComponenteEvaluacionUpdateInput, ComponenteEvaluacionUncheckedUpdateInput>
  }

  /**
   * ComponenteEvaluacion delete
   */
  export type ComponenteEvaluacionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComponenteEvaluacion
     */
    select?: ComponenteEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComponenteEvaluacion
     */
    omit?: ComponenteEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComponenteEvaluacionInclude<ExtArgs> | null
    /**
     * Filter which ComponenteEvaluacion to delete.
     */
    where: ComponenteEvaluacionWhereUniqueInput
  }

  /**
   * ComponenteEvaluacion deleteMany
   */
  export type ComponenteEvaluacionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ComponenteEvaluacions to delete
     */
    where?: ComponenteEvaluacionWhereInput
    /**
     * Limit how many ComponenteEvaluacions to delete.
     */
    limit?: number
  }

  /**
   * ComponenteEvaluacion.items
   */
  export type ComponenteEvaluacion$itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemEvaluacion
     */
    select?: ItemEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItemEvaluacion
     */
    omit?: ItemEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemEvaluacionInclude<ExtArgs> | null
    where?: ItemEvaluacionWhereInput
    orderBy?: ItemEvaluacionOrderByWithRelationInput | ItemEvaluacionOrderByWithRelationInput[]
    cursor?: ItemEvaluacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ItemEvaluacionScalarFieldEnum | ItemEvaluacionScalarFieldEnum[]
  }

  /**
   * ComponenteEvaluacion without action
   */
  export type ComponenteEvaluacionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComponenteEvaluacion
     */
    select?: ComponenteEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ComponenteEvaluacion
     */
    omit?: ComponenteEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ComponenteEvaluacionInclude<ExtArgs> | null
  }


  /**
   * Model ItemEvaluacion
   */

  export type AggregateItemEvaluacion = {
    _count: ItemEvaluacionCountAggregateOutputType | null
    _avg: ItemEvaluacionAvgAggregateOutputType | null
    _sum: ItemEvaluacionSumAggregateOutputType | null
    _min: ItemEvaluacionMinAggregateOutputType | null
    _max: ItemEvaluacionMaxAggregateOutputType | null
  }

  export type ItemEvaluacionAvgAggregateOutputType = {
    nota: number | null
  }

  export type ItemEvaluacionSumAggregateOutputType = {
    nota: number | null
  }

  export type ItemEvaluacionMinAggregateOutputType = {
    id_item: string | null
    enunciado: string | null
    nota: number | null
    id_componente: string | null
  }

  export type ItemEvaluacionMaxAggregateOutputType = {
    id_item: string | null
    enunciado: string | null
    nota: number | null
    id_componente: string | null
  }

  export type ItemEvaluacionCountAggregateOutputType = {
    id_item: number
    enunciado: number
    nota: number
    id_componente: number
    _all: number
  }


  export type ItemEvaluacionAvgAggregateInputType = {
    nota?: true
  }

  export type ItemEvaluacionSumAggregateInputType = {
    nota?: true
  }

  export type ItemEvaluacionMinAggregateInputType = {
    id_item?: true
    enunciado?: true
    nota?: true
    id_componente?: true
  }

  export type ItemEvaluacionMaxAggregateInputType = {
    id_item?: true
    enunciado?: true
    nota?: true
    id_componente?: true
  }

  export type ItemEvaluacionCountAggregateInputType = {
    id_item?: true
    enunciado?: true
    nota?: true
    id_componente?: true
    _all?: true
  }

  export type ItemEvaluacionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ItemEvaluacion to aggregate.
     */
    where?: ItemEvaluacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ItemEvaluacions to fetch.
     */
    orderBy?: ItemEvaluacionOrderByWithRelationInput | ItemEvaluacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ItemEvaluacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ItemEvaluacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ItemEvaluacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ItemEvaluacions
    **/
    _count?: true | ItemEvaluacionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ItemEvaluacionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ItemEvaluacionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ItemEvaluacionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ItemEvaluacionMaxAggregateInputType
  }

  export type GetItemEvaluacionAggregateType<T extends ItemEvaluacionAggregateArgs> = {
        [P in keyof T & keyof AggregateItemEvaluacion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateItemEvaluacion[P]>
      : GetScalarType<T[P], AggregateItemEvaluacion[P]>
  }




  export type ItemEvaluacionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ItemEvaluacionWhereInput
    orderBy?: ItemEvaluacionOrderByWithAggregationInput | ItemEvaluacionOrderByWithAggregationInput[]
    by: ItemEvaluacionScalarFieldEnum[] | ItemEvaluacionScalarFieldEnum
    having?: ItemEvaluacionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ItemEvaluacionCountAggregateInputType | true
    _avg?: ItemEvaluacionAvgAggregateInputType
    _sum?: ItemEvaluacionSumAggregateInputType
    _min?: ItemEvaluacionMinAggregateInputType
    _max?: ItemEvaluacionMaxAggregateInputType
  }

  export type ItemEvaluacionGroupByOutputType = {
    id_item: string
    enunciado: string
    nota: number | null
    id_componente: string
    _count: ItemEvaluacionCountAggregateOutputType | null
    _avg: ItemEvaluacionAvgAggregateOutputType | null
    _sum: ItemEvaluacionSumAggregateOutputType | null
    _min: ItemEvaluacionMinAggregateOutputType | null
    _max: ItemEvaluacionMaxAggregateOutputType | null
  }

  type GetItemEvaluacionGroupByPayload<T extends ItemEvaluacionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ItemEvaluacionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ItemEvaluacionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ItemEvaluacionGroupByOutputType[P]>
            : GetScalarType<T[P], ItemEvaluacionGroupByOutputType[P]>
        }
      >
    >


  export type ItemEvaluacionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_item?: boolean
    enunciado?: boolean
    nota?: boolean
    id_componente?: boolean
    componente?: boolean | ComponenteEvaluacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["itemEvaluacion"]>

  export type ItemEvaluacionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_item?: boolean
    enunciado?: boolean
    nota?: boolean
    id_componente?: boolean
    componente?: boolean | ComponenteEvaluacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["itemEvaluacion"]>

  export type ItemEvaluacionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_item?: boolean
    enunciado?: boolean
    nota?: boolean
    id_componente?: boolean
    componente?: boolean | ComponenteEvaluacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["itemEvaluacion"]>

  export type ItemEvaluacionSelectScalar = {
    id_item?: boolean
    enunciado?: boolean
    nota?: boolean
    id_componente?: boolean
  }

  export type ItemEvaluacionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_item" | "enunciado" | "nota" | "id_componente", ExtArgs["result"]["itemEvaluacion"]>
  export type ItemEvaluacionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    componente?: boolean | ComponenteEvaluacionDefaultArgs<ExtArgs>
  }
  export type ItemEvaluacionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    componente?: boolean | ComponenteEvaluacionDefaultArgs<ExtArgs>
  }
  export type ItemEvaluacionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    componente?: boolean | ComponenteEvaluacionDefaultArgs<ExtArgs>
  }

  export type $ItemEvaluacionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ItemEvaluacion"
    objects: {
      componente: Prisma.$ComponenteEvaluacionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_item: string
      enunciado: string
      nota: number | null
      id_componente: string
    }, ExtArgs["result"]["itemEvaluacion"]>
    composites: {}
  }

  type ItemEvaluacionGetPayload<S extends boolean | null | undefined | ItemEvaluacionDefaultArgs> = $Result.GetResult<Prisma.$ItemEvaluacionPayload, S>

  type ItemEvaluacionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ItemEvaluacionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ItemEvaluacionCountAggregateInputType | true
    }

  export interface ItemEvaluacionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ItemEvaluacion'], meta: { name: 'ItemEvaluacion' } }
    /**
     * Find zero or one ItemEvaluacion that matches the filter.
     * @param {ItemEvaluacionFindUniqueArgs} args - Arguments to find a ItemEvaluacion
     * @example
     * // Get one ItemEvaluacion
     * const itemEvaluacion = await prisma.itemEvaluacion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ItemEvaluacionFindUniqueArgs>(args: SelectSubset<T, ItemEvaluacionFindUniqueArgs<ExtArgs>>): Prisma__ItemEvaluacionClient<$Result.GetResult<Prisma.$ItemEvaluacionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ItemEvaluacion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ItemEvaluacionFindUniqueOrThrowArgs} args - Arguments to find a ItemEvaluacion
     * @example
     * // Get one ItemEvaluacion
     * const itemEvaluacion = await prisma.itemEvaluacion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ItemEvaluacionFindUniqueOrThrowArgs>(args: SelectSubset<T, ItemEvaluacionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ItemEvaluacionClient<$Result.GetResult<Prisma.$ItemEvaluacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ItemEvaluacion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemEvaluacionFindFirstArgs} args - Arguments to find a ItemEvaluacion
     * @example
     * // Get one ItemEvaluacion
     * const itemEvaluacion = await prisma.itemEvaluacion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ItemEvaluacionFindFirstArgs>(args?: SelectSubset<T, ItemEvaluacionFindFirstArgs<ExtArgs>>): Prisma__ItemEvaluacionClient<$Result.GetResult<Prisma.$ItemEvaluacionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ItemEvaluacion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemEvaluacionFindFirstOrThrowArgs} args - Arguments to find a ItemEvaluacion
     * @example
     * // Get one ItemEvaluacion
     * const itemEvaluacion = await prisma.itemEvaluacion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ItemEvaluacionFindFirstOrThrowArgs>(args?: SelectSubset<T, ItemEvaluacionFindFirstOrThrowArgs<ExtArgs>>): Prisma__ItemEvaluacionClient<$Result.GetResult<Prisma.$ItemEvaluacionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ItemEvaluacions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemEvaluacionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ItemEvaluacions
     * const itemEvaluacions = await prisma.itemEvaluacion.findMany()
     * 
     * // Get first 10 ItemEvaluacions
     * const itemEvaluacions = await prisma.itemEvaluacion.findMany({ take: 10 })
     * 
     * // Only select the `id_item`
     * const itemEvaluacionWithId_itemOnly = await prisma.itemEvaluacion.findMany({ select: { id_item: true } })
     * 
     */
    findMany<T extends ItemEvaluacionFindManyArgs>(args?: SelectSubset<T, ItemEvaluacionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ItemEvaluacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ItemEvaluacion.
     * @param {ItemEvaluacionCreateArgs} args - Arguments to create a ItemEvaluacion.
     * @example
     * // Create one ItemEvaluacion
     * const ItemEvaluacion = await prisma.itemEvaluacion.create({
     *   data: {
     *     // ... data to create a ItemEvaluacion
     *   }
     * })
     * 
     */
    create<T extends ItemEvaluacionCreateArgs>(args: SelectSubset<T, ItemEvaluacionCreateArgs<ExtArgs>>): Prisma__ItemEvaluacionClient<$Result.GetResult<Prisma.$ItemEvaluacionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ItemEvaluacions.
     * @param {ItemEvaluacionCreateManyArgs} args - Arguments to create many ItemEvaluacions.
     * @example
     * // Create many ItemEvaluacions
     * const itemEvaluacion = await prisma.itemEvaluacion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ItemEvaluacionCreateManyArgs>(args?: SelectSubset<T, ItemEvaluacionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ItemEvaluacions and returns the data saved in the database.
     * @param {ItemEvaluacionCreateManyAndReturnArgs} args - Arguments to create many ItemEvaluacions.
     * @example
     * // Create many ItemEvaluacions
     * const itemEvaluacion = await prisma.itemEvaluacion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ItemEvaluacions and only return the `id_item`
     * const itemEvaluacionWithId_itemOnly = await prisma.itemEvaluacion.createManyAndReturn({
     *   select: { id_item: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ItemEvaluacionCreateManyAndReturnArgs>(args?: SelectSubset<T, ItemEvaluacionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ItemEvaluacionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ItemEvaluacion.
     * @param {ItemEvaluacionDeleteArgs} args - Arguments to delete one ItemEvaluacion.
     * @example
     * // Delete one ItemEvaluacion
     * const ItemEvaluacion = await prisma.itemEvaluacion.delete({
     *   where: {
     *     // ... filter to delete one ItemEvaluacion
     *   }
     * })
     * 
     */
    delete<T extends ItemEvaluacionDeleteArgs>(args: SelectSubset<T, ItemEvaluacionDeleteArgs<ExtArgs>>): Prisma__ItemEvaluacionClient<$Result.GetResult<Prisma.$ItemEvaluacionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ItemEvaluacion.
     * @param {ItemEvaluacionUpdateArgs} args - Arguments to update one ItemEvaluacion.
     * @example
     * // Update one ItemEvaluacion
     * const itemEvaluacion = await prisma.itemEvaluacion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ItemEvaluacionUpdateArgs>(args: SelectSubset<T, ItemEvaluacionUpdateArgs<ExtArgs>>): Prisma__ItemEvaluacionClient<$Result.GetResult<Prisma.$ItemEvaluacionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ItemEvaluacions.
     * @param {ItemEvaluacionDeleteManyArgs} args - Arguments to filter ItemEvaluacions to delete.
     * @example
     * // Delete a few ItemEvaluacions
     * const { count } = await prisma.itemEvaluacion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ItemEvaluacionDeleteManyArgs>(args?: SelectSubset<T, ItemEvaluacionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ItemEvaluacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemEvaluacionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ItemEvaluacions
     * const itemEvaluacion = await prisma.itemEvaluacion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ItemEvaluacionUpdateManyArgs>(args: SelectSubset<T, ItemEvaluacionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ItemEvaluacions and returns the data updated in the database.
     * @param {ItemEvaluacionUpdateManyAndReturnArgs} args - Arguments to update many ItemEvaluacions.
     * @example
     * // Update many ItemEvaluacions
     * const itemEvaluacion = await prisma.itemEvaluacion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ItemEvaluacions and only return the `id_item`
     * const itemEvaluacionWithId_itemOnly = await prisma.itemEvaluacion.updateManyAndReturn({
     *   select: { id_item: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ItemEvaluacionUpdateManyAndReturnArgs>(args: SelectSubset<T, ItemEvaluacionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ItemEvaluacionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ItemEvaluacion.
     * @param {ItemEvaluacionUpsertArgs} args - Arguments to update or create a ItemEvaluacion.
     * @example
     * // Update or create a ItemEvaluacion
     * const itemEvaluacion = await prisma.itemEvaluacion.upsert({
     *   create: {
     *     // ... data to create a ItemEvaluacion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ItemEvaluacion we want to update
     *   }
     * })
     */
    upsert<T extends ItemEvaluacionUpsertArgs>(args: SelectSubset<T, ItemEvaluacionUpsertArgs<ExtArgs>>): Prisma__ItemEvaluacionClient<$Result.GetResult<Prisma.$ItemEvaluacionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ItemEvaluacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemEvaluacionCountArgs} args - Arguments to filter ItemEvaluacions to count.
     * @example
     * // Count the number of ItemEvaluacions
     * const count = await prisma.itemEvaluacion.count({
     *   where: {
     *     // ... the filter for the ItemEvaluacions we want to count
     *   }
     * })
    **/
    count<T extends ItemEvaluacionCountArgs>(
      args?: Subset<T, ItemEvaluacionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ItemEvaluacionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ItemEvaluacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemEvaluacionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ItemEvaluacionAggregateArgs>(args: Subset<T, ItemEvaluacionAggregateArgs>): Prisma.PrismaPromise<GetItemEvaluacionAggregateType<T>>

    /**
     * Group by ItemEvaluacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ItemEvaluacionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ItemEvaluacionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ItemEvaluacionGroupByArgs['orderBy'] }
        : { orderBy?: ItemEvaluacionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ItemEvaluacionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetItemEvaluacionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ItemEvaluacion model
   */
  readonly fields: ItemEvaluacionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ItemEvaluacion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ItemEvaluacionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    componente<T extends ComponenteEvaluacionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ComponenteEvaluacionDefaultArgs<ExtArgs>>): Prisma__ComponenteEvaluacionClient<$Result.GetResult<Prisma.$ComponenteEvaluacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ItemEvaluacion model
   */
  interface ItemEvaluacionFieldRefs {
    readonly id_item: FieldRef<"ItemEvaluacion", 'String'>
    readonly enunciado: FieldRef<"ItemEvaluacion", 'String'>
    readonly nota: FieldRef<"ItemEvaluacion", 'Float'>
    readonly id_componente: FieldRef<"ItemEvaluacion", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ItemEvaluacion findUnique
   */
  export type ItemEvaluacionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemEvaluacion
     */
    select?: ItemEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItemEvaluacion
     */
    omit?: ItemEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemEvaluacionInclude<ExtArgs> | null
    /**
     * Filter, which ItemEvaluacion to fetch.
     */
    where: ItemEvaluacionWhereUniqueInput
  }

  /**
   * ItemEvaluacion findUniqueOrThrow
   */
  export type ItemEvaluacionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemEvaluacion
     */
    select?: ItemEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItemEvaluacion
     */
    omit?: ItemEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemEvaluacionInclude<ExtArgs> | null
    /**
     * Filter, which ItemEvaluacion to fetch.
     */
    where: ItemEvaluacionWhereUniqueInput
  }

  /**
   * ItemEvaluacion findFirst
   */
  export type ItemEvaluacionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemEvaluacion
     */
    select?: ItemEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItemEvaluacion
     */
    omit?: ItemEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemEvaluacionInclude<ExtArgs> | null
    /**
     * Filter, which ItemEvaluacion to fetch.
     */
    where?: ItemEvaluacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ItemEvaluacions to fetch.
     */
    orderBy?: ItemEvaluacionOrderByWithRelationInput | ItemEvaluacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ItemEvaluacions.
     */
    cursor?: ItemEvaluacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ItemEvaluacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ItemEvaluacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ItemEvaluacions.
     */
    distinct?: ItemEvaluacionScalarFieldEnum | ItemEvaluacionScalarFieldEnum[]
  }

  /**
   * ItemEvaluacion findFirstOrThrow
   */
  export type ItemEvaluacionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemEvaluacion
     */
    select?: ItemEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItemEvaluacion
     */
    omit?: ItemEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemEvaluacionInclude<ExtArgs> | null
    /**
     * Filter, which ItemEvaluacion to fetch.
     */
    where?: ItemEvaluacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ItemEvaluacions to fetch.
     */
    orderBy?: ItemEvaluacionOrderByWithRelationInput | ItemEvaluacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ItemEvaluacions.
     */
    cursor?: ItemEvaluacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ItemEvaluacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ItemEvaluacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ItemEvaluacions.
     */
    distinct?: ItemEvaluacionScalarFieldEnum | ItemEvaluacionScalarFieldEnum[]
  }

  /**
   * ItemEvaluacion findMany
   */
  export type ItemEvaluacionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemEvaluacion
     */
    select?: ItemEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItemEvaluacion
     */
    omit?: ItemEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemEvaluacionInclude<ExtArgs> | null
    /**
     * Filter, which ItemEvaluacions to fetch.
     */
    where?: ItemEvaluacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ItemEvaluacions to fetch.
     */
    orderBy?: ItemEvaluacionOrderByWithRelationInput | ItemEvaluacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ItemEvaluacions.
     */
    cursor?: ItemEvaluacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ItemEvaluacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ItemEvaluacions.
     */
    skip?: number
    distinct?: ItemEvaluacionScalarFieldEnum | ItemEvaluacionScalarFieldEnum[]
  }

  /**
   * ItemEvaluacion create
   */
  export type ItemEvaluacionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemEvaluacion
     */
    select?: ItemEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItemEvaluacion
     */
    omit?: ItemEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemEvaluacionInclude<ExtArgs> | null
    /**
     * The data needed to create a ItemEvaluacion.
     */
    data: XOR<ItemEvaluacionCreateInput, ItemEvaluacionUncheckedCreateInput>
  }

  /**
   * ItemEvaluacion createMany
   */
  export type ItemEvaluacionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ItemEvaluacions.
     */
    data: ItemEvaluacionCreateManyInput | ItemEvaluacionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ItemEvaluacion createManyAndReturn
   */
  export type ItemEvaluacionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemEvaluacion
     */
    select?: ItemEvaluacionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ItemEvaluacion
     */
    omit?: ItemEvaluacionOmit<ExtArgs> | null
    /**
     * The data used to create many ItemEvaluacions.
     */
    data: ItemEvaluacionCreateManyInput | ItemEvaluacionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemEvaluacionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ItemEvaluacion update
   */
  export type ItemEvaluacionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemEvaluacion
     */
    select?: ItemEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItemEvaluacion
     */
    omit?: ItemEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemEvaluacionInclude<ExtArgs> | null
    /**
     * The data needed to update a ItemEvaluacion.
     */
    data: XOR<ItemEvaluacionUpdateInput, ItemEvaluacionUncheckedUpdateInput>
    /**
     * Choose, which ItemEvaluacion to update.
     */
    where: ItemEvaluacionWhereUniqueInput
  }

  /**
   * ItemEvaluacion updateMany
   */
  export type ItemEvaluacionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ItemEvaluacions.
     */
    data: XOR<ItemEvaluacionUpdateManyMutationInput, ItemEvaluacionUncheckedUpdateManyInput>
    /**
     * Filter which ItemEvaluacions to update
     */
    where?: ItemEvaluacionWhereInput
    /**
     * Limit how many ItemEvaluacions to update.
     */
    limit?: number
  }

  /**
   * ItemEvaluacion updateManyAndReturn
   */
  export type ItemEvaluacionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemEvaluacion
     */
    select?: ItemEvaluacionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ItemEvaluacion
     */
    omit?: ItemEvaluacionOmit<ExtArgs> | null
    /**
     * The data used to update ItemEvaluacions.
     */
    data: XOR<ItemEvaluacionUpdateManyMutationInput, ItemEvaluacionUncheckedUpdateManyInput>
    /**
     * Filter which ItemEvaluacions to update
     */
    where?: ItemEvaluacionWhereInput
    /**
     * Limit how many ItemEvaluacions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemEvaluacionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ItemEvaluacion upsert
   */
  export type ItemEvaluacionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemEvaluacion
     */
    select?: ItemEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItemEvaluacion
     */
    omit?: ItemEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemEvaluacionInclude<ExtArgs> | null
    /**
     * The filter to search for the ItemEvaluacion to update in case it exists.
     */
    where: ItemEvaluacionWhereUniqueInput
    /**
     * In case the ItemEvaluacion found by the `where` argument doesn't exist, create a new ItemEvaluacion with this data.
     */
    create: XOR<ItemEvaluacionCreateInput, ItemEvaluacionUncheckedCreateInput>
    /**
     * In case the ItemEvaluacion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ItemEvaluacionUpdateInput, ItemEvaluacionUncheckedUpdateInput>
  }

  /**
   * ItemEvaluacion delete
   */
  export type ItemEvaluacionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemEvaluacion
     */
    select?: ItemEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItemEvaluacion
     */
    omit?: ItemEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemEvaluacionInclude<ExtArgs> | null
    /**
     * Filter which ItemEvaluacion to delete.
     */
    where: ItemEvaluacionWhereUniqueInput
  }

  /**
   * ItemEvaluacion deleteMany
   */
  export type ItemEvaluacionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ItemEvaluacions to delete
     */
    where?: ItemEvaluacionWhereInput
    /**
     * Limit how many ItemEvaluacions to delete.
     */
    limit?: number
  }

  /**
   * ItemEvaluacion without action
   */
  export type ItemEvaluacionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ItemEvaluacion
     */
    select?: ItemEvaluacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ItemEvaluacion
     */
    omit?: ItemEvaluacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ItemEvaluacionInclude<ExtArgs> | null
  }


  /**
   * Model DescripcionFinal
   */

  export type AggregateDescripcionFinal = {
    _count: DescripcionFinalCountAggregateOutputType | null
    _avg: DescripcionFinalAvgAggregateOutputType | null
    _sum: DescripcionFinalSumAggregateOutputType | null
    _min: DescripcionFinalMinAggregateOutputType | null
    _max: DescripcionFinalMaxAggregateOutputType | null
  }

  export type DescripcionFinalAvgAggregateOutputType = {
    cumplimiento: number | null
  }

  export type DescripcionFinalSumAggregateOutputType = {
    cumplimiento: number | null
  }

  export type DescripcionFinalMinAggregateOutputType = {
    id_evaluacion: string | null
    nivel: string | null
    cumplimiento: number | null
    descripcion: string | null
  }

  export type DescripcionFinalMaxAggregateOutputType = {
    id_evaluacion: string | null
    nivel: string | null
    cumplimiento: number | null
    descripcion: string | null
  }

  export type DescripcionFinalCountAggregateOutputType = {
    id_evaluacion: number
    nivel: number
    cumplimiento: number
    descripcion: number
    _all: number
  }


  export type DescripcionFinalAvgAggregateInputType = {
    cumplimiento?: true
  }

  export type DescripcionFinalSumAggregateInputType = {
    cumplimiento?: true
  }

  export type DescripcionFinalMinAggregateInputType = {
    id_evaluacion?: true
    nivel?: true
    cumplimiento?: true
    descripcion?: true
  }

  export type DescripcionFinalMaxAggregateInputType = {
    id_evaluacion?: true
    nivel?: true
    cumplimiento?: true
    descripcion?: true
  }

  export type DescripcionFinalCountAggregateInputType = {
    id_evaluacion?: true
    nivel?: true
    cumplimiento?: true
    descripcion?: true
    _all?: true
  }

  export type DescripcionFinalAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DescripcionFinal to aggregate.
     */
    where?: DescripcionFinalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DescripcionFinals to fetch.
     */
    orderBy?: DescripcionFinalOrderByWithRelationInput | DescripcionFinalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DescripcionFinalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DescripcionFinals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DescripcionFinals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DescripcionFinals
    **/
    _count?: true | DescripcionFinalCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DescripcionFinalAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DescripcionFinalSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DescripcionFinalMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DescripcionFinalMaxAggregateInputType
  }

  export type GetDescripcionFinalAggregateType<T extends DescripcionFinalAggregateArgs> = {
        [P in keyof T & keyof AggregateDescripcionFinal]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDescripcionFinal[P]>
      : GetScalarType<T[P], AggregateDescripcionFinal[P]>
  }




  export type DescripcionFinalGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DescripcionFinalWhereInput
    orderBy?: DescripcionFinalOrderByWithAggregationInput | DescripcionFinalOrderByWithAggregationInput[]
    by: DescripcionFinalScalarFieldEnum[] | DescripcionFinalScalarFieldEnum
    having?: DescripcionFinalScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DescripcionFinalCountAggregateInputType | true
    _avg?: DescripcionFinalAvgAggregateInputType
    _sum?: DescripcionFinalSumAggregateInputType
    _min?: DescripcionFinalMinAggregateInputType
    _max?: DescripcionFinalMaxAggregateInputType
  }

  export type DescripcionFinalGroupByOutputType = {
    id_evaluacion: string
    nivel: string
    cumplimiento: number
    descripcion: string
    _count: DescripcionFinalCountAggregateOutputType | null
    _avg: DescripcionFinalAvgAggregateOutputType | null
    _sum: DescripcionFinalSumAggregateOutputType | null
    _min: DescripcionFinalMinAggregateOutputType | null
    _max: DescripcionFinalMaxAggregateOutputType | null
  }

  type GetDescripcionFinalGroupByPayload<T extends DescripcionFinalGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DescripcionFinalGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DescripcionFinalGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DescripcionFinalGroupByOutputType[P]>
            : GetScalarType<T[P], DescripcionFinalGroupByOutputType[P]>
        }
      >
    >


  export type DescripcionFinalSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_evaluacion?: boolean
    nivel?: boolean
    cumplimiento?: boolean
    descripcion?: boolean
    evaluacion?: boolean | EvaluacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["descripcionFinal"]>

  export type DescripcionFinalSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_evaluacion?: boolean
    nivel?: boolean
    cumplimiento?: boolean
    descripcion?: boolean
    evaluacion?: boolean | EvaluacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["descripcionFinal"]>

  export type DescripcionFinalSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_evaluacion?: boolean
    nivel?: boolean
    cumplimiento?: boolean
    descripcion?: boolean
    evaluacion?: boolean | EvaluacionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["descripcionFinal"]>

  export type DescripcionFinalSelectScalar = {
    id_evaluacion?: boolean
    nivel?: boolean
    cumplimiento?: boolean
    descripcion?: boolean
  }

  export type DescripcionFinalOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id_evaluacion" | "nivel" | "cumplimiento" | "descripcion", ExtArgs["result"]["descripcionFinal"]>
  export type DescripcionFinalInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    evaluacion?: boolean | EvaluacionDefaultArgs<ExtArgs>
  }
  export type DescripcionFinalIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    evaluacion?: boolean | EvaluacionDefaultArgs<ExtArgs>
  }
  export type DescripcionFinalIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    evaluacion?: boolean | EvaluacionDefaultArgs<ExtArgs>
  }

  export type $DescripcionFinalPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DescripcionFinal"
    objects: {
      evaluacion: Prisma.$EvaluacionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_evaluacion: string
      nivel: string
      cumplimiento: number
      descripcion: string
    }, ExtArgs["result"]["descripcionFinal"]>
    composites: {}
  }

  type DescripcionFinalGetPayload<S extends boolean | null | undefined | DescripcionFinalDefaultArgs> = $Result.GetResult<Prisma.$DescripcionFinalPayload, S>

  type DescripcionFinalCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DescripcionFinalFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DescripcionFinalCountAggregateInputType | true
    }

  export interface DescripcionFinalDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DescripcionFinal'], meta: { name: 'DescripcionFinal' } }
    /**
     * Find zero or one DescripcionFinal that matches the filter.
     * @param {DescripcionFinalFindUniqueArgs} args - Arguments to find a DescripcionFinal
     * @example
     * // Get one DescripcionFinal
     * const descripcionFinal = await prisma.descripcionFinal.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DescripcionFinalFindUniqueArgs>(args: SelectSubset<T, DescripcionFinalFindUniqueArgs<ExtArgs>>): Prisma__DescripcionFinalClient<$Result.GetResult<Prisma.$DescripcionFinalPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one DescripcionFinal that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DescripcionFinalFindUniqueOrThrowArgs} args - Arguments to find a DescripcionFinal
     * @example
     * // Get one DescripcionFinal
     * const descripcionFinal = await prisma.descripcionFinal.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DescripcionFinalFindUniqueOrThrowArgs>(args: SelectSubset<T, DescripcionFinalFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DescripcionFinalClient<$Result.GetResult<Prisma.$DescripcionFinalPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DescripcionFinal that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DescripcionFinalFindFirstArgs} args - Arguments to find a DescripcionFinal
     * @example
     * // Get one DescripcionFinal
     * const descripcionFinal = await prisma.descripcionFinal.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DescripcionFinalFindFirstArgs>(args?: SelectSubset<T, DescripcionFinalFindFirstArgs<ExtArgs>>): Prisma__DescripcionFinalClient<$Result.GetResult<Prisma.$DescripcionFinalPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first DescripcionFinal that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DescripcionFinalFindFirstOrThrowArgs} args - Arguments to find a DescripcionFinal
     * @example
     * // Get one DescripcionFinal
     * const descripcionFinal = await prisma.descripcionFinal.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DescripcionFinalFindFirstOrThrowArgs>(args?: SelectSubset<T, DescripcionFinalFindFirstOrThrowArgs<ExtArgs>>): Prisma__DescripcionFinalClient<$Result.GetResult<Prisma.$DescripcionFinalPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more DescripcionFinals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DescripcionFinalFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DescripcionFinals
     * const descripcionFinals = await prisma.descripcionFinal.findMany()
     * 
     * // Get first 10 DescripcionFinals
     * const descripcionFinals = await prisma.descripcionFinal.findMany({ take: 10 })
     * 
     * // Only select the `id_evaluacion`
     * const descripcionFinalWithId_evaluacionOnly = await prisma.descripcionFinal.findMany({ select: { id_evaluacion: true } })
     * 
     */
    findMany<T extends DescripcionFinalFindManyArgs>(args?: SelectSubset<T, DescripcionFinalFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DescripcionFinalPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a DescripcionFinal.
     * @param {DescripcionFinalCreateArgs} args - Arguments to create a DescripcionFinal.
     * @example
     * // Create one DescripcionFinal
     * const DescripcionFinal = await prisma.descripcionFinal.create({
     *   data: {
     *     // ... data to create a DescripcionFinal
     *   }
     * })
     * 
     */
    create<T extends DescripcionFinalCreateArgs>(args: SelectSubset<T, DescripcionFinalCreateArgs<ExtArgs>>): Prisma__DescripcionFinalClient<$Result.GetResult<Prisma.$DescripcionFinalPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many DescripcionFinals.
     * @param {DescripcionFinalCreateManyArgs} args - Arguments to create many DescripcionFinals.
     * @example
     * // Create many DescripcionFinals
     * const descripcionFinal = await prisma.descripcionFinal.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DescripcionFinalCreateManyArgs>(args?: SelectSubset<T, DescripcionFinalCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many DescripcionFinals and returns the data saved in the database.
     * @param {DescripcionFinalCreateManyAndReturnArgs} args - Arguments to create many DescripcionFinals.
     * @example
     * // Create many DescripcionFinals
     * const descripcionFinal = await prisma.descripcionFinal.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many DescripcionFinals and only return the `id_evaluacion`
     * const descripcionFinalWithId_evaluacionOnly = await prisma.descripcionFinal.createManyAndReturn({
     *   select: { id_evaluacion: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DescripcionFinalCreateManyAndReturnArgs>(args?: SelectSubset<T, DescripcionFinalCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DescripcionFinalPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a DescripcionFinal.
     * @param {DescripcionFinalDeleteArgs} args - Arguments to delete one DescripcionFinal.
     * @example
     * // Delete one DescripcionFinal
     * const DescripcionFinal = await prisma.descripcionFinal.delete({
     *   where: {
     *     // ... filter to delete one DescripcionFinal
     *   }
     * })
     * 
     */
    delete<T extends DescripcionFinalDeleteArgs>(args: SelectSubset<T, DescripcionFinalDeleteArgs<ExtArgs>>): Prisma__DescripcionFinalClient<$Result.GetResult<Prisma.$DescripcionFinalPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one DescripcionFinal.
     * @param {DescripcionFinalUpdateArgs} args - Arguments to update one DescripcionFinal.
     * @example
     * // Update one DescripcionFinal
     * const descripcionFinal = await prisma.descripcionFinal.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DescripcionFinalUpdateArgs>(args: SelectSubset<T, DescripcionFinalUpdateArgs<ExtArgs>>): Prisma__DescripcionFinalClient<$Result.GetResult<Prisma.$DescripcionFinalPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more DescripcionFinals.
     * @param {DescripcionFinalDeleteManyArgs} args - Arguments to filter DescripcionFinals to delete.
     * @example
     * // Delete a few DescripcionFinals
     * const { count } = await prisma.descripcionFinal.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DescripcionFinalDeleteManyArgs>(args?: SelectSubset<T, DescripcionFinalDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DescripcionFinals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DescripcionFinalUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DescripcionFinals
     * const descripcionFinal = await prisma.descripcionFinal.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DescripcionFinalUpdateManyArgs>(args: SelectSubset<T, DescripcionFinalUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DescripcionFinals and returns the data updated in the database.
     * @param {DescripcionFinalUpdateManyAndReturnArgs} args - Arguments to update many DescripcionFinals.
     * @example
     * // Update many DescripcionFinals
     * const descripcionFinal = await prisma.descripcionFinal.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more DescripcionFinals and only return the `id_evaluacion`
     * const descripcionFinalWithId_evaluacionOnly = await prisma.descripcionFinal.updateManyAndReturn({
     *   select: { id_evaluacion: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DescripcionFinalUpdateManyAndReturnArgs>(args: SelectSubset<T, DescripcionFinalUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DescripcionFinalPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one DescripcionFinal.
     * @param {DescripcionFinalUpsertArgs} args - Arguments to update or create a DescripcionFinal.
     * @example
     * // Update or create a DescripcionFinal
     * const descripcionFinal = await prisma.descripcionFinal.upsert({
     *   create: {
     *     // ... data to create a DescripcionFinal
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DescripcionFinal we want to update
     *   }
     * })
     */
    upsert<T extends DescripcionFinalUpsertArgs>(args: SelectSubset<T, DescripcionFinalUpsertArgs<ExtArgs>>): Prisma__DescripcionFinalClient<$Result.GetResult<Prisma.$DescripcionFinalPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of DescripcionFinals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DescripcionFinalCountArgs} args - Arguments to filter DescripcionFinals to count.
     * @example
     * // Count the number of DescripcionFinals
     * const count = await prisma.descripcionFinal.count({
     *   where: {
     *     // ... the filter for the DescripcionFinals we want to count
     *   }
     * })
    **/
    count<T extends DescripcionFinalCountArgs>(
      args?: Subset<T, DescripcionFinalCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DescripcionFinalCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DescripcionFinal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DescripcionFinalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DescripcionFinalAggregateArgs>(args: Subset<T, DescripcionFinalAggregateArgs>): Prisma.PrismaPromise<GetDescripcionFinalAggregateType<T>>

    /**
     * Group by DescripcionFinal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DescripcionFinalGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DescripcionFinalGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DescripcionFinalGroupByArgs['orderBy'] }
        : { orderBy?: DescripcionFinalGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DescripcionFinalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDescripcionFinalGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DescripcionFinal model
   */
  readonly fields: DescripcionFinalFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DescripcionFinal.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DescripcionFinalClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    evaluacion<T extends EvaluacionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EvaluacionDefaultArgs<ExtArgs>>): Prisma__EvaluacionClient<$Result.GetResult<Prisma.$EvaluacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DescripcionFinal model
   */
  interface DescripcionFinalFieldRefs {
    readonly id_evaluacion: FieldRef<"DescripcionFinal", 'String'>
    readonly nivel: FieldRef<"DescripcionFinal", 'String'>
    readonly cumplimiento: FieldRef<"DescripcionFinal", 'Int'>
    readonly descripcion: FieldRef<"DescripcionFinal", 'String'>
  }
    

  // Custom InputTypes
  /**
   * DescripcionFinal findUnique
   */
  export type DescripcionFinalFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DescripcionFinal
     */
    select?: DescripcionFinalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DescripcionFinal
     */
    omit?: DescripcionFinalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescripcionFinalInclude<ExtArgs> | null
    /**
     * Filter, which DescripcionFinal to fetch.
     */
    where: DescripcionFinalWhereUniqueInput
  }

  /**
   * DescripcionFinal findUniqueOrThrow
   */
  export type DescripcionFinalFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DescripcionFinal
     */
    select?: DescripcionFinalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DescripcionFinal
     */
    omit?: DescripcionFinalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescripcionFinalInclude<ExtArgs> | null
    /**
     * Filter, which DescripcionFinal to fetch.
     */
    where: DescripcionFinalWhereUniqueInput
  }

  /**
   * DescripcionFinal findFirst
   */
  export type DescripcionFinalFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DescripcionFinal
     */
    select?: DescripcionFinalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DescripcionFinal
     */
    omit?: DescripcionFinalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescripcionFinalInclude<ExtArgs> | null
    /**
     * Filter, which DescripcionFinal to fetch.
     */
    where?: DescripcionFinalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DescripcionFinals to fetch.
     */
    orderBy?: DescripcionFinalOrderByWithRelationInput | DescripcionFinalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DescripcionFinals.
     */
    cursor?: DescripcionFinalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DescripcionFinals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DescripcionFinals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DescripcionFinals.
     */
    distinct?: DescripcionFinalScalarFieldEnum | DescripcionFinalScalarFieldEnum[]
  }

  /**
   * DescripcionFinal findFirstOrThrow
   */
  export type DescripcionFinalFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DescripcionFinal
     */
    select?: DescripcionFinalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DescripcionFinal
     */
    omit?: DescripcionFinalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescripcionFinalInclude<ExtArgs> | null
    /**
     * Filter, which DescripcionFinal to fetch.
     */
    where?: DescripcionFinalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DescripcionFinals to fetch.
     */
    orderBy?: DescripcionFinalOrderByWithRelationInput | DescripcionFinalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DescripcionFinals.
     */
    cursor?: DescripcionFinalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DescripcionFinals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DescripcionFinals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DescripcionFinals.
     */
    distinct?: DescripcionFinalScalarFieldEnum | DescripcionFinalScalarFieldEnum[]
  }

  /**
   * DescripcionFinal findMany
   */
  export type DescripcionFinalFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DescripcionFinal
     */
    select?: DescripcionFinalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DescripcionFinal
     */
    omit?: DescripcionFinalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescripcionFinalInclude<ExtArgs> | null
    /**
     * Filter, which DescripcionFinals to fetch.
     */
    where?: DescripcionFinalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DescripcionFinals to fetch.
     */
    orderBy?: DescripcionFinalOrderByWithRelationInput | DescripcionFinalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DescripcionFinals.
     */
    cursor?: DescripcionFinalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DescripcionFinals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DescripcionFinals.
     */
    skip?: number
    distinct?: DescripcionFinalScalarFieldEnum | DescripcionFinalScalarFieldEnum[]
  }

  /**
   * DescripcionFinal create
   */
  export type DescripcionFinalCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DescripcionFinal
     */
    select?: DescripcionFinalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DescripcionFinal
     */
    omit?: DescripcionFinalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescripcionFinalInclude<ExtArgs> | null
    /**
     * The data needed to create a DescripcionFinal.
     */
    data: XOR<DescripcionFinalCreateInput, DescripcionFinalUncheckedCreateInput>
  }

  /**
   * DescripcionFinal createMany
   */
  export type DescripcionFinalCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DescripcionFinals.
     */
    data: DescripcionFinalCreateManyInput | DescripcionFinalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * DescripcionFinal createManyAndReturn
   */
  export type DescripcionFinalCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DescripcionFinal
     */
    select?: DescripcionFinalSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DescripcionFinal
     */
    omit?: DescripcionFinalOmit<ExtArgs> | null
    /**
     * The data used to create many DescripcionFinals.
     */
    data: DescripcionFinalCreateManyInput | DescripcionFinalCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescripcionFinalIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * DescripcionFinal update
   */
  export type DescripcionFinalUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DescripcionFinal
     */
    select?: DescripcionFinalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DescripcionFinal
     */
    omit?: DescripcionFinalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescripcionFinalInclude<ExtArgs> | null
    /**
     * The data needed to update a DescripcionFinal.
     */
    data: XOR<DescripcionFinalUpdateInput, DescripcionFinalUncheckedUpdateInput>
    /**
     * Choose, which DescripcionFinal to update.
     */
    where: DescripcionFinalWhereUniqueInput
  }

  /**
   * DescripcionFinal updateMany
   */
  export type DescripcionFinalUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DescripcionFinals.
     */
    data: XOR<DescripcionFinalUpdateManyMutationInput, DescripcionFinalUncheckedUpdateManyInput>
    /**
     * Filter which DescripcionFinals to update
     */
    where?: DescripcionFinalWhereInput
    /**
     * Limit how many DescripcionFinals to update.
     */
    limit?: number
  }

  /**
   * DescripcionFinal updateManyAndReturn
   */
  export type DescripcionFinalUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DescripcionFinal
     */
    select?: DescripcionFinalSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the DescripcionFinal
     */
    omit?: DescripcionFinalOmit<ExtArgs> | null
    /**
     * The data used to update DescripcionFinals.
     */
    data: XOR<DescripcionFinalUpdateManyMutationInput, DescripcionFinalUncheckedUpdateManyInput>
    /**
     * Filter which DescripcionFinals to update
     */
    where?: DescripcionFinalWhereInput
    /**
     * Limit how many DescripcionFinals to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescripcionFinalIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * DescripcionFinal upsert
   */
  export type DescripcionFinalUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DescripcionFinal
     */
    select?: DescripcionFinalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DescripcionFinal
     */
    omit?: DescripcionFinalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescripcionFinalInclude<ExtArgs> | null
    /**
     * The filter to search for the DescripcionFinal to update in case it exists.
     */
    where: DescripcionFinalWhereUniqueInput
    /**
     * In case the DescripcionFinal found by the `where` argument doesn't exist, create a new DescripcionFinal with this data.
     */
    create: XOR<DescripcionFinalCreateInput, DescripcionFinalUncheckedCreateInput>
    /**
     * In case the DescripcionFinal was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DescripcionFinalUpdateInput, DescripcionFinalUncheckedUpdateInput>
  }

  /**
   * DescripcionFinal delete
   */
  export type DescripcionFinalDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DescripcionFinal
     */
    select?: DescripcionFinalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DescripcionFinal
     */
    omit?: DescripcionFinalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescripcionFinalInclude<ExtArgs> | null
    /**
     * Filter which DescripcionFinal to delete.
     */
    where: DescripcionFinalWhereUniqueInput
  }

  /**
   * DescripcionFinal deleteMany
   */
  export type DescripcionFinalDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DescripcionFinals to delete
     */
    where?: DescripcionFinalWhereInput
    /**
     * Limit how many DescripcionFinals to delete.
     */
    limit?: number
  }

  /**
   * DescripcionFinal without action
   */
  export type DescripcionFinalDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DescripcionFinal
     */
    select?: DescripcionFinalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the DescripcionFinal
     */
    omit?: DescripcionFinalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DescripcionFinalInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsuarioScalarFieldEnum: {
    id_usuario: 'id_usuario',
    nombre: 'nombre',
    correo: 'correo',
    cedula: 'cedula',
    contraseña_hash: 'contraseña_hash',
    rol: 'rol'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const EstudianteScalarFieldEnum: {
    id_estudiante: 'id_estudiante',
    nombre: 'nombre',
    cedula: 'cedula',
    correo: 'correo'
  };

  export type EstudianteScalarFieldEnum = (typeof EstudianteScalarFieldEnum)[keyof typeof EstudianteScalarFieldEnum]


  export const PracticaScalarFieldEnum: {
    id_practica: 'id_practica',
    nombre: 'nombre'
  };

  export type PracticaScalarFieldEnum = (typeof PracticaScalarFieldEnum)[keyof typeof PracticaScalarFieldEnum]


  export const EvaluacionScalarFieldEnum: {
    id_evaluacion: 'id_evaluacion',
    fecha_evaluacion: 'fecha_evaluacion',
    fecha_inicio_practica: 'fecha_inicio_practica',
    fecha_fin_practica: 'fecha_fin_practica',
    nota_final: 'nota_final',
    reporte_cualitativo: 'reporte_cualitativo',
    id_docente: 'id_docente',
    id_estudiante: 'id_estudiante',
    id_practica: 'id_practica'
  };

  export type EvaluacionScalarFieldEnum = (typeof EvaluacionScalarFieldEnum)[keyof typeof EvaluacionScalarFieldEnum]


  export const ComponenteEvaluacionScalarFieldEnum: {
    id_componente: 'id_componente',
    nombre_componente: 'nombre_componente',
    porcentaje: 'porcentaje',
    nota_componente: 'nota_componente',
    id_evaluacion: 'id_evaluacion'
  };

  export type ComponenteEvaluacionScalarFieldEnum = (typeof ComponenteEvaluacionScalarFieldEnum)[keyof typeof ComponenteEvaluacionScalarFieldEnum]


  export const ItemEvaluacionScalarFieldEnum: {
    id_item: 'id_item',
    enunciado: 'enunciado',
    nota: 'nota',
    id_componente: 'id_componente'
  };

  export type ItemEvaluacionScalarFieldEnum = (typeof ItemEvaluacionScalarFieldEnum)[keyof typeof ItemEvaluacionScalarFieldEnum]


  export const DescripcionFinalScalarFieldEnum: {
    id_evaluacion: 'id_evaluacion',
    nivel: 'nivel',
    cumplimiento: 'cumplimiento',
    descripcion: 'descripcion'
  };

  export type DescripcionFinalScalarFieldEnum = (typeof DescripcionFinalScalarFieldEnum)[keyof typeof DescripcionFinalScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Rol'
   */
  export type EnumRolFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Rol'>
    


  /**
   * Reference to a field of type 'Rol[]'
   */
  export type ListEnumRolFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Rol[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    
  /**
   * Deep Input Types
   */


  export type UsuarioWhereInput = {
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    id_usuario?: StringFilter<"Usuario"> | string
    nombre?: StringFilter<"Usuario"> | string
    correo?: StringFilter<"Usuario"> | string
    cedula?: StringFilter<"Usuario"> | string
    contraseña_hash?: StringFilter<"Usuario"> | string
    rol?: EnumRolFilter<"Usuario"> | $Enums.Rol
    evaluaciones?: EvaluacionListRelationFilter
  }

  export type UsuarioOrderByWithRelationInput = {
    id_usuario?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    cedula?: SortOrder
    contraseña_hash?: SortOrder
    rol?: SortOrder
    evaluaciones?: EvaluacionOrderByRelationAggregateInput
  }

  export type UsuarioWhereUniqueInput = Prisma.AtLeast<{
    id_usuario?: string
    correo?: string
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    nombre?: StringFilter<"Usuario"> | string
    cedula?: StringFilter<"Usuario"> | string
    contraseña_hash?: StringFilter<"Usuario"> | string
    rol?: EnumRolFilter<"Usuario"> | $Enums.Rol
    evaluaciones?: EvaluacionListRelationFilter
  }, "id_usuario" | "correo">

  export type UsuarioOrderByWithAggregationInput = {
    id_usuario?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    cedula?: SortOrder
    contraseña_hash?: SortOrder
    rol?: SortOrder
    _count?: UsuarioCountOrderByAggregateInput
    _max?: UsuarioMaxOrderByAggregateInput
    _min?: UsuarioMinOrderByAggregateInput
  }

  export type UsuarioScalarWhereWithAggregatesInput = {
    AND?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    OR?: UsuarioScalarWhereWithAggregatesInput[]
    NOT?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    id_usuario?: StringWithAggregatesFilter<"Usuario"> | string
    nombre?: StringWithAggregatesFilter<"Usuario"> | string
    correo?: StringWithAggregatesFilter<"Usuario"> | string
    cedula?: StringWithAggregatesFilter<"Usuario"> | string
    contraseña_hash?: StringWithAggregatesFilter<"Usuario"> | string
    rol?: EnumRolWithAggregatesFilter<"Usuario"> | $Enums.Rol
  }

  export type EstudianteWhereInput = {
    AND?: EstudianteWhereInput | EstudianteWhereInput[]
    OR?: EstudianteWhereInput[]
    NOT?: EstudianteWhereInput | EstudianteWhereInput[]
    id_estudiante?: StringFilter<"Estudiante"> | string
    nombre?: StringFilter<"Estudiante"> | string
    cedula?: StringFilter<"Estudiante"> | string
    correo?: StringFilter<"Estudiante"> | string
    evaluaciones?: EvaluacionListRelationFilter
  }

  export type EstudianteOrderByWithRelationInput = {
    id_estudiante?: SortOrder
    nombre?: SortOrder
    cedula?: SortOrder
    correo?: SortOrder
    evaluaciones?: EvaluacionOrderByRelationAggregateInput
  }

  export type EstudianteWhereUniqueInput = Prisma.AtLeast<{
    id_estudiante?: string
    AND?: EstudianteWhereInput | EstudianteWhereInput[]
    OR?: EstudianteWhereInput[]
    NOT?: EstudianteWhereInput | EstudianteWhereInput[]
    nombre?: StringFilter<"Estudiante"> | string
    cedula?: StringFilter<"Estudiante"> | string
    correo?: StringFilter<"Estudiante"> | string
    evaluaciones?: EvaluacionListRelationFilter
  }, "id_estudiante">

  export type EstudianteOrderByWithAggregationInput = {
    id_estudiante?: SortOrder
    nombre?: SortOrder
    cedula?: SortOrder
    correo?: SortOrder
    _count?: EstudianteCountOrderByAggregateInput
    _max?: EstudianteMaxOrderByAggregateInput
    _min?: EstudianteMinOrderByAggregateInput
  }

  export type EstudianteScalarWhereWithAggregatesInput = {
    AND?: EstudianteScalarWhereWithAggregatesInput | EstudianteScalarWhereWithAggregatesInput[]
    OR?: EstudianteScalarWhereWithAggregatesInput[]
    NOT?: EstudianteScalarWhereWithAggregatesInput | EstudianteScalarWhereWithAggregatesInput[]
    id_estudiante?: StringWithAggregatesFilter<"Estudiante"> | string
    nombre?: StringWithAggregatesFilter<"Estudiante"> | string
    cedula?: StringWithAggregatesFilter<"Estudiante"> | string
    correo?: StringWithAggregatesFilter<"Estudiante"> | string
  }

  export type PracticaWhereInput = {
    AND?: PracticaWhereInput | PracticaWhereInput[]
    OR?: PracticaWhereInput[]
    NOT?: PracticaWhereInput | PracticaWhereInput[]
    id_practica?: StringFilter<"Practica"> | string
    nombre?: StringFilter<"Practica"> | string
    evaluaciones?: EvaluacionListRelationFilter
  }

  export type PracticaOrderByWithRelationInput = {
    id_practica?: SortOrder
    nombre?: SortOrder
    evaluaciones?: EvaluacionOrderByRelationAggregateInput
  }

  export type PracticaWhereUniqueInput = Prisma.AtLeast<{
    id_practica?: string
    AND?: PracticaWhereInput | PracticaWhereInput[]
    OR?: PracticaWhereInput[]
    NOT?: PracticaWhereInput | PracticaWhereInput[]
    nombre?: StringFilter<"Practica"> | string
    evaluaciones?: EvaluacionListRelationFilter
  }, "id_practica">

  export type PracticaOrderByWithAggregationInput = {
    id_practica?: SortOrder
    nombre?: SortOrder
    _count?: PracticaCountOrderByAggregateInput
    _max?: PracticaMaxOrderByAggregateInput
    _min?: PracticaMinOrderByAggregateInput
  }

  export type PracticaScalarWhereWithAggregatesInput = {
    AND?: PracticaScalarWhereWithAggregatesInput | PracticaScalarWhereWithAggregatesInput[]
    OR?: PracticaScalarWhereWithAggregatesInput[]
    NOT?: PracticaScalarWhereWithAggregatesInput | PracticaScalarWhereWithAggregatesInput[]
    id_practica?: StringWithAggregatesFilter<"Practica"> | string
    nombre?: StringWithAggregatesFilter<"Practica"> | string
  }

  export type EvaluacionWhereInput = {
    AND?: EvaluacionWhereInput | EvaluacionWhereInput[]
    OR?: EvaluacionWhereInput[]
    NOT?: EvaluacionWhereInput | EvaluacionWhereInput[]
    id_evaluacion?: StringFilter<"Evaluacion"> | string
    fecha_evaluacion?: DateTimeFilter<"Evaluacion"> | Date | string
    fecha_inicio_practica?: DateTimeFilter<"Evaluacion"> | Date | string
    fecha_fin_practica?: DateTimeFilter<"Evaluacion"> | Date | string
    nota_final?: FloatNullableFilter<"Evaluacion"> | number | null
    reporte_cualitativo?: StringNullableFilter<"Evaluacion"> | string | null
    id_docente?: StringFilter<"Evaluacion"> | string
    id_estudiante?: StringFilter<"Evaluacion"> | string
    id_practica?: StringFilter<"Evaluacion"> | string
    docente?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    estudiante?: XOR<EstudianteScalarRelationFilter, EstudianteWhereInput>
    practica?: XOR<PracticaScalarRelationFilter, PracticaWhereInput>
    componentes?: ComponenteEvaluacionListRelationFilter
    descripcionFinal?: XOR<DescripcionFinalNullableScalarRelationFilter, DescripcionFinalWhereInput> | null
  }

  export type EvaluacionOrderByWithRelationInput = {
    id_evaluacion?: SortOrder
    fecha_evaluacion?: SortOrder
    fecha_inicio_practica?: SortOrder
    fecha_fin_practica?: SortOrder
    nota_final?: SortOrderInput | SortOrder
    reporte_cualitativo?: SortOrderInput | SortOrder
    id_docente?: SortOrder
    id_estudiante?: SortOrder
    id_practica?: SortOrder
    docente?: UsuarioOrderByWithRelationInput
    estudiante?: EstudianteOrderByWithRelationInput
    practica?: PracticaOrderByWithRelationInput
    componentes?: ComponenteEvaluacionOrderByRelationAggregateInput
    descripcionFinal?: DescripcionFinalOrderByWithRelationInput
  }

  export type EvaluacionWhereUniqueInput = Prisma.AtLeast<{
    id_evaluacion?: string
    AND?: EvaluacionWhereInput | EvaluacionWhereInput[]
    OR?: EvaluacionWhereInput[]
    NOT?: EvaluacionWhereInput | EvaluacionWhereInput[]
    fecha_evaluacion?: DateTimeFilter<"Evaluacion"> | Date | string
    fecha_inicio_practica?: DateTimeFilter<"Evaluacion"> | Date | string
    fecha_fin_practica?: DateTimeFilter<"Evaluacion"> | Date | string
    nota_final?: FloatNullableFilter<"Evaluacion"> | number | null
    reporte_cualitativo?: StringNullableFilter<"Evaluacion"> | string | null
    id_docente?: StringFilter<"Evaluacion"> | string
    id_estudiante?: StringFilter<"Evaluacion"> | string
    id_practica?: StringFilter<"Evaluacion"> | string
    docente?: XOR<UsuarioScalarRelationFilter, UsuarioWhereInput>
    estudiante?: XOR<EstudianteScalarRelationFilter, EstudianteWhereInput>
    practica?: XOR<PracticaScalarRelationFilter, PracticaWhereInput>
    componentes?: ComponenteEvaluacionListRelationFilter
    descripcionFinal?: XOR<DescripcionFinalNullableScalarRelationFilter, DescripcionFinalWhereInput> | null
  }, "id_evaluacion">

  export type EvaluacionOrderByWithAggregationInput = {
    id_evaluacion?: SortOrder
    fecha_evaluacion?: SortOrder
    fecha_inicio_practica?: SortOrder
    fecha_fin_practica?: SortOrder
    nota_final?: SortOrderInput | SortOrder
    reporte_cualitativo?: SortOrderInput | SortOrder
    id_docente?: SortOrder
    id_estudiante?: SortOrder
    id_practica?: SortOrder
    _count?: EvaluacionCountOrderByAggregateInput
    _avg?: EvaluacionAvgOrderByAggregateInput
    _max?: EvaluacionMaxOrderByAggregateInput
    _min?: EvaluacionMinOrderByAggregateInput
    _sum?: EvaluacionSumOrderByAggregateInput
  }

  export type EvaluacionScalarWhereWithAggregatesInput = {
    AND?: EvaluacionScalarWhereWithAggregatesInput | EvaluacionScalarWhereWithAggregatesInput[]
    OR?: EvaluacionScalarWhereWithAggregatesInput[]
    NOT?: EvaluacionScalarWhereWithAggregatesInput | EvaluacionScalarWhereWithAggregatesInput[]
    id_evaluacion?: StringWithAggregatesFilter<"Evaluacion"> | string
    fecha_evaluacion?: DateTimeWithAggregatesFilter<"Evaluacion"> | Date | string
    fecha_inicio_practica?: DateTimeWithAggregatesFilter<"Evaluacion"> | Date | string
    fecha_fin_practica?: DateTimeWithAggregatesFilter<"Evaluacion"> | Date | string
    nota_final?: FloatNullableWithAggregatesFilter<"Evaluacion"> | number | null
    reporte_cualitativo?: StringNullableWithAggregatesFilter<"Evaluacion"> | string | null
    id_docente?: StringWithAggregatesFilter<"Evaluacion"> | string
    id_estudiante?: StringWithAggregatesFilter<"Evaluacion"> | string
    id_practica?: StringWithAggregatesFilter<"Evaluacion"> | string
  }

  export type ComponenteEvaluacionWhereInput = {
    AND?: ComponenteEvaluacionWhereInput | ComponenteEvaluacionWhereInput[]
    OR?: ComponenteEvaluacionWhereInput[]
    NOT?: ComponenteEvaluacionWhereInput | ComponenteEvaluacionWhereInput[]
    id_componente?: StringFilter<"ComponenteEvaluacion"> | string
    nombre_componente?: StringFilter<"ComponenteEvaluacion"> | string
    porcentaje?: IntFilter<"ComponenteEvaluacion"> | number
    nota_componente?: FloatNullableFilter<"ComponenteEvaluacion"> | number | null
    id_evaluacion?: StringFilter<"ComponenteEvaluacion"> | string
    evaluacion?: XOR<EvaluacionScalarRelationFilter, EvaluacionWhereInput>
    items?: ItemEvaluacionListRelationFilter
  }

  export type ComponenteEvaluacionOrderByWithRelationInput = {
    id_componente?: SortOrder
    nombre_componente?: SortOrder
    porcentaje?: SortOrder
    nota_componente?: SortOrderInput | SortOrder
    id_evaluacion?: SortOrder
    evaluacion?: EvaluacionOrderByWithRelationInput
    items?: ItemEvaluacionOrderByRelationAggregateInput
  }

  export type ComponenteEvaluacionWhereUniqueInput = Prisma.AtLeast<{
    id_componente?: string
    AND?: ComponenteEvaluacionWhereInput | ComponenteEvaluacionWhereInput[]
    OR?: ComponenteEvaluacionWhereInput[]
    NOT?: ComponenteEvaluacionWhereInput | ComponenteEvaluacionWhereInput[]
    nombre_componente?: StringFilter<"ComponenteEvaluacion"> | string
    porcentaje?: IntFilter<"ComponenteEvaluacion"> | number
    nota_componente?: FloatNullableFilter<"ComponenteEvaluacion"> | number | null
    id_evaluacion?: StringFilter<"ComponenteEvaluacion"> | string
    evaluacion?: XOR<EvaluacionScalarRelationFilter, EvaluacionWhereInput>
    items?: ItemEvaluacionListRelationFilter
  }, "id_componente">

  export type ComponenteEvaluacionOrderByWithAggregationInput = {
    id_componente?: SortOrder
    nombre_componente?: SortOrder
    porcentaje?: SortOrder
    nota_componente?: SortOrderInput | SortOrder
    id_evaluacion?: SortOrder
    _count?: ComponenteEvaluacionCountOrderByAggregateInput
    _avg?: ComponenteEvaluacionAvgOrderByAggregateInput
    _max?: ComponenteEvaluacionMaxOrderByAggregateInput
    _min?: ComponenteEvaluacionMinOrderByAggregateInput
    _sum?: ComponenteEvaluacionSumOrderByAggregateInput
  }

  export type ComponenteEvaluacionScalarWhereWithAggregatesInput = {
    AND?: ComponenteEvaluacionScalarWhereWithAggregatesInput | ComponenteEvaluacionScalarWhereWithAggregatesInput[]
    OR?: ComponenteEvaluacionScalarWhereWithAggregatesInput[]
    NOT?: ComponenteEvaluacionScalarWhereWithAggregatesInput | ComponenteEvaluacionScalarWhereWithAggregatesInput[]
    id_componente?: StringWithAggregatesFilter<"ComponenteEvaluacion"> | string
    nombre_componente?: StringWithAggregatesFilter<"ComponenteEvaluacion"> | string
    porcentaje?: IntWithAggregatesFilter<"ComponenteEvaluacion"> | number
    nota_componente?: FloatNullableWithAggregatesFilter<"ComponenteEvaluacion"> | number | null
    id_evaluacion?: StringWithAggregatesFilter<"ComponenteEvaluacion"> | string
  }

  export type ItemEvaluacionWhereInput = {
    AND?: ItemEvaluacionWhereInput | ItemEvaluacionWhereInput[]
    OR?: ItemEvaluacionWhereInput[]
    NOT?: ItemEvaluacionWhereInput | ItemEvaluacionWhereInput[]
    id_item?: StringFilter<"ItemEvaluacion"> | string
    enunciado?: StringFilter<"ItemEvaluacion"> | string
    nota?: FloatNullableFilter<"ItemEvaluacion"> | number | null
    id_componente?: StringFilter<"ItemEvaluacion"> | string
    componente?: XOR<ComponenteEvaluacionScalarRelationFilter, ComponenteEvaluacionWhereInput>
  }

  export type ItemEvaluacionOrderByWithRelationInput = {
    id_item?: SortOrder
    enunciado?: SortOrder
    nota?: SortOrderInput | SortOrder
    id_componente?: SortOrder
    componente?: ComponenteEvaluacionOrderByWithRelationInput
  }

  export type ItemEvaluacionWhereUniqueInput = Prisma.AtLeast<{
    id_item?: string
    AND?: ItemEvaluacionWhereInput | ItemEvaluacionWhereInput[]
    OR?: ItemEvaluacionWhereInput[]
    NOT?: ItemEvaluacionWhereInput | ItemEvaluacionWhereInput[]
    enunciado?: StringFilter<"ItemEvaluacion"> | string
    nota?: FloatNullableFilter<"ItemEvaluacion"> | number | null
    id_componente?: StringFilter<"ItemEvaluacion"> | string
    componente?: XOR<ComponenteEvaluacionScalarRelationFilter, ComponenteEvaluacionWhereInput>
  }, "id_item">

  export type ItemEvaluacionOrderByWithAggregationInput = {
    id_item?: SortOrder
    enunciado?: SortOrder
    nota?: SortOrderInput | SortOrder
    id_componente?: SortOrder
    _count?: ItemEvaluacionCountOrderByAggregateInput
    _avg?: ItemEvaluacionAvgOrderByAggregateInput
    _max?: ItemEvaluacionMaxOrderByAggregateInput
    _min?: ItemEvaluacionMinOrderByAggregateInput
    _sum?: ItemEvaluacionSumOrderByAggregateInput
  }

  export type ItemEvaluacionScalarWhereWithAggregatesInput = {
    AND?: ItemEvaluacionScalarWhereWithAggregatesInput | ItemEvaluacionScalarWhereWithAggregatesInput[]
    OR?: ItemEvaluacionScalarWhereWithAggregatesInput[]
    NOT?: ItemEvaluacionScalarWhereWithAggregatesInput | ItemEvaluacionScalarWhereWithAggregatesInput[]
    id_item?: StringWithAggregatesFilter<"ItemEvaluacion"> | string
    enunciado?: StringWithAggregatesFilter<"ItemEvaluacion"> | string
    nota?: FloatNullableWithAggregatesFilter<"ItemEvaluacion"> | number | null
    id_componente?: StringWithAggregatesFilter<"ItemEvaluacion"> | string
  }

  export type DescripcionFinalWhereInput = {
    AND?: DescripcionFinalWhereInput | DescripcionFinalWhereInput[]
    OR?: DescripcionFinalWhereInput[]
    NOT?: DescripcionFinalWhereInput | DescripcionFinalWhereInput[]
    id_evaluacion?: StringFilter<"DescripcionFinal"> | string
    nivel?: StringFilter<"DescripcionFinal"> | string
    cumplimiento?: IntFilter<"DescripcionFinal"> | number
    descripcion?: StringFilter<"DescripcionFinal"> | string
    evaluacion?: XOR<EvaluacionScalarRelationFilter, EvaluacionWhereInput>
  }

  export type DescripcionFinalOrderByWithRelationInput = {
    id_evaluacion?: SortOrder
    nivel?: SortOrder
    cumplimiento?: SortOrder
    descripcion?: SortOrder
    evaluacion?: EvaluacionOrderByWithRelationInput
  }

  export type DescripcionFinalWhereUniqueInput = Prisma.AtLeast<{
    id_evaluacion?: string
    AND?: DescripcionFinalWhereInput | DescripcionFinalWhereInput[]
    OR?: DescripcionFinalWhereInput[]
    NOT?: DescripcionFinalWhereInput | DescripcionFinalWhereInput[]
    nivel?: StringFilter<"DescripcionFinal"> | string
    cumplimiento?: IntFilter<"DescripcionFinal"> | number
    descripcion?: StringFilter<"DescripcionFinal"> | string
    evaluacion?: XOR<EvaluacionScalarRelationFilter, EvaluacionWhereInput>
  }, "id_evaluacion">

  export type DescripcionFinalOrderByWithAggregationInput = {
    id_evaluacion?: SortOrder
    nivel?: SortOrder
    cumplimiento?: SortOrder
    descripcion?: SortOrder
    _count?: DescripcionFinalCountOrderByAggregateInput
    _avg?: DescripcionFinalAvgOrderByAggregateInput
    _max?: DescripcionFinalMaxOrderByAggregateInput
    _min?: DescripcionFinalMinOrderByAggregateInput
    _sum?: DescripcionFinalSumOrderByAggregateInput
  }

  export type DescripcionFinalScalarWhereWithAggregatesInput = {
    AND?: DescripcionFinalScalarWhereWithAggregatesInput | DescripcionFinalScalarWhereWithAggregatesInput[]
    OR?: DescripcionFinalScalarWhereWithAggregatesInput[]
    NOT?: DescripcionFinalScalarWhereWithAggregatesInput | DescripcionFinalScalarWhereWithAggregatesInput[]
    id_evaluacion?: StringWithAggregatesFilter<"DescripcionFinal"> | string
    nivel?: StringWithAggregatesFilter<"DescripcionFinal"> | string
    cumplimiento?: IntWithAggregatesFilter<"DescripcionFinal"> | number
    descripcion?: StringWithAggregatesFilter<"DescripcionFinal"> | string
  }

  export type UsuarioCreateInput = {
    id_usuario?: string
    nombre: string
    correo: string
    cedula: string
    contraseña_hash: string
    rol: $Enums.Rol
    evaluaciones?: EvaluacionCreateNestedManyWithoutDocenteInput
  }

  export type UsuarioUncheckedCreateInput = {
    id_usuario?: string
    nombre: string
    correo: string
    cedula: string
    contraseña_hash: string
    rol: $Enums.Rol
    evaluaciones?: EvaluacionUncheckedCreateNestedManyWithoutDocenteInput
  }

  export type UsuarioUpdateInput = {
    id_usuario?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    contraseña_hash?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    evaluaciones?: EvaluacionUpdateManyWithoutDocenteNestedInput
  }

  export type UsuarioUncheckedUpdateInput = {
    id_usuario?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    contraseña_hash?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
    evaluaciones?: EvaluacionUncheckedUpdateManyWithoutDocenteNestedInput
  }

  export type UsuarioCreateManyInput = {
    id_usuario?: string
    nombre: string
    correo: string
    cedula: string
    contraseña_hash: string
    rol: $Enums.Rol
  }

  export type UsuarioUpdateManyMutationInput = {
    id_usuario?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    contraseña_hash?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
  }

  export type UsuarioUncheckedUpdateManyInput = {
    id_usuario?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    contraseña_hash?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
  }

  export type EstudianteCreateInput = {
    id_estudiante?: string
    nombre: string
    cedula: string
    correo: string
    evaluaciones?: EvaluacionCreateNestedManyWithoutEstudianteInput
  }

  export type EstudianteUncheckedCreateInput = {
    id_estudiante?: string
    nombre: string
    cedula: string
    correo: string
    evaluaciones?: EvaluacionUncheckedCreateNestedManyWithoutEstudianteInput
  }

  export type EstudianteUpdateInput = {
    id_estudiante?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    evaluaciones?: EvaluacionUpdateManyWithoutEstudianteNestedInput
  }

  export type EstudianteUncheckedUpdateInput = {
    id_estudiante?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    evaluaciones?: EvaluacionUncheckedUpdateManyWithoutEstudianteNestedInput
  }

  export type EstudianteCreateManyInput = {
    id_estudiante?: string
    nombre: string
    cedula: string
    correo: string
  }

  export type EstudianteUpdateManyMutationInput = {
    id_estudiante?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
  }

  export type EstudianteUncheckedUpdateManyInput = {
    id_estudiante?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
  }

  export type PracticaCreateInput = {
    id_practica?: string
    nombre: string
    evaluaciones?: EvaluacionCreateNestedManyWithoutPracticaInput
  }

  export type PracticaUncheckedCreateInput = {
    id_practica?: string
    nombre: string
    evaluaciones?: EvaluacionUncheckedCreateNestedManyWithoutPracticaInput
  }

  export type PracticaUpdateInput = {
    id_practica?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    evaluaciones?: EvaluacionUpdateManyWithoutPracticaNestedInput
  }

  export type PracticaUncheckedUpdateInput = {
    id_practica?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    evaluaciones?: EvaluacionUncheckedUpdateManyWithoutPracticaNestedInput
  }

  export type PracticaCreateManyInput = {
    id_practica?: string
    nombre: string
  }

  export type PracticaUpdateManyMutationInput = {
    id_practica?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type PracticaUncheckedUpdateManyInput = {
    id_practica?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type EvaluacionCreateInput = {
    id_evaluacion?: string
    fecha_evaluacion: Date | string
    fecha_inicio_practica: Date | string
    fecha_fin_practica: Date | string
    nota_final?: number | null
    reporte_cualitativo?: string | null
    docente: UsuarioCreateNestedOneWithoutEvaluacionesInput
    estudiante: EstudianteCreateNestedOneWithoutEvaluacionesInput
    practica: PracticaCreateNestedOneWithoutEvaluacionesInput
    componentes?: ComponenteEvaluacionCreateNestedManyWithoutEvaluacionInput
    descripcionFinal?: DescripcionFinalCreateNestedOneWithoutEvaluacionInput
  }

  export type EvaluacionUncheckedCreateInput = {
    id_evaluacion?: string
    fecha_evaluacion: Date | string
    fecha_inicio_practica: Date | string
    fecha_fin_practica: Date | string
    nota_final?: number | null
    reporte_cualitativo?: string | null
    id_docente: string
    id_estudiante: string
    id_practica: string
    componentes?: ComponenteEvaluacionUncheckedCreateNestedManyWithoutEvaluacionInput
    descripcionFinal?: DescripcionFinalUncheckedCreateNestedOneWithoutEvaluacionInput
  }

  export type EvaluacionUpdateInput = {
    id_evaluacion?: StringFieldUpdateOperationsInput | string
    fecha_evaluacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    nota_final?: NullableFloatFieldUpdateOperationsInput | number | null
    reporte_cualitativo?: NullableStringFieldUpdateOperationsInput | string | null
    docente?: UsuarioUpdateOneRequiredWithoutEvaluacionesNestedInput
    estudiante?: EstudianteUpdateOneRequiredWithoutEvaluacionesNestedInput
    practica?: PracticaUpdateOneRequiredWithoutEvaluacionesNestedInput
    componentes?: ComponenteEvaluacionUpdateManyWithoutEvaluacionNestedInput
    descripcionFinal?: DescripcionFinalUpdateOneWithoutEvaluacionNestedInput
  }

  export type EvaluacionUncheckedUpdateInput = {
    id_evaluacion?: StringFieldUpdateOperationsInput | string
    fecha_evaluacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    nota_final?: NullableFloatFieldUpdateOperationsInput | number | null
    reporte_cualitativo?: NullableStringFieldUpdateOperationsInput | string | null
    id_docente?: StringFieldUpdateOperationsInput | string
    id_estudiante?: StringFieldUpdateOperationsInput | string
    id_practica?: StringFieldUpdateOperationsInput | string
    componentes?: ComponenteEvaluacionUncheckedUpdateManyWithoutEvaluacionNestedInput
    descripcionFinal?: DescripcionFinalUncheckedUpdateOneWithoutEvaluacionNestedInput
  }

  export type EvaluacionCreateManyInput = {
    id_evaluacion?: string
    fecha_evaluacion: Date | string
    fecha_inicio_practica: Date | string
    fecha_fin_practica: Date | string
    nota_final?: number | null
    reporte_cualitativo?: string | null
    id_docente: string
    id_estudiante: string
    id_practica: string
  }

  export type EvaluacionUpdateManyMutationInput = {
    id_evaluacion?: StringFieldUpdateOperationsInput | string
    fecha_evaluacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    nota_final?: NullableFloatFieldUpdateOperationsInput | number | null
    reporte_cualitativo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EvaluacionUncheckedUpdateManyInput = {
    id_evaluacion?: StringFieldUpdateOperationsInput | string
    fecha_evaluacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    nota_final?: NullableFloatFieldUpdateOperationsInput | number | null
    reporte_cualitativo?: NullableStringFieldUpdateOperationsInput | string | null
    id_docente?: StringFieldUpdateOperationsInput | string
    id_estudiante?: StringFieldUpdateOperationsInput | string
    id_practica?: StringFieldUpdateOperationsInput | string
  }

  export type ComponenteEvaluacionCreateInput = {
    id_componente?: string
    nombre_componente: string
    porcentaje: number
    nota_componente?: number | null
    evaluacion: EvaluacionCreateNestedOneWithoutComponentesInput
    items?: ItemEvaluacionCreateNestedManyWithoutComponenteInput
  }

  export type ComponenteEvaluacionUncheckedCreateInput = {
    id_componente?: string
    nombre_componente: string
    porcentaje: number
    nota_componente?: number | null
    id_evaluacion: string
    items?: ItemEvaluacionUncheckedCreateNestedManyWithoutComponenteInput
  }

  export type ComponenteEvaluacionUpdateInput = {
    id_componente?: StringFieldUpdateOperationsInput | string
    nombre_componente?: StringFieldUpdateOperationsInput | string
    porcentaje?: IntFieldUpdateOperationsInput | number
    nota_componente?: NullableFloatFieldUpdateOperationsInput | number | null
    evaluacion?: EvaluacionUpdateOneRequiredWithoutComponentesNestedInput
    items?: ItemEvaluacionUpdateManyWithoutComponenteNestedInput
  }

  export type ComponenteEvaluacionUncheckedUpdateInput = {
    id_componente?: StringFieldUpdateOperationsInput | string
    nombre_componente?: StringFieldUpdateOperationsInput | string
    porcentaje?: IntFieldUpdateOperationsInput | number
    nota_componente?: NullableFloatFieldUpdateOperationsInput | number | null
    id_evaluacion?: StringFieldUpdateOperationsInput | string
    items?: ItemEvaluacionUncheckedUpdateManyWithoutComponenteNestedInput
  }

  export type ComponenteEvaluacionCreateManyInput = {
    id_componente?: string
    nombre_componente: string
    porcentaje: number
    nota_componente?: number | null
    id_evaluacion: string
  }

  export type ComponenteEvaluacionUpdateManyMutationInput = {
    id_componente?: StringFieldUpdateOperationsInput | string
    nombre_componente?: StringFieldUpdateOperationsInput | string
    porcentaje?: IntFieldUpdateOperationsInput | number
    nota_componente?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type ComponenteEvaluacionUncheckedUpdateManyInput = {
    id_componente?: StringFieldUpdateOperationsInput | string
    nombre_componente?: StringFieldUpdateOperationsInput | string
    porcentaje?: IntFieldUpdateOperationsInput | number
    nota_componente?: NullableFloatFieldUpdateOperationsInput | number | null
    id_evaluacion?: StringFieldUpdateOperationsInput | string
  }

  export type ItemEvaluacionCreateInput = {
    id_item?: string
    enunciado: string
    nota?: number | null
    componente: ComponenteEvaluacionCreateNestedOneWithoutItemsInput
  }

  export type ItemEvaluacionUncheckedCreateInput = {
    id_item?: string
    enunciado: string
    nota?: number | null
    id_componente: string
  }

  export type ItemEvaluacionUpdateInput = {
    id_item?: StringFieldUpdateOperationsInput | string
    enunciado?: StringFieldUpdateOperationsInput | string
    nota?: NullableFloatFieldUpdateOperationsInput | number | null
    componente?: ComponenteEvaluacionUpdateOneRequiredWithoutItemsNestedInput
  }

  export type ItemEvaluacionUncheckedUpdateInput = {
    id_item?: StringFieldUpdateOperationsInput | string
    enunciado?: StringFieldUpdateOperationsInput | string
    nota?: NullableFloatFieldUpdateOperationsInput | number | null
    id_componente?: StringFieldUpdateOperationsInput | string
  }

  export type ItemEvaluacionCreateManyInput = {
    id_item?: string
    enunciado: string
    nota?: number | null
    id_componente: string
  }

  export type ItemEvaluacionUpdateManyMutationInput = {
    id_item?: StringFieldUpdateOperationsInput | string
    enunciado?: StringFieldUpdateOperationsInput | string
    nota?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type ItemEvaluacionUncheckedUpdateManyInput = {
    id_item?: StringFieldUpdateOperationsInput | string
    enunciado?: StringFieldUpdateOperationsInput | string
    nota?: NullableFloatFieldUpdateOperationsInput | number | null
    id_componente?: StringFieldUpdateOperationsInput | string
  }

  export type DescripcionFinalCreateInput = {
    nivel: string
    cumplimiento: number
    descripcion: string
    evaluacion: EvaluacionCreateNestedOneWithoutDescripcionFinalInput
  }

  export type DescripcionFinalUncheckedCreateInput = {
    id_evaluacion: string
    nivel: string
    cumplimiento: number
    descripcion: string
  }

  export type DescripcionFinalUpdateInput = {
    nivel?: StringFieldUpdateOperationsInput | string
    cumplimiento?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
    evaluacion?: EvaluacionUpdateOneRequiredWithoutDescripcionFinalNestedInput
  }

  export type DescripcionFinalUncheckedUpdateInput = {
    id_evaluacion?: StringFieldUpdateOperationsInput | string
    nivel?: StringFieldUpdateOperationsInput | string
    cumplimiento?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type DescripcionFinalCreateManyInput = {
    id_evaluacion: string
    nivel: string
    cumplimiento: number
    descripcion: string
  }

  export type DescripcionFinalUpdateManyMutationInput = {
    nivel?: StringFieldUpdateOperationsInput | string
    cumplimiento?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type DescripcionFinalUncheckedUpdateManyInput = {
    id_evaluacion?: StringFieldUpdateOperationsInput | string
    nivel?: StringFieldUpdateOperationsInput | string
    cumplimiento?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type EnumRolFilter<$PrismaModel = never> = {
    equals?: $Enums.Rol | EnumRolFieldRefInput<$PrismaModel>
    in?: $Enums.Rol[] | ListEnumRolFieldRefInput<$PrismaModel>
    notIn?: $Enums.Rol[] | ListEnumRolFieldRefInput<$PrismaModel>
    not?: NestedEnumRolFilter<$PrismaModel> | $Enums.Rol
  }

  export type EvaluacionListRelationFilter = {
    every?: EvaluacionWhereInput
    some?: EvaluacionWhereInput
    none?: EvaluacionWhereInput
  }

  export type EvaluacionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioCountOrderByAggregateInput = {
    id_usuario?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    cedula?: SortOrder
    contraseña_hash?: SortOrder
    rol?: SortOrder
  }

  export type UsuarioMaxOrderByAggregateInput = {
    id_usuario?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    cedula?: SortOrder
    contraseña_hash?: SortOrder
    rol?: SortOrder
  }

  export type UsuarioMinOrderByAggregateInput = {
    id_usuario?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    cedula?: SortOrder
    contraseña_hash?: SortOrder
    rol?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type EnumRolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Rol | EnumRolFieldRefInput<$PrismaModel>
    in?: $Enums.Rol[] | ListEnumRolFieldRefInput<$PrismaModel>
    notIn?: $Enums.Rol[] | ListEnumRolFieldRefInput<$PrismaModel>
    not?: NestedEnumRolWithAggregatesFilter<$PrismaModel> | $Enums.Rol
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRolFilter<$PrismaModel>
    _max?: NestedEnumRolFilter<$PrismaModel>
  }

  export type EstudianteCountOrderByAggregateInput = {
    id_estudiante?: SortOrder
    nombre?: SortOrder
    cedula?: SortOrder
    correo?: SortOrder
  }

  export type EstudianteMaxOrderByAggregateInput = {
    id_estudiante?: SortOrder
    nombre?: SortOrder
    cedula?: SortOrder
    correo?: SortOrder
  }

  export type EstudianteMinOrderByAggregateInput = {
    id_estudiante?: SortOrder
    nombre?: SortOrder
    cedula?: SortOrder
    correo?: SortOrder
  }

  export type PracticaCountOrderByAggregateInput = {
    id_practica?: SortOrder
    nombre?: SortOrder
  }

  export type PracticaMaxOrderByAggregateInput = {
    id_practica?: SortOrder
    nombre?: SortOrder
  }

  export type PracticaMinOrderByAggregateInput = {
    id_practica?: SortOrder
    nombre?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type UsuarioScalarRelationFilter = {
    is?: UsuarioWhereInput
    isNot?: UsuarioWhereInput
  }

  export type EstudianteScalarRelationFilter = {
    is?: EstudianteWhereInput
    isNot?: EstudianteWhereInput
  }

  export type PracticaScalarRelationFilter = {
    is?: PracticaWhereInput
    isNot?: PracticaWhereInput
  }

  export type ComponenteEvaluacionListRelationFilter = {
    every?: ComponenteEvaluacionWhereInput
    some?: ComponenteEvaluacionWhereInput
    none?: ComponenteEvaluacionWhereInput
  }

  export type DescripcionFinalNullableScalarRelationFilter = {
    is?: DescripcionFinalWhereInput | null
    isNot?: DescripcionFinalWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type ComponenteEvaluacionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EvaluacionCountOrderByAggregateInput = {
    id_evaluacion?: SortOrder
    fecha_evaluacion?: SortOrder
    fecha_inicio_practica?: SortOrder
    fecha_fin_practica?: SortOrder
    nota_final?: SortOrder
    reporte_cualitativo?: SortOrder
    id_docente?: SortOrder
    id_estudiante?: SortOrder
    id_practica?: SortOrder
  }

  export type EvaluacionAvgOrderByAggregateInput = {
    nota_final?: SortOrder
  }

  export type EvaluacionMaxOrderByAggregateInput = {
    id_evaluacion?: SortOrder
    fecha_evaluacion?: SortOrder
    fecha_inicio_practica?: SortOrder
    fecha_fin_practica?: SortOrder
    nota_final?: SortOrder
    reporte_cualitativo?: SortOrder
    id_docente?: SortOrder
    id_estudiante?: SortOrder
    id_practica?: SortOrder
  }

  export type EvaluacionMinOrderByAggregateInput = {
    id_evaluacion?: SortOrder
    fecha_evaluacion?: SortOrder
    fecha_inicio_practica?: SortOrder
    fecha_fin_practica?: SortOrder
    nota_final?: SortOrder
    reporte_cualitativo?: SortOrder
    id_docente?: SortOrder
    id_estudiante?: SortOrder
    id_practica?: SortOrder
  }

  export type EvaluacionSumOrderByAggregateInput = {
    nota_final?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type EvaluacionScalarRelationFilter = {
    is?: EvaluacionWhereInput
    isNot?: EvaluacionWhereInput
  }

  export type ItemEvaluacionListRelationFilter = {
    every?: ItemEvaluacionWhereInput
    some?: ItemEvaluacionWhereInput
    none?: ItemEvaluacionWhereInput
  }

  export type ItemEvaluacionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ComponenteEvaluacionCountOrderByAggregateInput = {
    id_componente?: SortOrder
    nombre_componente?: SortOrder
    porcentaje?: SortOrder
    nota_componente?: SortOrder
    id_evaluacion?: SortOrder
  }

  export type ComponenteEvaluacionAvgOrderByAggregateInput = {
    porcentaje?: SortOrder
    nota_componente?: SortOrder
  }

  export type ComponenteEvaluacionMaxOrderByAggregateInput = {
    id_componente?: SortOrder
    nombre_componente?: SortOrder
    porcentaje?: SortOrder
    nota_componente?: SortOrder
    id_evaluacion?: SortOrder
  }

  export type ComponenteEvaluacionMinOrderByAggregateInput = {
    id_componente?: SortOrder
    nombre_componente?: SortOrder
    porcentaje?: SortOrder
    nota_componente?: SortOrder
    id_evaluacion?: SortOrder
  }

  export type ComponenteEvaluacionSumOrderByAggregateInput = {
    porcentaje?: SortOrder
    nota_componente?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type ComponenteEvaluacionScalarRelationFilter = {
    is?: ComponenteEvaluacionWhereInput
    isNot?: ComponenteEvaluacionWhereInput
  }

  export type ItemEvaluacionCountOrderByAggregateInput = {
    id_item?: SortOrder
    enunciado?: SortOrder
    nota?: SortOrder
    id_componente?: SortOrder
  }

  export type ItemEvaluacionAvgOrderByAggregateInput = {
    nota?: SortOrder
  }

  export type ItemEvaluacionMaxOrderByAggregateInput = {
    id_item?: SortOrder
    enunciado?: SortOrder
    nota?: SortOrder
    id_componente?: SortOrder
  }

  export type ItemEvaluacionMinOrderByAggregateInput = {
    id_item?: SortOrder
    enunciado?: SortOrder
    nota?: SortOrder
    id_componente?: SortOrder
  }

  export type ItemEvaluacionSumOrderByAggregateInput = {
    nota?: SortOrder
  }

  export type DescripcionFinalCountOrderByAggregateInput = {
    id_evaluacion?: SortOrder
    nivel?: SortOrder
    cumplimiento?: SortOrder
    descripcion?: SortOrder
  }

  export type DescripcionFinalAvgOrderByAggregateInput = {
    cumplimiento?: SortOrder
  }

  export type DescripcionFinalMaxOrderByAggregateInput = {
    id_evaluacion?: SortOrder
    nivel?: SortOrder
    cumplimiento?: SortOrder
    descripcion?: SortOrder
  }

  export type DescripcionFinalMinOrderByAggregateInput = {
    id_evaluacion?: SortOrder
    nivel?: SortOrder
    cumplimiento?: SortOrder
    descripcion?: SortOrder
  }

  export type DescripcionFinalSumOrderByAggregateInput = {
    cumplimiento?: SortOrder
  }

  export type EvaluacionCreateNestedManyWithoutDocenteInput = {
    create?: XOR<EvaluacionCreateWithoutDocenteInput, EvaluacionUncheckedCreateWithoutDocenteInput> | EvaluacionCreateWithoutDocenteInput[] | EvaluacionUncheckedCreateWithoutDocenteInput[]
    connectOrCreate?: EvaluacionCreateOrConnectWithoutDocenteInput | EvaluacionCreateOrConnectWithoutDocenteInput[]
    createMany?: EvaluacionCreateManyDocenteInputEnvelope
    connect?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
  }

  export type EvaluacionUncheckedCreateNestedManyWithoutDocenteInput = {
    create?: XOR<EvaluacionCreateWithoutDocenteInput, EvaluacionUncheckedCreateWithoutDocenteInput> | EvaluacionCreateWithoutDocenteInput[] | EvaluacionUncheckedCreateWithoutDocenteInput[]
    connectOrCreate?: EvaluacionCreateOrConnectWithoutDocenteInput | EvaluacionCreateOrConnectWithoutDocenteInput[]
    createMany?: EvaluacionCreateManyDocenteInputEnvelope
    connect?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type EnumRolFieldUpdateOperationsInput = {
    set?: $Enums.Rol
  }

  export type EvaluacionUpdateManyWithoutDocenteNestedInput = {
    create?: XOR<EvaluacionCreateWithoutDocenteInput, EvaluacionUncheckedCreateWithoutDocenteInput> | EvaluacionCreateWithoutDocenteInput[] | EvaluacionUncheckedCreateWithoutDocenteInput[]
    connectOrCreate?: EvaluacionCreateOrConnectWithoutDocenteInput | EvaluacionCreateOrConnectWithoutDocenteInput[]
    upsert?: EvaluacionUpsertWithWhereUniqueWithoutDocenteInput | EvaluacionUpsertWithWhereUniqueWithoutDocenteInput[]
    createMany?: EvaluacionCreateManyDocenteInputEnvelope
    set?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    disconnect?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    delete?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    connect?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    update?: EvaluacionUpdateWithWhereUniqueWithoutDocenteInput | EvaluacionUpdateWithWhereUniqueWithoutDocenteInput[]
    updateMany?: EvaluacionUpdateManyWithWhereWithoutDocenteInput | EvaluacionUpdateManyWithWhereWithoutDocenteInput[]
    deleteMany?: EvaluacionScalarWhereInput | EvaluacionScalarWhereInput[]
  }

  export type EvaluacionUncheckedUpdateManyWithoutDocenteNestedInput = {
    create?: XOR<EvaluacionCreateWithoutDocenteInput, EvaluacionUncheckedCreateWithoutDocenteInput> | EvaluacionCreateWithoutDocenteInput[] | EvaluacionUncheckedCreateWithoutDocenteInput[]
    connectOrCreate?: EvaluacionCreateOrConnectWithoutDocenteInput | EvaluacionCreateOrConnectWithoutDocenteInput[]
    upsert?: EvaluacionUpsertWithWhereUniqueWithoutDocenteInput | EvaluacionUpsertWithWhereUniqueWithoutDocenteInput[]
    createMany?: EvaluacionCreateManyDocenteInputEnvelope
    set?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    disconnect?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    delete?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    connect?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    update?: EvaluacionUpdateWithWhereUniqueWithoutDocenteInput | EvaluacionUpdateWithWhereUniqueWithoutDocenteInput[]
    updateMany?: EvaluacionUpdateManyWithWhereWithoutDocenteInput | EvaluacionUpdateManyWithWhereWithoutDocenteInput[]
    deleteMany?: EvaluacionScalarWhereInput | EvaluacionScalarWhereInput[]
  }

  export type EvaluacionCreateNestedManyWithoutEstudianteInput = {
    create?: XOR<EvaluacionCreateWithoutEstudianteInput, EvaluacionUncheckedCreateWithoutEstudianteInput> | EvaluacionCreateWithoutEstudianteInput[] | EvaluacionUncheckedCreateWithoutEstudianteInput[]
    connectOrCreate?: EvaluacionCreateOrConnectWithoutEstudianteInput | EvaluacionCreateOrConnectWithoutEstudianteInput[]
    createMany?: EvaluacionCreateManyEstudianteInputEnvelope
    connect?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
  }

  export type EvaluacionUncheckedCreateNestedManyWithoutEstudianteInput = {
    create?: XOR<EvaluacionCreateWithoutEstudianteInput, EvaluacionUncheckedCreateWithoutEstudianteInput> | EvaluacionCreateWithoutEstudianteInput[] | EvaluacionUncheckedCreateWithoutEstudianteInput[]
    connectOrCreate?: EvaluacionCreateOrConnectWithoutEstudianteInput | EvaluacionCreateOrConnectWithoutEstudianteInput[]
    createMany?: EvaluacionCreateManyEstudianteInputEnvelope
    connect?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
  }

  export type EvaluacionUpdateManyWithoutEstudianteNestedInput = {
    create?: XOR<EvaluacionCreateWithoutEstudianteInput, EvaluacionUncheckedCreateWithoutEstudianteInput> | EvaluacionCreateWithoutEstudianteInput[] | EvaluacionUncheckedCreateWithoutEstudianteInput[]
    connectOrCreate?: EvaluacionCreateOrConnectWithoutEstudianteInput | EvaluacionCreateOrConnectWithoutEstudianteInput[]
    upsert?: EvaluacionUpsertWithWhereUniqueWithoutEstudianteInput | EvaluacionUpsertWithWhereUniqueWithoutEstudianteInput[]
    createMany?: EvaluacionCreateManyEstudianteInputEnvelope
    set?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    disconnect?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    delete?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    connect?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    update?: EvaluacionUpdateWithWhereUniqueWithoutEstudianteInput | EvaluacionUpdateWithWhereUniqueWithoutEstudianteInput[]
    updateMany?: EvaluacionUpdateManyWithWhereWithoutEstudianteInput | EvaluacionUpdateManyWithWhereWithoutEstudianteInput[]
    deleteMany?: EvaluacionScalarWhereInput | EvaluacionScalarWhereInput[]
  }

  export type EvaluacionUncheckedUpdateManyWithoutEstudianteNestedInput = {
    create?: XOR<EvaluacionCreateWithoutEstudianteInput, EvaluacionUncheckedCreateWithoutEstudianteInput> | EvaluacionCreateWithoutEstudianteInput[] | EvaluacionUncheckedCreateWithoutEstudianteInput[]
    connectOrCreate?: EvaluacionCreateOrConnectWithoutEstudianteInput | EvaluacionCreateOrConnectWithoutEstudianteInput[]
    upsert?: EvaluacionUpsertWithWhereUniqueWithoutEstudianteInput | EvaluacionUpsertWithWhereUniqueWithoutEstudianteInput[]
    createMany?: EvaluacionCreateManyEstudianteInputEnvelope
    set?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    disconnect?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    delete?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    connect?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    update?: EvaluacionUpdateWithWhereUniqueWithoutEstudianteInput | EvaluacionUpdateWithWhereUniqueWithoutEstudianteInput[]
    updateMany?: EvaluacionUpdateManyWithWhereWithoutEstudianteInput | EvaluacionUpdateManyWithWhereWithoutEstudianteInput[]
    deleteMany?: EvaluacionScalarWhereInput | EvaluacionScalarWhereInput[]
  }

  export type EvaluacionCreateNestedManyWithoutPracticaInput = {
    create?: XOR<EvaluacionCreateWithoutPracticaInput, EvaluacionUncheckedCreateWithoutPracticaInput> | EvaluacionCreateWithoutPracticaInput[] | EvaluacionUncheckedCreateWithoutPracticaInput[]
    connectOrCreate?: EvaluacionCreateOrConnectWithoutPracticaInput | EvaluacionCreateOrConnectWithoutPracticaInput[]
    createMany?: EvaluacionCreateManyPracticaInputEnvelope
    connect?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
  }

  export type EvaluacionUncheckedCreateNestedManyWithoutPracticaInput = {
    create?: XOR<EvaluacionCreateWithoutPracticaInput, EvaluacionUncheckedCreateWithoutPracticaInput> | EvaluacionCreateWithoutPracticaInput[] | EvaluacionUncheckedCreateWithoutPracticaInput[]
    connectOrCreate?: EvaluacionCreateOrConnectWithoutPracticaInput | EvaluacionCreateOrConnectWithoutPracticaInput[]
    createMany?: EvaluacionCreateManyPracticaInputEnvelope
    connect?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
  }

  export type EvaluacionUpdateManyWithoutPracticaNestedInput = {
    create?: XOR<EvaluacionCreateWithoutPracticaInput, EvaluacionUncheckedCreateWithoutPracticaInput> | EvaluacionCreateWithoutPracticaInput[] | EvaluacionUncheckedCreateWithoutPracticaInput[]
    connectOrCreate?: EvaluacionCreateOrConnectWithoutPracticaInput | EvaluacionCreateOrConnectWithoutPracticaInput[]
    upsert?: EvaluacionUpsertWithWhereUniqueWithoutPracticaInput | EvaluacionUpsertWithWhereUniqueWithoutPracticaInput[]
    createMany?: EvaluacionCreateManyPracticaInputEnvelope
    set?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    disconnect?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    delete?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    connect?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    update?: EvaluacionUpdateWithWhereUniqueWithoutPracticaInput | EvaluacionUpdateWithWhereUniqueWithoutPracticaInput[]
    updateMany?: EvaluacionUpdateManyWithWhereWithoutPracticaInput | EvaluacionUpdateManyWithWhereWithoutPracticaInput[]
    deleteMany?: EvaluacionScalarWhereInput | EvaluacionScalarWhereInput[]
  }

  export type EvaluacionUncheckedUpdateManyWithoutPracticaNestedInput = {
    create?: XOR<EvaluacionCreateWithoutPracticaInput, EvaluacionUncheckedCreateWithoutPracticaInput> | EvaluacionCreateWithoutPracticaInput[] | EvaluacionUncheckedCreateWithoutPracticaInput[]
    connectOrCreate?: EvaluacionCreateOrConnectWithoutPracticaInput | EvaluacionCreateOrConnectWithoutPracticaInput[]
    upsert?: EvaluacionUpsertWithWhereUniqueWithoutPracticaInput | EvaluacionUpsertWithWhereUniqueWithoutPracticaInput[]
    createMany?: EvaluacionCreateManyPracticaInputEnvelope
    set?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    disconnect?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    delete?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    connect?: EvaluacionWhereUniqueInput | EvaluacionWhereUniqueInput[]
    update?: EvaluacionUpdateWithWhereUniqueWithoutPracticaInput | EvaluacionUpdateWithWhereUniqueWithoutPracticaInput[]
    updateMany?: EvaluacionUpdateManyWithWhereWithoutPracticaInput | EvaluacionUpdateManyWithWhereWithoutPracticaInput[]
    deleteMany?: EvaluacionScalarWhereInput | EvaluacionScalarWhereInput[]
  }

  export type UsuarioCreateNestedOneWithoutEvaluacionesInput = {
    create?: XOR<UsuarioCreateWithoutEvaluacionesInput, UsuarioUncheckedCreateWithoutEvaluacionesInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutEvaluacionesInput
    connect?: UsuarioWhereUniqueInput
  }

  export type EstudianteCreateNestedOneWithoutEvaluacionesInput = {
    create?: XOR<EstudianteCreateWithoutEvaluacionesInput, EstudianteUncheckedCreateWithoutEvaluacionesInput>
    connectOrCreate?: EstudianteCreateOrConnectWithoutEvaluacionesInput
    connect?: EstudianteWhereUniqueInput
  }

  export type PracticaCreateNestedOneWithoutEvaluacionesInput = {
    create?: XOR<PracticaCreateWithoutEvaluacionesInput, PracticaUncheckedCreateWithoutEvaluacionesInput>
    connectOrCreate?: PracticaCreateOrConnectWithoutEvaluacionesInput
    connect?: PracticaWhereUniqueInput
  }

  export type ComponenteEvaluacionCreateNestedManyWithoutEvaluacionInput = {
    create?: XOR<ComponenteEvaluacionCreateWithoutEvaluacionInput, ComponenteEvaluacionUncheckedCreateWithoutEvaluacionInput> | ComponenteEvaluacionCreateWithoutEvaluacionInput[] | ComponenteEvaluacionUncheckedCreateWithoutEvaluacionInput[]
    connectOrCreate?: ComponenteEvaluacionCreateOrConnectWithoutEvaluacionInput | ComponenteEvaluacionCreateOrConnectWithoutEvaluacionInput[]
    createMany?: ComponenteEvaluacionCreateManyEvaluacionInputEnvelope
    connect?: ComponenteEvaluacionWhereUniqueInput | ComponenteEvaluacionWhereUniqueInput[]
  }

  export type DescripcionFinalCreateNestedOneWithoutEvaluacionInput = {
    create?: XOR<DescripcionFinalCreateWithoutEvaluacionInput, DescripcionFinalUncheckedCreateWithoutEvaluacionInput>
    connectOrCreate?: DescripcionFinalCreateOrConnectWithoutEvaluacionInput
    connect?: DescripcionFinalWhereUniqueInput
  }

  export type ComponenteEvaluacionUncheckedCreateNestedManyWithoutEvaluacionInput = {
    create?: XOR<ComponenteEvaluacionCreateWithoutEvaluacionInput, ComponenteEvaluacionUncheckedCreateWithoutEvaluacionInput> | ComponenteEvaluacionCreateWithoutEvaluacionInput[] | ComponenteEvaluacionUncheckedCreateWithoutEvaluacionInput[]
    connectOrCreate?: ComponenteEvaluacionCreateOrConnectWithoutEvaluacionInput | ComponenteEvaluacionCreateOrConnectWithoutEvaluacionInput[]
    createMany?: ComponenteEvaluacionCreateManyEvaluacionInputEnvelope
    connect?: ComponenteEvaluacionWhereUniqueInput | ComponenteEvaluacionWhereUniqueInput[]
  }

  export type DescripcionFinalUncheckedCreateNestedOneWithoutEvaluacionInput = {
    create?: XOR<DescripcionFinalCreateWithoutEvaluacionInput, DescripcionFinalUncheckedCreateWithoutEvaluacionInput>
    connectOrCreate?: DescripcionFinalCreateOrConnectWithoutEvaluacionInput
    connect?: DescripcionFinalWhereUniqueInput
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type UsuarioUpdateOneRequiredWithoutEvaluacionesNestedInput = {
    create?: XOR<UsuarioCreateWithoutEvaluacionesInput, UsuarioUncheckedCreateWithoutEvaluacionesInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutEvaluacionesInput
    upsert?: UsuarioUpsertWithoutEvaluacionesInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutEvaluacionesInput, UsuarioUpdateWithoutEvaluacionesInput>, UsuarioUncheckedUpdateWithoutEvaluacionesInput>
  }

  export type EstudianteUpdateOneRequiredWithoutEvaluacionesNestedInput = {
    create?: XOR<EstudianteCreateWithoutEvaluacionesInput, EstudianteUncheckedCreateWithoutEvaluacionesInput>
    connectOrCreate?: EstudianteCreateOrConnectWithoutEvaluacionesInput
    upsert?: EstudianteUpsertWithoutEvaluacionesInput
    connect?: EstudianteWhereUniqueInput
    update?: XOR<XOR<EstudianteUpdateToOneWithWhereWithoutEvaluacionesInput, EstudianteUpdateWithoutEvaluacionesInput>, EstudianteUncheckedUpdateWithoutEvaluacionesInput>
  }

  export type PracticaUpdateOneRequiredWithoutEvaluacionesNestedInput = {
    create?: XOR<PracticaCreateWithoutEvaluacionesInput, PracticaUncheckedCreateWithoutEvaluacionesInput>
    connectOrCreate?: PracticaCreateOrConnectWithoutEvaluacionesInput
    upsert?: PracticaUpsertWithoutEvaluacionesInput
    connect?: PracticaWhereUniqueInput
    update?: XOR<XOR<PracticaUpdateToOneWithWhereWithoutEvaluacionesInput, PracticaUpdateWithoutEvaluacionesInput>, PracticaUncheckedUpdateWithoutEvaluacionesInput>
  }

  export type ComponenteEvaluacionUpdateManyWithoutEvaluacionNestedInput = {
    create?: XOR<ComponenteEvaluacionCreateWithoutEvaluacionInput, ComponenteEvaluacionUncheckedCreateWithoutEvaluacionInput> | ComponenteEvaluacionCreateWithoutEvaluacionInput[] | ComponenteEvaluacionUncheckedCreateWithoutEvaluacionInput[]
    connectOrCreate?: ComponenteEvaluacionCreateOrConnectWithoutEvaluacionInput | ComponenteEvaluacionCreateOrConnectWithoutEvaluacionInput[]
    upsert?: ComponenteEvaluacionUpsertWithWhereUniqueWithoutEvaluacionInput | ComponenteEvaluacionUpsertWithWhereUniqueWithoutEvaluacionInput[]
    createMany?: ComponenteEvaluacionCreateManyEvaluacionInputEnvelope
    set?: ComponenteEvaluacionWhereUniqueInput | ComponenteEvaluacionWhereUniqueInput[]
    disconnect?: ComponenteEvaluacionWhereUniqueInput | ComponenteEvaluacionWhereUniqueInput[]
    delete?: ComponenteEvaluacionWhereUniqueInput | ComponenteEvaluacionWhereUniqueInput[]
    connect?: ComponenteEvaluacionWhereUniqueInput | ComponenteEvaluacionWhereUniqueInput[]
    update?: ComponenteEvaluacionUpdateWithWhereUniqueWithoutEvaluacionInput | ComponenteEvaluacionUpdateWithWhereUniqueWithoutEvaluacionInput[]
    updateMany?: ComponenteEvaluacionUpdateManyWithWhereWithoutEvaluacionInput | ComponenteEvaluacionUpdateManyWithWhereWithoutEvaluacionInput[]
    deleteMany?: ComponenteEvaluacionScalarWhereInput | ComponenteEvaluacionScalarWhereInput[]
  }

  export type DescripcionFinalUpdateOneWithoutEvaluacionNestedInput = {
    create?: XOR<DescripcionFinalCreateWithoutEvaluacionInput, DescripcionFinalUncheckedCreateWithoutEvaluacionInput>
    connectOrCreate?: DescripcionFinalCreateOrConnectWithoutEvaluacionInput
    upsert?: DescripcionFinalUpsertWithoutEvaluacionInput
    disconnect?: DescripcionFinalWhereInput | boolean
    delete?: DescripcionFinalWhereInput | boolean
    connect?: DescripcionFinalWhereUniqueInput
    update?: XOR<XOR<DescripcionFinalUpdateToOneWithWhereWithoutEvaluacionInput, DescripcionFinalUpdateWithoutEvaluacionInput>, DescripcionFinalUncheckedUpdateWithoutEvaluacionInput>
  }

  export type ComponenteEvaluacionUncheckedUpdateManyWithoutEvaluacionNestedInput = {
    create?: XOR<ComponenteEvaluacionCreateWithoutEvaluacionInput, ComponenteEvaluacionUncheckedCreateWithoutEvaluacionInput> | ComponenteEvaluacionCreateWithoutEvaluacionInput[] | ComponenteEvaluacionUncheckedCreateWithoutEvaluacionInput[]
    connectOrCreate?: ComponenteEvaluacionCreateOrConnectWithoutEvaluacionInput | ComponenteEvaluacionCreateOrConnectWithoutEvaluacionInput[]
    upsert?: ComponenteEvaluacionUpsertWithWhereUniqueWithoutEvaluacionInput | ComponenteEvaluacionUpsertWithWhereUniqueWithoutEvaluacionInput[]
    createMany?: ComponenteEvaluacionCreateManyEvaluacionInputEnvelope
    set?: ComponenteEvaluacionWhereUniqueInput | ComponenteEvaluacionWhereUniqueInput[]
    disconnect?: ComponenteEvaluacionWhereUniqueInput | ComponenteEvaluacionWhereUniqueInput[]
    delete?: ComponenteEvaluacionWhereUniqueInput | ComponenteEvaluacionWhereUniqueInput[]
    connect?: ComponenteEvaluacionWhereUniqueInput | ComponenteEvaluacionWhereUniqueInput[]
    update?: ComponenteEvaluacionUpdateWithWhereUniqueWithoutEvaluacionInput | ComponenteEvaluacionUpdateWithWhereUniqueWithoutEvaluacionInput[]
    updateMany?: ComponenteEvaluacionUpdateManyWithWhereWithoutEvaluacionInput | ComponenteEvaluacionUpdateManyWithWhereWithoutEvaluacionInput[]
    deleteMany?: ComponenteEvaluacionScalarWhereInput | ComponenteEvaluacionScalarWhereInput[]
  }

  export type DescripcionFinalUncheckedUpdateOneWithoutEvaluacionNestedInput = {
    create?: XOR<DescripcionFinalCreateWithoutEvaluacionInput, DescripcionFinalUncheckedCreateWithoutEvaluacionInput>
    connectOrCreate?: DescripcionFinalCreateOrConnectWithoutEvaluacionInput
    upsert?: DescripcionFinalUpsertWithoutEvaluacionInput
    disconnect?: DescripcionFinalWhereInput | boolean
    delete?: DescripcionFinalWhereInput | boolean
    connect?: DescripcionFinalWhereUniqueInput
    update?: XOR<XOR<DescripcionFinalUpdateToOneWithWhereWithoutEvaluacionInput, DescripcionFinalUpdateWithoutEvaluacionInput>, DescripcionFinalUncheckedUpdateWithoutEvaluacionInput>
  }

  export type EvaluacionCreateNestedOneWithoutComponentesInput = {
    create?: XOR<EvaluacionCreateWithoutComponentesInput, EvaluacionUncheckedCreateWithoutComponentesInput>
    connectOrCreate?: EvaluacionCreateOrConnectWithoutComponentesInput
    connect?: EvaluacionWhereUniqueInput
  }

  export type ItemEvaluacionCreateNestedManyWithoutComponenteInput = {
    create?: XOR<ItemEvaluacionCreateWithoutComponenteInput, ItemEvaluacionUncheckedCreateWithoutComponenteInput> | ItemEvaluacionCreateWithoutComponenteInput[] | ItemEvaluacionUncheckedCreateWithoutComponenteInput[]
    connectOrCreate?: ItemEvaluacionCreateOrConnectWithoutComponenteInput | ItemEvaluacionCreateOrConnectWithoutComponenteInput[]
    createMany?: ItemEvaluacionCreateManyComponenteInputEnvelope
    connect?: ItemEvaluacionWhereUniqueInput | ItemEvaluacionWhereUniqueInput[]
  }

  export type ItemEvaluacionUncheckedCreateNestedManyWithoutComponenteInput = {
    create?: XOR<ItemEvaluacionCreateWithoutComponenteInput, ItemEvaluacionUncheckedCreateWithoutComponenteInput> | ItemEvaluacionCreateWithoutComponenteInput[] | ItemEvaluacionUncheckedCreateWithoutComponenteInput[]
    connectOrCreate?: ItemEvaluacionCreateOrConnectWithoutComponenteInput | ItemEvaluacionCreateOrConnectWithoutComponenteInput[]
    createMany?: ItemEvaluacionCreateManyComponenteInputEnvelope
    connect?: ItemEvaluacionWhereUniqueInput | ItemEvaluacionWhereUniqueInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EvaluacionUpdateOneRequiredWithoutComponentesNestedInput = {
    create?: XOR<EvaluacionCreateWithoutComponentesInput, EvaluacionUncheckedCreateWithoutComponentesInput>
    connectOrCreate?: EvaluacionCreateOrConnectWithoutComponentesInput
    upsert?: EvaluacionUpsertWithoutComponentesInput
    connect?: EvaluacionWhereUniqueInput
    update?: XOR<XOR<EvaluacionUpdateToOneWithWhereWithoutComponentesInput, EvaluacionUpdateWithoutComponentesInput>, EvaluacionUncheckedUpdateWithoutComponentesInput>
  }

  export type ItemEvaluacionUpdateManyWithoutComponenteNestedInput = {
    create?: XOR<ItemEvaluacionCreateWithoutComponenteInput, ItemEvaluacionUncheckedCreateWithoutComponenteInput> | ItemEvaluacionCreateWithoutComponenteInput[] | ItemEvaluacionUncheckedCreateWithoutComponenteInput[]
    connectOrCreate?: ItemEvaluacionCreateOrConnectWithoutComponenteInput | ItemEvaluacionCreateOrConnectWithoutComponenteInput[]
    upsert?: ItemEvaluacionUpsertWithWhereUniqueWithoutComponenteInput | ItemEvaluacionUpsertWithWhereUniqueWithoutComponenteInput[]
    createMany?: ItemEvaluacionCreateManyComponenteInputEnvelope
    set?: ItemEvaluacionWhereUniqueInput | ItemEvaluacionWhereUniqueInput[]
    disconnect?: ItemEvaluacionWhereUniqueInput | ItemEvaluacionWhereUniqueInput[]
    delete?: ItemEvaluacionWhereUniqueInput | ItemEvaluacionWhereUniqueInput[]
    connect?: ItemEvaluacionWhereUniqueInput | ItemEvaluacionWhereUniqueInput[]
    update?: ItemEvaluacionUpdateWithWhereUniqueWithoutComponenteInput | ItemEvaluacionUpdateWithWhereUniqueWithoutComponenteInput[]
    updateMany?: ItemEvaluacionUpdateManyWithWhereWithoutComponenteInput | ItemEvaluacionUpdateManyWithWhereWithoutComponenteInput[]
    deleteMany?: ItemEvaluacionScalarWhereInput | ItemEvaluacionScalarWhereInput[]
  }

  export type ItemEvaluacionUncheckedUpdateManyWithoutComponenteNestedInput = {
    create?: XOR<ItemEvaluacionCreateWithoutComponenteInput, ItemEvaluacionUncheckedCreateWithoutComponenteInput> | ItemEvaluacionCreateWithoutComponenteInput[] | ItemEvaluacionUncheckedCreateWithoutComponenteInput[]
    connectOrCreate?: ItemEvaluacionCreateOrConnectWithoutComponenteInput | ItemEvaluacionCreateOrConnectWithoutComponenteInput[]
    upsert?: ItemEvaluacionUpsertWithWhereUniqueWithoutComponenteInput | ItemEvaluacionUpsertWithWhereUniqueWithoutComponenteInput[]
    createMany?: ItemEvaluacionCreateManyComponenteInputEnvelope
    set?: ItemEvaluacionWhereUniqueInput | ItemEvaluacionWhereUniqueInput[]
    disconnect?: ItemEvaluacionWhereUniqueInput | ItemEvaluacionWhereUniqueInput[]
    delete?: ItemEvaluacionWhereUniqueInput | ItemEvaluacionWhereUniqueInput[]
    connect?: ItemEvaluacionWhereUniqueInput | ItemEvaluacionWhereUniqueInput[]
    update?: ItemEvaluacionUpdateWithWhereUniqueWithoutComponenteInput | ItemEvaluacionUpdateWithWhereUniqueWithoutComponenteInput[]
    updateMany?: ItemEvaluacionUpdateManyWithWhereWithoutComponenteInput | ItemEvaluacionUpdateManyWithWhereWithoutComponenteInput[]
    deleteMany?: ItemEvaluacionScalarWhereInput | ItemEvaluacionScalarWhereInput[]
  }

  export type ComponenteEvaluacionCreateNestedOneWithoutItemsInput = {
    create?: XOR<ComponenteEvaluacionCreateWithoutItemsInput, ComponenteEvaluacionUncheckedCreateWithoutItemsInput>
    connectOrCreate?: ComponenteEvaluacionCreateOrConnectWithoutItemsInput
    connect?: ComponenteEvaluacionWhereUniqueInput
  }

  export type ComponenteEvaluacionUpdateOneRequiredWithoutItemsNestedInput = {
    create?: XOR<ComponenteEvaluacionCreateWithoutItemsInput, ComponenteEvaluacionUncheckedCreateWithoutItemsInput>
    connectOrCreate?: ComponenteEvaluacionCreateOrConnectWithoutItemsInput
    upsert?: ComponenteEvaluacionUpsertWithoutItemsInput
    connect?: ComponenteEvaluacionWhereUniqueInput
    update?: XOR<XOR<ComponenteEvaluacionUpdateToOneWithWhereWithoutItemsInput, ComponenteEvaluacionUpdateWithoutItemsInput>, ComponenteEvaluacionUncheckedUpdateWithoutItemsInput>
  }

  export type EvaluacionCreateNestedOneWithoutDescripcionFinalInput = {
    create?: XOR<EvaluacionCreateWithoutDescripcionFinalInput, EvaluacionUncheckedCreateWithoutDescripcionFinalInput>
    connectOrCreate?: EvaluacionCreateOrConnectWithoutDescripcionFinalInput
    connect?: EvaluacionWhereUniqueInput
  }

  export type EvaluacionUpdateOneRequiredWithoutDescripcionFinalNestedInput = {
    create?: XOR<EvaluacionCreateWithoutDescripcionFinalInput, EvaluacionUncheckedCreateWithoutDescripcionFinalInput>
    connectOrCreate?: EvaluacionCreateOrConnectWithoutDescripcionFinalInput
    upsert?: EvaluacionUpsertWithoutDescripcionFinalInput
    connect?: EvaluacionWhereUniqueInput
    update?: XOR<XOR<EvaluacionUpdateToOneWithWhereWithoutDescripcionFinalInput, EvaluacionUpdateWithoutDescripcionFinalInput>, EvaluacionUncheckedUpdateWithoutDescripcionFinalInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedEnumRolFilter<$PrismaModel = never> = {
    equals?: $Enums.Rol | EnumRolFieldRefInput<$PrismaModel>
    in?: $Enums.Rol[] | ListEnumRolFieldRefInput<$PrismaModel>
    notIn?: $Enums.Rol[] | ListEnumRolFieldRefInput<$PrismaModel>
    not?: NestedEnumRolFilter<$PrismaModel> | $Enums.Rol
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedEnumRolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Rol | EnumRolFieldRefInput<$PrismaModel>
    in?: $Enums.Rol[] | ListEnumRolFieldRefInput<$PrismaModel>
    notIn?: $Enums.Rol[] | ListEnumRolFieldRefInput<$PrismaModel>
    not?: NestedEnumRolWithAggregatesFilter<$PrismaModel> | $Enums.Rol
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRolFilter<$PrismaModel>
    _max?: NestedEnumRolFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type EvaluacionCreateWithoutDocenteInput = {
    id_evaluacion?: string
    fecha_evaluacion: Date | string
    fecha_inicio_practica: Date | string
    fecha_fin_practica: Date | string
    nota_final?: number | null
    reporte_cualitativo?: string | null
    estudiante: EstudianteCreateNestedOneWithoutEvaluacionesInput
    practica: PracticaCreateNestedOneWithoutEvaluacionesInput
    componentes?: ComponenteEvaluacionCreateNestedManyWithoutEvaluacionInput
    descripcionFinal?: DescripcionFinalCreateNestedOneWithoutEvaluacionInput
  }

  export type EvaluacionUncheckedCreateWithoutDocenteInput = {
    id_evaluacion?: string
    fecha_evaluacion: Date | string
    fecha_inicio_practica: Date | string
    fecha_fin_practica: Date | string
    nota_final?: number | null
    reporte_cualitativo?: string | null
    id_estudiante: string
    id_practica: string
    componentes?: ComponenteEvaluacionUncheckedCreateNestedManyWithoutEvaluacionInput
    descripcionFinal?: DescripcionFinalUncheckedCreateNestedOneWithoutEvaluacionInput
  }

  export type EvaluacionCreateOrConnectWithoutDocenteInput = {
    where: EvaluacionWhereUniqueInput
    create: XOR<EvaluacionCreateWithoutDocenteInput, EvaluacionUncheckedCreateWithoutDocenteInput>
  }

  export type EvaluacionCreateManyDocenteInputEnvelope = {
    data: EvaluacionCreateManyDocenteInput | EvaluacionCreateManyDocenteInput[]
    skipDuplicates?: boolean
  }

  export type EvaluacionUpsertWithWhereUniqueWithoutDocenteInput = {
    where: EvaluacionWhereUniqueInput
    update: XOR<EvaluacionUpdateWithoutDocenteInput, EvaluacionUncheckedUpdateWithoutDocenteInput>
    create: XOR<EvaluacionCreateWithoutDocenteInput, EvaluacionUncheckedCreateWithoutDocenteInput>
  }

  export type EvaluacionUpdateWithWhereUniqueWithoutDocenteInput = {
    where: EvaluacionWhereUniqueInput
    data: XOR<EvaluacionUpdateWithoutDocenteInput, EvaluacionUncheckedUpdateWithoutDocenteInput>
  }

  export type EvaluacionUpdateManyWithWhereWithoutDocenteInput = {
    where: EvaluacionScalarWhereInput
    data: XOR<EvaluacionUpdateManyMutationInput, EvaluacionUncheckedUpdateManyWithoutDocenteInput>
  }

  export type EvaluacionScalarWhereInput = {
    AND?: EvaluacionScalarWhereInput | EvaluacionScalarWhereInput[]
    OR?: EvaluacionScalarWhereInput[]
    NOT?: EvaluacionScalarWhereInput | EvaluacionScalarWhereInput[]
    id_evaluacion?: StringFilter<"Evaluacion"> | string
    fecha_evaluacion?: DateTimeFilter<"Evaluacion"> | Date | string
    fecha_inicio_practica?: DateTimeFilter<"Evaluacion"> | Date | string
    fecha_fin_practica?: DateTimeFilter<"Evaluacion"> | Date | string
    nota_final?: FloatNullableFilter<"Evaluacion"> | number | null
    reporte_cualitativo?: StringNullableFilter<"Evaluacion"> | string | null
    id_docente?: StringFilter<"Evaluacion"> | string
    id_estudiante?: StringFilter<"Evaluacion"> | string
    id_practica?: StringFilter<"Evaluacion"> | string
  }

  export type EvaluacionCreateWithoutEstudianteInput = {
    id_evaluacion?: string
    fecha_evaluacion: Date | string
    fecha_inicio_practica: Date | string
    fecha_fin_practica: Date | string
    nota_final?: number | null
    reporte_cualitativo?: string | null
    docente: UsuarioCreateNestedOneWithoutEvaluacionesInput
    practica: PracticaCreateNestedOneWithoutEvaluacionesInput
    componentes?: ComponenteEvaluacionCreateNestedManyWithoutEvaluacionInput
    descripcionFinal?: DescripcionFinalCreateNestedOneWithoutEvaluacionInput
  }

  export type EvaluacionUncheckedCreateWithoutEstudianteInput = {
    id_evaluacion?: string
    fecha_evaluacion: Date | string
    fecha_inicio_practica: Date | string
    fecha_fin_practica: Date | string
    nota_final?: number | null
    reporte_cualitativo?: string | null
    id_docente: string
    id_practica: string
    componentes?: ComponenteEvaluacionUncheckedCreateNestedManyWithoutEvaluacionInput
    descripcionFinal?: DescripcionFinalUncheckedCreateNestedOneWithoutEvaluacionInput
  }

  export type EvaluacionCreateOrConnectWithoutEstudianteInput = {
    where: EvaluacionWhereUniqueInput
    create: XOR<EvaluacionCreateWithoutEstudianteInput, EvaluacionUncheckedCreateWithoutEstudianteInput>
  }

  export type EvaluacionCreateManyEstudianteInputEnvelope = {
    data: EvaluacionCreateManyEstudianteInput | EvaluacionCreateManyEstudianteInput[]
    skipDuplicates?: boolean
  }

  export type EvaluacionUpsertWithWhereUniqueWithoutEstudianteInput = {
    where: EvaluacionWhereUniqueInput
    update: XOR<EvaluacionUpdateWithoutEstudianteInput, EvaluacionUncheckedUpdateWithoutEstudianteInput>
    create: XOR<EvaluacionCreateWithoutEstudianteInput, EvaluacionUncheckedCreateWithoutEstudianteInput>
  }

  export type EvaluacionUpdateWithWhereUniqueWithoutEstudianteInput = {
    where: EvaluacionWhereUniqueInput
    data: XOR<EvaluacionUpdateWithoutEstudianteInput, EvaluacionUncheckedUpdateWithoutEstudianteInput>
  }

  export type EvaluacionUpdateManyWithWhereWithoutEstudianteInput = {
    where: EvaluacionScalarWhereInput
    data: XOR<EvaluacionUpdateManyMutationInput, EvaluacionUncheckedUpdateManyWithoutEstudianteInput>
  }

  export type EvaluacionCreateWithoutPracticaInput = {
    id_evaluacion?: string
    fecha_evaluacion: Date | string
    fecha_inicio_practica: Date | string
    fecha_fin_practica: Date | string
    nota_final?: number | null
    reporte_cualitativo?: string | null
    docente: UsuarioCreateNestedOneWithoutEvaluacionesInput
    estudiante: EstudianteCreateNestedOneWithoutEvaluacionesInput
    componentes?: ComponenteEvaluacionCreateNestedManyWithoutEvaluacionInput
    descripcionFinal?: DescripcionFinalCreateNestedOneWithoutEvaluacionInput
  }

  export type EvaluacionUncheckedCreateWithoutPracticaInput = {
    id_evaluacion?: string
    fecha_evaluacion: Date | string
    fecha_inicio_practica: Date | string
    fecha_fin_practica: Date | string
    nota_final?: number | null
    reporte_cualitativo?: string | null
    id_docente: string
    id_estudiante: string
    componentes?: ComponenteEvaluacionUncheckedCreateNestedManyWithoutEvaluacionInput
    descripcionFinal?: DescripcionFinalUncheckedCreateNestedOneWithoutEvaluacionInput
  }

  export type EvaluacionCreateOrConnectWithoutPracticaInput = {
    where: EvaluacionWhereUniqueInput
    create: XOR<EvaluacionCreateWithoutPracticaInput, EvaluacionUncheckedCreateWithoutPracticaInput>
  }

  export type EvaluacionCreateManyPracticaInputEnvelope = {
    data: EvaluacionCreateManyPracticaInput | EvaluacionCreateManyPracticaInput[]
    skipDuplicates?: boolean
  }

  export type EvaluacionUpsertWithWhereUniqueWithoutPracticaInput = {
    where: EvaluacionWhereUniqueInput
    update: XOR<EvaluacionUpdateWithoutPracticaInput, EvaluacionUncheckedUpdateWithoutPracticaInput>
    create: XOR<EvaluacionCreateWithoutPracticaInput, EvaluacionUncheckedCreateWithoutPracticaInput>
  }

  export type EvaluacionUpdateWithWhereUniqueWithoutPracticaInput = {
    where: EvaluacionWhereUniqueInput
    data: XOR<EvaluacionUpdateWithoutPracticaInput, EvaluacionUncheckedUpdateWithoutPracticaInput>
  }

  export type EvaluacionUpdateManyWithWhereWithoutPracticaInput = {
    where: EvaluacionScalarWhereInput
    data: XOR<EvaluacionUpdateManyMutationInput, EvaluacionUncheckedUpdateManyWithoutPracticaInput>
  }

  export type UsuarioCreateWithoutEvaluacionesInput = {
    id_usuario?: string
    nombre: string
    correo: string
    cedula: string
    contraseña_hash: string
    rol: $Enums.Rol
  }

  export type UsuarioUncheckedCreateWithoutEvaluacionesInput = {
    id_usuario?: string
    nombre: string
    correo: string
    cedula: string
    contraseña_hash: string
    rol: $Enums.Rol
  }

  export type UsuarioCreateOrConnectWithoutEvaluacionesInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutEvaluacionesInput, UsuarioUncheckedCreateWithoutEvaluacionesInput>
  }

  export type EstudianteCreateWithoutEvaluacionesInput = {
    id_estudiante?: string
    nombre: string
    cedula: string
    correo: string
  }

  export type EstudianteUncheckedCreateWithoutEvaluacionesInput = {
    id_estudiante?: string
    nombre: string
    cedula: string
    correo: string
  }

  export type EstudianteCreateOrConnectWithoutEvaluacionesInput = {
    where: EstudianteWhereUniqueInput
    create: XOR<EstudianteCreateWithoutEvaluacionesInput, EstudianteUncheckedCreateWithoutEvaluacionesInput>
  }

  export type PracticaCreateWithoutEvaluacionesInput = {
    id_practica?: string
    nombre: string
  }

  export type PracticaUncheckedCreateWithoutEvaluacionesInput = {
    id_practica?: string
    nombre: string
  }

  export type PracticaCreateOrConnectWithoutEvaluacionesInput = {
    where: PracticaWhereUniqueInput
    create: XOR<PracticaCreateWithoutEvaluacionesInput, PracticaUncheckedCreateWithoutEvaluacionesInput>
  }

  export type ComponenteEvaluacionCreateWithoutEvaluacionInput = {
    id_componente?: string
    nombre_componente: string
    porcentaje: number
    nota_componente?: number | null
    items?: ItemEvaluacionCreateNestedManyWithoutComponenteInput
  }

  export type ComponenteEvaluacionUncheckedCreateWithoutEvaluacionInput = {
    id_componente?: string
    nombre_componente: string
    porcentaje: number
    nota_componente?: number | null
    items?: ItemEvaluacionUncheckedCreateNestedManyWithoutComponenteInput
  }

  export type ComponenteEvaluacionCreateOrConnectWithoutEvaluacionInput = {
    where: ComponenteEvaluacionWhereUniqueInput
    create: XOR<ComponenteEvaluacionCreateWithoutEvaluacionInput, ComponenteEvaluacionUncheckedCreateWithoutEvaluacionInput>
  }

  export type ComponenteEvaluacionCreateManyEvaluacionInputEnvelope = {
    data: ComponenteEvaluacionCreateManyEvaluacionInput | ComponenteEvaluacionCreateManyEvaluacionInput[]
    skipDuplicates?: boolean
  }

  export type DescripcionFinalCreateWithoutEvaluacionInput = {
    nivel: string
    cumplimiento: number
    descripcion: string
  }

  export type DescripcionFinalUncheckedCreateWithoutEvaluacionInput = {
    nivel: string
    cumplimiento: number
    descripcion: string
  }

  export type DescripcionFinalCreateOrConnectWithoutEvaluacionInput = {
    where: DescripcionFinalWhereUniqueInput
    create: XOR<DescripcionFinalCreateWithoutEvaluacionInput, DescripcionFinalUncheckedCreateWithoutEvaluacionInput>
  }

  export type UsuarioUpsertWithoutEvaluacionesInput = {
    update: XOR<UsuarioUpdateWithoutEvaluacionesInput, UsuarioUncheckedUpdateWithoutEvaluacionesInput>
    create: XOR<UsuarioCreateWithoutEvaluacionesInput, UsuarioUncheckedCreateWithoutEvaluacionesInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutEvaluacionesInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutEvaluacionesInput, UsuarioUncheckedUpdateWithoutEvaluacionesInput>
  }

  export type UsuarioUpdateWithoutEvaluacionesInput = {
    id_usuario?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    contraseña_hash?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
  }

  export type UsuarioUncheckedUpdateWithoutEvaluacionesInput = {
    id_usuario?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    contraseña_hash?: StringFieldUpdateOperationsInput | string
    rol?: EnumRolFieldUpdateOperationsInput | $Enums.Rol
  }

  export type EstudianteUpsertWithoutEvaluacionesInput = {
    update: XOR<EstudianteUpdateWithoutEvaluacionesInput, EstudianteUncheckedUpdateWithoutEvaluacionesInput>
    create: XOR<EstudianteCreateWithoutEvaluacionesInput, EstudianteUncheckedCreateWithoutEvaluacionesInput>
    where?: EstudianteWhereInput
  }

  export type EstudianteUpdateToOneWithWhereWithoutEvaluacionesInput = {
    where?: EstudianteWhereInput
    data: XOR<EstudianteUpdateWithoutEvaluacionesInput, EstudianteUncheckedUpdateWithoutEvaluacionesInput>
  }

  export type EstudianteUpdateWithoutEvaluacionesInput = {
    id_estudiante?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
  }

  export type EstudianteUncheckedUpdateWithoutEvaluacionesInput = {
    id_estudiante?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    cedula?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
  }

  export type PracticaUpsertWithoutEvaluacionesInput = {
    update: XOR<PracticaUpdateWithoutEvaluacionesInput, PracticaUncheckedUpdateWithoutEvaluacionesInput>
    create: XOR<PracticaCreateWithoutEvaluacionesInput, PracticaUncheckedCreateWithoutEvaluacionesInput>
    where?: PracticaWhereInput
  }

  export type PracticaUpdateToOneWithWhereWithoutEvaluacionesInput = {
    where?: PracticaWhereInput
    data: XOR<PracticaUpdateWithoutEvaluacionesInput, PracticaUncheckedUpdateWithoutEvaluacionesInput>
  }

  export type PracticaUpdateWithoutEvaluacionesInput = {
    id_practica?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type PracticaUncheckedUpdateWithoutEvaluacionesInput = {
    id_practica?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
  }

  export type ComponenteEvaluacionUpsertWithWhereUniqueWithoutEvaluacionInput = {
    where: ComponenteEvaluacionWhereUniqueInput
    update: XOR<ComponenteEvaluacionUpdateWithoutEvaluacionInput, ComponenteEvaluacionUncheckedUpdateWithoutEvaluacionInput>
    create: XOR<ComponenteEvaluacionCreateWithoutEvaluacionInput, ComponenteEvaluacionUncheckedCreateWithoutEvaluacionInput>
  }

  export type ComponenteEvaluacionUpdateWithWhereUniqueWithoutEvaluacionInput = {
    where: ComponenteEvaluacionWhereUniqueInput
    data: XOR<ComponenteEvaluacionUpdateWithoutEvaluacionInput, ComponenteEvaluacionUncheckedUpdateWithoutEvaluacionInput>
  }

  export type ComponenteEvaluacionUpdateManyWithWhereWithoutEvaluacionInput = {
    where: ComponenteEvaluacionScalarWhereInput
    data: XOR<ComponenteEvaluacionUpdateManyMutationInput, ComponenteEvaluacionUncheckedUpdateManyWithoutEvaluacionInput>
  }

  export type ComponenteEvaluacionScalarWhereInput = {
    AND?: ComponenteEvaluacionScalarWhereInput | ComponenteEvaluacionScalarWhereInput[]
    OR?: ComponenteEvaluacionScalarWhereInput[]
    NOT?: ComponenteEvaluacionScalarWhereInput | ComponenteEvaluacionScalarWhereInput[]
    id_componente?: StringFilter<"ComponenteEvaluacion"> | string
    nombre_componente?: StringFilter<"ComponenteEvaluacion"> | string
    porcentaje?: IntFilter<"ComponenteEvaluacion"> | number
    nota_componente?: FloatNullableFilter<"ComponenteEvaluacion"> | number | null
    id_evaluacion?: StringFilter<"ComponenteEvaluacion"> | string
  }

  export type DescripcionFinalUpsertWithoutEvaluacionInput = {
    update: XOR<DescripcionFinalUpdateWithoutEvaluacionInput, DescripcionFinalUncheckedUpdateWithoutEvaluacionInput>
    create: XOR<DescripcionFinalCreateWithoutEvaluacionInput, DescripcionFinalUncheckedCreateWithoutEvaluacionInput>
    where?: DescripcionFinalWhereInput
  }

  export type DescripcionFinalUpdateToOneWithWhereWithoutEvaluacionInput = {
    where?: DescripcionFinalWhereInput
    data: XOR<DescripcionFinalUpdateWithoutEvaluacionInput, DescripcionFinalUncheckedUpdateWithoutEvaluacionInput>
  }

  export type DescripcionFinalUpdateWithoutEvaluacionInput = {
    nivel?: StringFieldUpdateOperationsInput | string
    cumplimiento?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type DescripcionFinalUncheckedUpdateWithoutEvaluacionInput = {
    nivel?: StringFieldUpdateOperationsInput | string
    cumplimiento?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type EvaluacionCreateWithoutComponentesInput = {
    id_evaluacion?: string
    fecha_evaluacion: Date | string
    fecha_inicio_practica: Date | string
    fecha_fin_practica: Date | string
    nota_final?: number | null
    reporte_cualitativo?: string | null
    docente: UsuarioCreateNestedOneWithoutEvaluacionesInput
    estudiante: EstudianteCreateNestedOneWithoutEvaluacionesInput
    practica: PracticaCreateNestedOneWithoutEvaluacionesInput
    descripcionFinal?: DescripcionFinalCreateNestedOneWithoutEvaluacionInput
  }

  export type EvaluacionUncheckedCreateWithoutComponentesInput = {
    id_evaluacion?: string
    fecha_evaluacion: Date | string
    fecha_inicio_practica: Date | string
    fecha_fin_practica: Date | string
    nota_final?: number | null
    reporte_cualitativo?: string | null
    id_docente: string
    id_estudiante: string
    id_practica: string
    descripcionFinal?: DescripcionFinalUncheckedCreateNestedOneWithoutEvaluacionInput
  }

  export type EvaluacionCreateOrConnectWithoutComponentesInput = {
    where: EvaluacionWhereUniqueInput
    create: XOR<EvaluacionCreateWithoutComponentesInput, EvaluacionUncheckedCreateWithoutComponentesInput>
  }

  export type ItemEvaluacionCreateWithoutComponenteInput = {
    id_item?: string
    enunciado: string
    nota?: number | null
  }

  export type ItemEvaluacionUncheckedCreateWithoutComponenteInput = {
    id_item?: string
    enunciado: string
    nota?: number | null
  }

  export type ItemEvaluacionCreateOrConnectWithoutComponenteInput = {
    where: ItemEvaluacionWhereUniqueInput
    create: XOR<ItemEvaluacionCreateWithoutComponenteInput, ItemEvaluacionUncheckedCreateWithoutComponenteInput>
  }

  export type ItemEvaluacionCreateManyComponenteInputEnvelope = {
    data: ItemEvaluacionCreateManyComponenteInput | ItemEvaluacionCreateManyComponenteInput[]
    skipDuplicates?: boolean
  }

  export type EvaluacionUpsertWithoutComponentesInput = {
    update: XOR<EvaluacionUpdateWithoutComponentesInput, EvaluacionUncheckedUpdateWithoutComponentesInput>
    create: XOR<EvaluacionCreateWithoutComponentesInput, EvaluacionUncheckedCreateWithoutComponentesInput>
    where?: EvaluacionWhereInput
  }

  export type EvaluacionUpdateToOneWithWhereWithoutComponentesInput = {
    where?: EvaluacionWhereInput
    data: XOR<EvaluacionUpdateWithoutComponentesInput, EvaluacionUncheckedUpdateWithoutComponentesInput>
  }

  export type EvaluacionUpdateWithoutComponentesInput = {
    id_evaluacion?: StringFieldUpdateOperationsInput | string
    fecha_evaluacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    nota_final?: NullableFloatFieldUpdateOperationsInput | number | null
    reporte_cualitativo?: NullableStringFieldUpdateOperationsInput | string | null
    docente?: UsuarioUpdateOneRequiredWithoutEvaluacionesNestedInput
    estudiante?: EstudianteUpdateOneRequiredWithoutEvaluacionesNestedInput
    practica?: PracticaUpdateOneRequiredWithoutEvaluacionesNestedInput
    descripcionFinal?: DescripcionFinalUpdateOneWithoutEvaluacionNestedInput
  }

  export type EvaluacionUncheckedUpdateWithoutComponentesInput = {
    id_evaluacion?: StringFieldUpdateOperationsInput | string
    fecha_evaluacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    nota_final?: NullableFloatFieldUpdateOperationsInput | number | null
    reporte_cualitativo?: NullableStringFieldUpdateOperationsInput | string | null
    id_docente?: StringFieldUpdateOperationsInput | string
    id_estudiante?: StringFieldUpdateOperationsInput | string
    id_practica?: StringFieldUpdateOperationsInput | string
    descripcionFinal?: DescripcionFinalUncheckedUpdateOneWithoutEvaluacionNestedInput
  }

  export type ItemEvaluacionUpsertWithWhereUniqueWithoutComponenteInput = {
    where: ItemEvaluacionWhereUniqueInput
    update: XOR<ItemEvaluacionUpdateWithoutComponenteInput, ItemEvaluacionUncheckedUpdateWithoutComponenteInput>
    create: XOR<ItemEvaluacionCreateWithoutComponenteInput, ItemEvaluacionUncheckedCreateWithoutComponenteInput>
  }

  export type ItemEvaluacionUpdateWithWhereUniqueWithoutComponenteInput = {
    where: ItemEvaluacionWhereUniqueInput
    data: XOR<ItemEvaluacionUpdateWithoutComponenteInput, ItemEvaluacionUncheckedUpdateWithoutComponenteInput>
  }

  export type ItemEvaluacionUpdateManyWithWhereWithoutComponenteInput = {
    where: ItemEvaluacionScalarWhereInput
    data: XOR<ItemEvaluacionUpdateManyMutationInput, ItemEvaluacionUncheckedUpdateManyWithoutComponenteInput>
  }

  export type ItemEvaluacionScalarWhereInput = {
    AND?: ItemEvaluacionScalarWhereInput | ItemEvaluacionScalarWhereInput[]
    OR?: ItemEvaluacionScalarWhereInput[]
    NOT?: ItemEvaluacionScalarWhereInput | ItemEvaluacionScalarWhereInput[]
    id_item?: StringFilter<"ItemEvaluacion"> | string
    enunciado?: StringFilter<"ItemEvaluacion"> | string
    nota?: FloatNullableFilter<"ItemEvaluacion"> | number | null
    id_componente?: StringFilter<"ItemEvaluacion"> | string
  }

  export type ComponenteEvaluacionCreateWithoutItemsInput = {
    id_componente?: string
    nombre_componente: string
    porcentaje: number
    nota_componente?: number | null
    evaluacion: EvaluacionCreateNestedOneWithoutComponentesInput
  }

  export type ComponenteEvaluacionUncheckedCreateWithoutItemsInput = {
    id_componente?: string
    nombre_componente: string
    porcentaje: number
    nota_componente?: number | null
    id_evaluacion: string
  }

  export type ComponenteEvaluacionCreateOrConnectWithoutItemsInput = {
    where: ComponenteEvaluacionWhereUniqueInput
    create: XOR<ComponenteEvaluacionCreateWithoutItemsInput, ComponenteEvaluacionUncheckedCreateWithoutItemsInput>
  }

  export type ComponenteEvaluacionUpsertWithoutItemsInput = {
    update: XOR<ComponenteEvaluacionUpdateWithoutItemsInput, ComponenteEvaluacionUncheckedUpdateWithoutItemsInput>
    create: XOR<ComponenteEvaluacionCreateWithoutItemsInput, ComponenteEvaluacionUncheckedCreateWithoutItemsInput>
    where?: ComponenteEvaluacionWhereInput
  }

  export type ComponenteEvaluacionUpdateToOneWithWhereWithoutItemsInput = {
    where?: ComponenteEvaluacionWhereInput
    data: XOR<ComponenteEvaluacionUpdateWithoutItemsInput, ComponenteEvaluacionUncheckedUpdateWithoutItemsInput>
  }

  export type ComponenteEvaluacionUpdateWithoutItemsInput = {
    id_componente?: StringFieldUpdateOperationsInput | string
    nombre_componente?: StringFieldUpdateOperationsInput | string
    porcentaje?: IntFieldUpdateOperationsInput | number
    nota_componente?: NullableFloatFieldUpdateOperationsInput | number | null
    evaluacion?: EvaluacionUpdateOneRequiredWithoutComponentesNestedInput
  }

  export type ComponenteEvaluacionUncheckedUpdateWithoutItemsInput = {
    id_componente?: StringFieldUpdateOperationsInput | string
    nombre_componente?: StringFieldUpdateOperationsInput | string
    porcentaje?: IntFieldUpdateOperationsInput | number
    nota_componente?: NullableFloatFieldUpdateOperationsInput | number | null
    id_evaluacion?: StringFieldUpdateOperationsInput | string
  }

  export type EvaluacionCreateWithoutDescripcionFinalInput = {
    id_evaluacion?: string
    fecha_evaluacion: Date | string
    fecha_inicio_practica: Date | string
    fecha_fin_practica: Date | string
    nota_final?: number | null
    reporte_cualitativo?: string | null
    docente: UsuarioCreateNestedOneWithoutEvaluacionesInput
    estudiante: EstudianteCreateNestedOneWithoutEvaluacionesInput
    practica: PracticaCreateNestedOneWithoutEvaluacionesInput
    componentes?: ComponenteEvaluacionCreateNestedManyWithoutEvaluacionInput
  }

  export type EvaluacionUncheckedCreateWithoutDescripcionFinalInput = {
    id_evaluacion?: string
    fecha_evaluacion: Date | string
    fecha_inicio_practica: Date | string
    fecha_fin_practica: Date | string
    nota_final?: number | null
    reporte_cualitativo?: string | null
    id_docente: string
    id_estudiante: string
    id_practica: string
    componentes?: ComponenteEvaluacionUncheckedCreateNestedManyWithoutEvaluacionInput
  }

  export type EvaluacionCreateOrConnectWithoutDescripcionFinalInput = {
    where: EvaluacionWhereUniqueInput
    create: XOR<EvaluacionCreateWithoutDescripcionFinalInput, EvaluacionUncheckedCreateWithoutDescripcionFinalInput>
  }

  export type EvaluacionUpsertWithoutDescripcionFinalInput = {
    update: XOR<EvaluacionUpdateWithoutDescripcionFinalInput, EvaluacionUncheckedUpdateWithoutDescripcionFinalInput>
    create: XOR<EvaluacionCreateWithoutDescripcionFinalInput, EvaluacionUncheckedCreateWithoutDescripcionFinalInput>
    where?: EvaluacionWhereInput
  }

  export type EvaluacionUpdateToOneWithWhereWithoutDescripcionFinalInput = {
    where?: EvaluacionWhereInput
    data: XOR<EvaluacionUpdateWithoutDescripcionFinalInput, EvaluacionUncheckedUpdateWithoutDescripcionFinalInput>
  }

  export type EvaluacionUpdateWithoutDescripcionFinalInput = {
    id_evaluacion?: StringFieldUpdateOperationsInput | string
    fecha_evaluacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    nota_final?: NullableFloatFieldUpdateOperationsInput | number | null
    reporte_cualitativo?: NullableStringFieldUpdateOperationsInput | string | null
    docente?: UsuarioUpdateOneRequiredWithoutEvaluacionesNestedInput
    estudiante?: EstudianteUpdateOneRequiredWithoutEvaluacionesNestedInput
    practica?: PracticaUpdateOneRequiredWithoutEvaluacionesNestedInput
    componentes?: ComponenteEvaluacionUpdateManyWithoutEvaluacionNestedInput
  }

  export type EvaluacionUncheckedUpdateWithoutDescripcionFinalInput = {
    id_evaluacion?: StringFieldUpdateOperationsInput | string
    fecha_evaluacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    nota_final?: NullableFloatFieldUpdateOperationsInput | number | null
    reporte_cualitativo?: NullableStringFieldUpdateOperationsInput | string | null
    id_docente?: StringFieldUpdateOperationsInput | string
    id_estudiante?: StringFieldUpdateOperationsInput | string
    id_practica?: StringFieldUpdateOperationsInput | string
    componentes?: ComponenteEvaluacionUncheckedUpdateManyWithoutEvaluacionNestedInput
  }

  export type EvaluacionCreateManyDocenteInput = {
    id_evaluacion?: string
    fecha_evaluacion: Date | string
    fecha_inicio_practica: Date | string
    fecha_fin_practica: Date | string
    nota_final?: number | null
    reporte_cualitativo?: string | null
    id_estudiante: string
    id_practica: string
  }

  export type EvaluacionUpdateWithoutDocenteInput = {
    id_evaluacion?: StringFieldUpdateOperationsInput | string
    fecha_evaluacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    nota_final?: NullableFloatFieldUpdateOperationsInput | number | null
    reporte_cualitativo?: NullableStringFieldUpdateOperationsInput | string | null
    estudiante?: EstudianteUpdateOneRequiredWithoutEvaluacionesNestedInput
    practica?: PracticaUpdateOneRequiredWithoutEvaluacionesNestedInput
    componentes?: ComponenteEvaluacionUpdateManyWithoutEvaluacionNestedInput
    descripcionFinal?: DescripcionFinalUpdateOneWithoutEvaluacionNestedInput
  }

  export type EvaluacionUncheckedUpdateWithoutDocenteInput = {
    id_evaluacion?: StringFieldUpdateOperationsInput | string
    fecha_evaluacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    nota_final?: NullableFloatFieldUpdateOperationsInput | number | null
    reporte_cualitativo?: NullableStringFieldUpdateOperationsInput | string | null
    id_estudiante?: StringFieldUpdateOperationsInput | string
    id_practica?: StringFieldUpdateOperationsInput | string
    componentes?: ComponenteEvaluacionUncheckedUpdateManyWithoutEvaluacionNestedInput
    descripcionFinal?: DescripcionFinalUncheckedUpdateOneWithoutEvaluacionNestedInput
  }

  export type EvaluacionUncheckedUpdateManyWithoutDocenteInput = {
    id_evaluacion?: StringFieldUpdateOperationsInput | string
    fecha_evaluacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    nota_final?: NullableFloatFieldUpdateOperationsInput | number | null
    reporte_cualitativo?: NullableStringFieldUpdateOperationsInput | string | null
    id_estudiante?: StringFieldUpdateOperationsInput | string
    id_practica?: StringFieldUpdateOperationsInput | string
  }

  export type EvaluacionCreateManyEstudianteInput = {
    id_evaluacion?: string
    fecha_evaluacion: Date | string
    fecha_inicio_practica: Date | string
    fecha_fin_practica: Date | string
    nota_final?: number | null
    reporte_cualitativo?: string | null
    id_docente: string
    id_practica: string
  }

  export type EvaluacionUpdateWithoutEstudianteInput = {
    id_evaluacion?: StringFieldUpdateOperationsInput | string
    fecha_evaluacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    nota_final?: NullableFloatFieldUpdateOperationsInput | number | null
    reporte_cualitativo?: NullableStringFieldUpdateOperationsInput | string | null
    docente?: UsuarioUpdateOneRequiredWithoutEvaluacionesNestedInput
    practica?: PracticaUpdateOneRequiredWithoutEvaluacionesNestedInput
    componentes?: ComponenteEvaluacionUpdateManyWithoutEvaluacionNestedInput
    descripcionFinal?: DescripcionFinalUpdateOneWithoutEvaluacionNestedInput
  }

  export type EvaluacionUncheckedUpdateWithoutEstudianteInput = {
    id_evaluacion?: StringFieldUpdateOperationsInput | string
    fecha_evaluacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    nota_final?: NullableFloatFieldUpdateOperationsInput | number | null
    reporte_cualitativo?: NullableStringFieldUpdateOperationsInput | string | null
    id_docente?: StringFieldUpdateOperationsInput | string
    id_practica?: StringFieldUpdateOperationsInput | string
    componentes?: ComponenteEvaluacionUncheckedUpdateManyWithoutEvaluacionNestedInput
    descripcionFinal?: DescripcionFinalUncheckedUpdateOneWithoutEvaluacionNestedInput
  }

  export type EvaluacionUncheckedUpdateManyWithoutEstudianteInput = {
    id_evaluacion?: StringFieldUpdateOperationsInput | string
    fecha_evaluacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    nota_final?: NullableFloatFieldUpdateOperationsInput | number | null
    reporte_cualitativo?: NullableStringFieldUpdateOperationsInput | string | null
    id_docente?: StringFieldUpdateOperationsInput | string
    id_practica?: StringFieldUpdateOperationsInput | string
  }

  export type EvaluacionCreateManyPracticaInput = {
    id_evaluacion?: string
    fecha_evaluacion: Date | string
    fecha_inicio_practica: Date | string
    fecha_fin_practica: Date | string
    nota_final?: number | null
    reporte_cualitativo?: string | null
    id_docente: string
    id_estudiante: string
  }

  export type EvaluacionUpdateWithoutPracticaInput = {
    id_evaluacion?: StringFieldUpdateOperationsInput | string
    fecha_evaluacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    nota_final?: NullableFloatFieldUpdateOperationsInput | number | null
    reporte_cualitativo?: NullableStringFieldUpdateOperationsInput | string | null
    docente?: UsuarioUpdateOneRequiredWithoutEvaluacionesNestedInput
    estudiante?: EstudianteUpdateOneRequiredWithoutEvaluacionesNestedInput
    componentes?: ComponenteEvaluacionUpdateManyWithoutEvaluacionNestedInput
    descripcionFinal?: DescripcionFinalUpdateOneWithoutEvaluacionNestedInput
  }

  export type EvaluacionUncheckedUpdateWithoutPracticaInput = {
    id_evaluacion?: StringFieldUpdateOperationsInput | string
    fecha_evaluacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    nota_final?: NullableFloatFieldUpdateOperationsInput | number | null
    reporte_cualitativo?: NullableStringFieldUpdateOperationsInput | string | null
    id_docente?: StringFieldUpdateOperationsInput | string
    id_estudiante?: StringFieldUpdateOperationsInput | string
    componentes?: ComponenteEvaluacionUncheckedUpdateManyWithoutEvaluacionNestedInput
    descripcionFinal?: DescripcionFinalUncheckedUpdateOneWithoutEvaluacionNestedInput
  }

  export type EvaluacionUncheckedUpdateManyWithoutPracticaInput = {
    id_evaluacion?: StringFieldUpdateOperationsInput | string
    fecha_evaluacion?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_inicio_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_fin_practica?: DateTimeFieldUpdateOperationsInput | Date | string
    nota_final?: NullableFloatFieldUpdateOperationsInput | number | null
    reporte_cualitativo?: NullableStringFieldUpdateOperationsInput | string | null
    id_docente?: StringFieldUpdateOperationsInput | string
    id_estudiante?: StringFieldUpdateOperationsInput | string
  }

  export type ComponenteEvaluacionCreateManyEvaluacionInput = {
    id_componente?: string
    nombre_componente: string
    porcentaje: number
    nota_componente?: number | null
  }

  export type ComponenteEvaluacionUpdateWithoutEvaluacionInput = {
    id_componente?: StringFieldUpdateOperationsInput | string
    nombre_componente?: StringFieldUpdateOperationsInput | string
    porcentaje?: IntFieldUpdateOperationsInput | number
    nota_componente?: NullableFloatFieldUpdateOperationsInput | number | null
    items?: ItemEvaluacionUpdateManyWithoutComponenteNestedInput
  }

  export type ComponenteEvaluacionUncheckedUpdateWithoutEvaluacionInput = {
    id_componente?: StringFieldUpdateOperationsInput | string
    nombre_componente?: StringFieldUpdateOperationsInput | string
    porcentaje?: IntFieldUpdateOperationsInput | number
    nota_componente?: NullableFloatFieldUpdateOperationsInput | number | null
    items?: ItemEvaluacionUncheckedUpdateManyWithoutComponenteNestedInput
  }

  export type ComponenteEvaluacionUncheckedUpdateManyWithoutEvaluacionInput = {
    id_componente?: StringFieldUpdateOperationsInput | string
    nombre_componente?: StringFieldUpdateOperationsInput | string
    porcentaje?: IntFieldUpdateOperationsInput | number
    nota_componente?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type ItemEvaluacionCreateManyComponenteInput = {
    id_item?: string
    enunciado: string
    nota?: number | null
  }

  export type ItemEvaluacionUpdateWithoutComponenteInput = {
    id_item?: StringFieldUpdateOperationsInput | string
    enunciado?: StringFieldUpdateOperationsInput | string
    nota?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type ItemEvaluacionUncheckedUpdateWithoutComponenteInput = {
    id_item?: StringFieldUpdateOperationsInput | string
    enunciado?: StringFieldUpdateOperationsInput | string
    nota?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type ItemEvaluacionUncheckedUpdateManyWithoutComponenteInput = {
    id_item?: StringFieldUpdateOperationsInput | string
    enunciado?: StringFieldUpdateOperationsInput | string
    nota?: NullableFloatFieldUpdateOperationsInput | number | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}